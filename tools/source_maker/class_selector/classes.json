{
	"wxScrolledWindow":{
		"_implements":[
			"wxPanel",
			"wxScrolled"
		],
		"wxScrolledWindow":[
			{
				"return_type":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_name":[
					"parent",
					"winid",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxScrolledWindowStyle",
					"wxPanelNameStr"
				]
			}
		]
	},
	"wxRibbonButtonBarButtonBase":{
		"_implements":[
			"dummy"
		],
		"_forward_declaration":true
	},
	"wxRibbonGalleryItem":{
		"_implements":[
			"dummy"
		],
		"_forward_declaration":true
	},
	"wxRibbonToolBarToolBase":{
		"_implements":[
			"dummy"
		],
		"_forward_declaration":true
	},
	"wxAboutDialogInfo":{
		"wxAboutDialogInfo":[
			{
				"return_type":"",
				"brief_description":"Default constructor leaves all fields are initially uninitialized, in general you should call at least SetVersion(), SetCopyright() and SetDescription().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWebSite":[
			{
				"return_type":"void",
				"brief_description":"Set the web site for the program and its description (which defaults to url itself if empty).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"url",
					"desc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"SetVersion":[
			{
				"return_type":"void",
				"brief_description":"Set the version of the program.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"version",
					"longVersion"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxString()"
				]
			}
		],
		"AddDeveloper":[
			{
				"return_type":"void",
				"brief_description":"Adds a developer name to be shown in the program credits.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"developer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddDocWriter":[
			{
				"return_type":"void",
				"brief_description":"Adds a documentation writer name to be shown in the program credits.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"docwriter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddTranslator":[
			{
				"return_type":"void",
				"brief_description":"Adds a translator name to be shown in the program credits.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"translator"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCopyright":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the copyright string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDescription":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the description string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasCopyright":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a copyright string has been specified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasDescription":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a description string has been specified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetArtists":[
			{
				"return_type":"void",
				"brief_description":"Sets the list of artists to be shown in the program credits.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"artists"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCopyright":[
			{
				"return_type":"void",
				"brief_description":"Set the short string containing the program copyright information.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"copyright"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDescription":[
			{
				"return_type":"void",
				"brief_description":"Set brief, but possibly multiline, description of the program.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"desc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDevelopers":[
			{
				"return_type":"void",
				"brief_description":"Set the list of developers of the program.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"developers"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDocWriters":[
			{
				"return_type":"void",
				"brief_description":"Set the list of documentation writers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"docwriters"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIcon":[
			{
				"return_type":"void",
				"brief_description":"Set the icon to be shown in the dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLicence":[
			{
				"return_type":"void",
				"brief_description":"Set the long, multiline string containing the text of the program licence.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"licence"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLicense":[
			{
				"return_type":"void",
				"brief_description":"This is the same as SetLicence().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"licence"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Set the name of the program.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTranslators":[
			{
				"return_type":"void",
				"brief_description":"Set the list of translators.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"translators"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddArtist":[
			{
				"return_type":"void",
				"brief_description":"Adds an artist name to be shown in the program credits.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"artist"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Get the name of the program.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxGridCellCoords":{
		"wxGridCellCoords":[
			{
				"return_type":"",
				"brief_description":"Default constructor initializes the object to invalid state.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a row and a column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRow":[
			{
				"return_type":"int",
				"brief_description":"Return the row of the coordinate.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetRow":[
			{
				"return_type":"void",
				"brief_description":"Set the row of the coordinate.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCol":[
			{
				"return_type":"int",
				"brief_description":"Return the column of the coordinate.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCol":[
			{
				"return_type":"void",
				"brief_description":"Set the column of the coordinate.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Set":[
			{
				"return_type":"void",
				"brief_description":"Set the row and column of the coordinate.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxFrame":{
		"_implements":[
			"wxTopLevelWindow"
		],
		"wxFrame":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE",
					"wxFrameNameStr"
				]
			}
		],
		"Centre":[
			{
				"return_type":"void",
				"brief_description":"Centres the frame on the display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Used in two-step frame construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE",
					"wxFrameNameStr"
				]
			}
		],
		"SetStatusBar":[
			{
				"return_type":"void",
				"brief_description":"Associates a status bar with the frame.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxStatusBar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"statusBar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStatusBarPane":[
			{
				"return_type":"void",
				"brief_description":"Set the status bar pane used to display menu and toolbar help.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStatusText":[
			{
				"return_type":"void",
				"brief_description":"Sets the status bar text and redraws the status bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"number"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"SetMenuBar":[
			{
				"return_type":"void",
				"brief_description":"Tells the frame to show the given menu bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenuBar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menuBar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMenuBar":[
			{
				"return_type":"wxMenuBar*",
				"brief_description":"Returns a pointer to the menubar currently associated with the frame (if any).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnCreateStatusBar":[
			{
				"return_type":"wxStatusBar*",
				"brief_description":"Virtual function called when a status bar is requested by CreateStatusBar().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"long",
					"wxWindowID",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"number",
					"style",
					"id",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetStatusBar":[
			{
				"return_type":"wxStatusBar*",
				"brief_description":"Returns a pointer to the status bar currently associated with the frame (if any).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStatusBarPane":[
			{
				"return_type":"int",
				"brief_description":"Returns the status bar pane used to display menu and toolbar help.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClientAreaOrigin":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the origin of the frame client area (in client coordinates).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PopStatusText":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"number"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"ProcessCommand":[
			{
				"return_type":"bool",
				"brief_description":"Simulate a menu command.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PushStatusText":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"number"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"SetStatusWidths":[
			{
				"return_type":"void",
				"brief_description":"Sets the widths of the fields in the status bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"widths_field"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetToolBar":[
			{
				"return_type":"wxToolBar*",
				"brief_description":"Returns a pointer to the toolbar currently associated with the frame (if any).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnCreateToolBar":[
			{
				"return_type":"wxToolBar*",
				"brief_description":"Virtual function called when a toolbar is requested by CreateToolBar().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxWindowID",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"style",
					"id",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetToolBar":[
			{
				"return_type":"void",
				"brief_description":"Associates a toolbar with the frame.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolBar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolBar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CreateStatusBar":[
			{
				"return_type":"wxStatusBar*",
				"brief_description":"Creates a status bar at the bottom of the frame.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"long",
					"wxWindowID",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"number",
					"style",
					"id",
					"name"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1",
					"wxSTB_DEFAULT_STYLE",
					"0",
					"wxStatusBarNameStr"
				]
			}
		],
		"CreateToolBar":[
			{
				"return_type":"wxToolBar*",
				"brief_description":"Creates a toolbar at the top or left of the frame.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxWindowID",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"style",
					"id",
					"name"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxTB_DEFAULT_STYLE",
					"wxID_ANY",
					"wxToolBarNameStr"
				]
			}
		]
	},
	"wxTopLevelWindow":{
		"_implements":[
			"wxNonOwnedWindow"
		],
		"wxTopLevelWindow":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creating the top level window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE",
					"wxFrameNameStr"
				]
			}
		],
		"SetTitle":[
			{
				"return_type":"void",
				"brief_description":"Sets the window title.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Maximize":[
			{
				"return_type":"void",
				"brief_description":"Maximizes or restores the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"maximize"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"GetTitle":[
			{
				"return_type":"wxString",
				"brief_description":"Gets a string containing the window title.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowFullScreen":[
			{
				"return_type":"bool",
				"brief_description":"Depending on the value of show parameter the window is either shown full screen or restored to its normal state.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"show",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFULLSCREEN_ALL"
				]
			}
		],
		"IsFullScreen":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is in fullscreen mode.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetIcon":[
			{
				"return_type":"void",
				"brief_description":"Sets the icon for this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanSetTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the platform supports making the window translucent.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CentreOnScreen":[
			{
				"return_type":"void",
				"brief_description":"Centres the window on screen.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"CenterOnScreen":[
			{
				"return_type":"void",
				"brief_description":"A synonym for CentreOnScreen().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the top level window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE",
					"wxFrameNameStr"
				]
			}
		],
		"GetDefaultItem":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns a pointer to the button which is the default for this window, or  NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the default size for a new top level window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIcon":[
			{
				"return_type":"wxIcon",
				"brief_description":"Returns the standard icon of the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIcons":[
			{
				"return_type":"const wxIconBundle&",
				"brief_description":"Returns all icons associated with the window, there will be none of them if neither SetIcon() nor SetIcons() had been called before.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTmpDefaultItem":[
			{
				"return_type":"wxWindow*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Iconize":[
			{
				"return_type":"void",
				"brief_description":"Iconizes or restores the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"iconize"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"IsActive":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window is currently active, i.e. if the user is currently working with it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAlwaysMaximized":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window is expected to be always maximized, either due to platform policy or due to local policy regarding particular class.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsIconized":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is iconized.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsMaximized":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is maximized.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Layout":[
			{
				"return_type":"bool",
				"brief_description":"See wxWindow::SetAutoLayout(): when auto layout is on, this function gets called automatically when the window is resized.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RequestUserAttention":[
			{
				"return_type":"void",
				"brief_description":"Use a system-dependent way to attract users attention to the window when it is in background.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxUSER_ATTENTION_INFO"
				]
			}
		],
		"SetDefaultItem":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Changes the default item for the panel, usually win is a button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIcons":[
			{
				"return_type":"void",
				"brief_description":"Sets several icons of different sizes for this window: this allows to use different icons for different situations (e.g.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIconBundle&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icons"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMaxSize":[
			{
				"return_type":"void",
				"brief_description":"A simpler interface for setting the size hints than SetSizeHints().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinSize":[
			{
				"return_type":"void",
				"brief_description":"A simpler interface for setting the size hints than SetSizeHints().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSizeHints":[
			{
				"return_type":"void",
				"brief_description":"Allows specification of minimum and maximum window sizes, and window size increments.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"minW",
					"minH",
					"maxW",
					"maxH",
					"incW",
					"incH"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"-1",
					"-1"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Allows specification of minimum and maximum window sizes, and window size increments.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"const wxSize&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"minSize",
					"maxSize",
					"incSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDefaultSize",
					"wxDefaultSize"
				]
			}
		],
		"SetTmpDefaultItem":[
			{
				"return_type":"wxWindow*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTransparent":[
			{
				"return_type":"bool",
				"brief_description":"If the platform supports it will set the window to be translucent.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxByte"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alpha"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShouldPreventAppExit":[
			{
				"return_type":"bool",
				"brief_description":"This virtual function is not meant to be called directly but can be overridden to return false (it returns true by default) to allow the application to close even if this, presumably not very important, window is still opened.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxNonOwnedWindow":{
		"_implements":[
			"wxWindow"
		],
		"SetShape":[
			{
				"return_type":"bool",
				"brief_description":"If the platform supports it, sets the shape of the window to that depicted by region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxWindow":{
		"_implements":[
			"wxEvtHandler"
		],
		"wxWindow":[
			{
				"return_type":"",
				"brief_description":"Constructs a window, which can be a child of a frame, dialog or any other non-control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxPanelNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Show":[
			{
				"return_type":"bool",
				"brief_description":"Shows or hides the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"FindWindowById":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Find the first window with the given id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"FindWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Find a child of this window, by name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxWindow*",
				"brief_description":"Find a child of this window, by id.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Enable":[
			{
				"return_type":"bool",
				"brief_description":"Enable or disable the window for user input.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Disable":[
			{
				"return_type":"bool",
				"brief_description":"Disables the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Close":[
			{
				"return_type":"bool",
				"brief_description":"This function simply generates a wxCloseEvent whose handler usually tries to close the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"force"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"SetSizer":[
			{
				"return_type":"void",
				"brief_description":"Sets the window to have the given layout sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"deleteOld"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetSizerAndFit":[
			{
				"return_type":"void",
				"brief_description":"This method calls SetSizer() and then wxSizer::SetSizeHints which sets the initial window size to the size needed to accommodate all sizer elements and sets the size hints which, if this window is a top level one, prevent the user from resizing it to be less than this minimal size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"deleteOld"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetToolTip":[
			{
				"return_type":"void",
				"brief_description":"Attach a tooltip to the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tipString"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolTip*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWindowStyle":[
			{
				"return_type":"void",
				"brief_description":"See SetWindowStyleFlag() for more info.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWindowStyleFlag":[
			{
				"return_type":"void",
				"brief_description":"Sets the style of the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Update":[
			{
				"return_type":"void",
				"brief_description":"Calling this method immediately repaints the invalidated area of the window and all of its children recursively (this normally only happens when the flow of control returns to the event loop).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UpdateWindowUI":[
			{
				"return_type":"void",
				"brief_description":"This function sends one or more wxUpdateUIEvent to the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxUPDATE_UI_NONE"
				]
			}
		],
		"Validate":[
			{
				"return_type":"bool",
				"brief_description":"Validates the current values of the child controls using their validators.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WarpPointer":[
			{
				"return_type":"void",
				"brief_description":"Moves the pointer to the given position on the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"WindowToClientSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Converts window size size to corresponding client area size In other words, the returned value is what would GetClientSize() return if this window had given window size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UnsetToolTip":[
			{
				"return_type":"void",
				"brief_description":"Unset any existing tooltip.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UnreserveControlId":[
			{
				"return_type":"void",
				"brief_description":"Unreserve an ID or range of IDs that was reserved by NewControlId().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxWindowID",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"count"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"1"
				]
			}
		],
		"TransferDataToWindow":[
			{
				"return_type":"bool",
				"brief_description":"Transfers values to child controls from data areas specified by their validators.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TransferDataFromWindow":[
			{
				"return_type":"bool",
				"brief_description":"Transfers values from child controls to data areas specified by their validators.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToggleWindowStyle":[
			{
				"return_type":"bool",
				"brief_description":"Turns the given flag on if it's currently turned off and vice versa.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Thaw":[
			{
				"return_type":"void",
				"brief_description":"Re-enables window updating after a previous call to Freeze().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShouldInheritColours":[
			{
				"return_type":"bool",
				"brief_description":"Return true from here to allow the colours of this window to be changed by InheritAttributes().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetVirtualSize":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the virtual size of the window in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetValidator":[
			{
				"return_type":"void",
				"brief_description":"Deletes the current validator (if any) and sets the window validator, having called wxValidator::Clone to create a new validator of this type.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxValidator&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"validator"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Set the transparency of the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxByte"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alpha"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSizeHints":[
			{
				"return_type":"void",
				"brief_description":"Prepare for changing positions of multiple child windows.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"minW",
					"minH",
					"maxW",
					"maxH",
					"incW",
					"incH"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"-1",
					"-1"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Use of this function for windows which are not toplevel windows (such as wxDialog or wxFrame) is discouraged.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"const wxSize&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"minSize",
					"maxSize",
					"incSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDefaultSize",
					"wxDefaultSize"
				]
			}
		],
		"SetSize":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the size of the window in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the size of the window in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height",
					"sizeFlags"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxSIZE_AUTO"
				]
			}
		],
		"SetScrollbar":[
			{
				"return_type":"void",
				"brief_description":"Sets the scrollbar properties of a built-in scrollbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"orientation",
					"position",
					"thumbSize",
					"range",
					"refresh"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"true"
				]
			}
		],
		"SetScrollPos":[
			{
				"return_type":"void",
				"brief_description":"Sets the position of one of the built-in scrollbars.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"orientation",
					"pos",
					"refresh"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true"
				]
			}
		],
		"AcceptsFocus":[
			{
				"return_type":"bool",
				"brief_description":"This method may be overridden in the derived classes to return false to indicate that this control doesn't accept input at all (i.e. behaves like e.g. wxStaticText) and so doesn't need focus.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AcceptsFocusFromKeyboard":[
			{
				"return_type":"bool",
				"brief_description":"This method may be overridden in the derived classes to return false to indicate that while this control can, in principle, have focus if the user clicks it with the mouse, it shouldn't be included in the TAB traversal chain when using the keyboard.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AcceptsFocusRecursively":[
			{
				"return_type":"bool",
				"brief_description":"Overridden to indicate whether this window or one of its children accepts focus.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddChild":[
			{
				"return_type":"void",
				"brief_description":"Adds a child window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"child"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddPendingEvent":[
			{
				"return_type":"void",
				"brief_description":"See ProcessEvent() for more info about why you shouldn't use this function and the reason for making this function protected in wxWindow.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AlwaysShowScrollbars":[
			{
				"return_type":"void",
				"brief_description":"Call this function to force one or both scrollbars to be always shown, even if the window is big enough to show its entire contents without scrolling.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"hflag",
					"vflag"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true",
					"true"
				]
			}
		],
		"CacheBestSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the cached best size value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanScroll":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window can have a scroll bar in this orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanSetTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the system supports transparent windows and calling SetTransparent() may succeed.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CaptureMouse":[
			{
				"return_type":"void",
				"brief_description":"Directs all mouse input to this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Center":[
			{
				"return_type":"void",
				"brief_description":"A synonym for Centre().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"CenterOnParent":[
			{
				"return_type":"void",
				"brief_description":"A synonym for CentreOnParent().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"Centre":[
			{
				"return_type":"void",
				"brief_description":"Centres the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"CentreOnParent":[
			{
				"return_type":"void",
				"brief_description":"Centres the window on its parent.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"ClearBackground":[
			{
				"return_type":"void",
				"brief_description":"Clears the window by filling it with the current background colour.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClientToScreen":[
			{
				"return_type":"wxPoint",
				"brief_description":"Converts to screen coordinates from coordinates relative to this window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClientToWindowSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Converts client area size size to corresponding window size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ConvertDialogToPixels":[
			{
				"return_type":"wxPoint",
				"brief_description":"Converts a point or size from dialog units to pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sz"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ConvertPixelsToDialog":[
			{
				"return_type":"wxPoint",
				"brief_description":"Converts a point or size from pixels to dialog units.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sz"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxPanelNameStr"
				]
			}
		],
		"DragAcceptFiles":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables eligibility for drop file events (OnDropFiles).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"accept"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DoUpdateWindowUI":[
			{
				"return_type":"void",
				"brief_description":"Does the window-specific updating after processing the update event.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUpdateUIEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindFocus":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Finds the window or control which currently has the keyboard focus.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindWindowByLabel":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Find a window by its label.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"label",
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"FindWindowByName":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Find a window by its name (as given in a window constructor or Create() function call).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"Fit":[
			{
				"return_type":"void",
				"brief_description":"Sizes the window so that it fits around its subwindows.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FitInside":[
			{
				"return_type":"void",
				"brief_description":"Similar to Fit(), but sizes the interior (virtual) size of a window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Freeze":[
			{
				"return_type":"void",
				"brief_description":"Freezes the window or, in other words, prevents any updates from taking place on screen, the window is not redrawn at all.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAutoLayout":[
			{
				"return_type":"bool",
				"brief_description":"Returns the sizer of which this window is a member, if any, otherwise NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the background colour of the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBackgroundStyle":[
			{
				"return_type":"wxBackgroundStyle",
				"brief_description":"Returns the background style of the window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBestSize":[
			{
				"return_type":"wxSize",
				"brief_description":"This functions returns the best acceptable minimal size for the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBestVirtualSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Return the largest of ClientSize and BestSize (as determined by a sizer, interior children, or other means)",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBorder":[
			{
				"return_type":"wxBorder",
				"brief_description":"Get the window border style from the given flags: this is different from simply doing flags & wxBORDER_MASK because it uses GetDefaultBorder() to translate wxBORDER_DEFAULT to something reasonable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxBorder",
				"brief_description":"Get border for the flags of this window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCapture":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the currently captured window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaret":[
			{
				"return_type":"wxCaret*",
				"brief_description":"Returns the caret() associated with the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the character height for this window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the average character width for this window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Destroy":[
			{
				"return_type":"bool",
				"brief_description":"Destroys the window safely.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DestroyChildren":[
			{
				"return_type":"bool",
				"brief_description":"Destroys all children of a window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClientAreaOrigin":[
			{
				"return_type":"wxPoint",
				"brief_description":"Get the origin of the client area of the window relative to the window top left corner (the client area may be shifted because of the borders, scrollbars, other decorations...)",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClientRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Get the client rectangle in window (i.e. client) coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClientSize":[
			{
				"return_type":"wxSize",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetContainingSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"Returns the sizer of which this window is a member, if any, otherwise NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCursor":[
			{
				"return_type":"const wxCursor&",
				"brief_description":"Return the cursor associated with this window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEffectiveMinSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Merges the window's best size into the min size and returns the result.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEventHandler":[
			{
				"return_type":"wxEvtHandler*",
				"brief_description":"Returns the event handler for this window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtraStyle":[
			{
				"return_type":"long",
				"brief_description":"Returns the extra style bits for the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the font for this window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetForegroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the foreground colour of the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGrandParent":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the grandparent of a window, or NULL if there isn't one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHandle":[
			{
				"return_type":"WXWidget",
				"brief_description":"Returns the platform-specific handle of the physical window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHelpText":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the help text to be used as context-sensitive help for this window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHelpTextAtPoint":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the help text to be used as context-sensitive help for this window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"wxHelpEvent::Origin"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"point",
					"origin"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetId":[
			{
				"return_type":"wxWindowID",
				"brief_description":"Returns the identifier of the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Generic way of getting a label from any window, for identification purposes.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaxClientSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the maximum size of window's client area.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaxHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the vertical component of window maximal size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaxSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the maximum size of the window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaxWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the horizontal component of window maximal size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinClientSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the minimum size of window's client area, an indication to the sizer layout mechanism that this is the minimum required size of its client area.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the vertical component of window minimal size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the minimum size of the window, an indication to the sizer layout mechanism that this is the minimum required size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the horizontal component of window minimal size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the window's name.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNextSibling":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the next window after this one among the parent's children or NULL if this window is the last child.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParent":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the parent of the window, or NULL if there is no parent.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPopupMenuSelectionFromUser":[
			{
				"return_type":"int",
				"brief_description":"This function shows a popup menu at the given position in this window and returns the selected id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"menu",
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDefaultPosition"
				]
			},
			{
				"return_type":"int",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"menu",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"This gets the position of the window in pixels, relative to the parent window for the child windows or relative to the display origin for the top level windows.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrevSibling":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the previous window before this one among the parent's children or  NULL if this window is the first child.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the position and size of the window as a wxRect object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScreenPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the window position in screen coordinates, whether the window is a child window or a top level one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScreenRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the position and size of the window on the screen as a wxRect object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScrollPos":[
			{
				"return_type":"int",
				"brief_description":"Returns the built-in scrollbar position.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetScrollRange":[
			{
				"return_type":"int",
				"brief_description":"Returns the built-in scrollbar range.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetScrollThumb":[
			{
				"return_type":"int",
				"brief_description":"Returns the built-in scrollbar thumb size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"See the GetSize(int*,int*) overload for more info.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"Returns the sizer associated with the window by a previous call to SetSizer(), or NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextExtent":[
			{
				"return_type":"wxSize",
				"brief_description":"Gets the dimensions of the string as it would be drawn on the window with the currently selected font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolTip":[
			{
				"return_type":"wxToolTip*",
				"brief_description":"Get the associated tooltip or NULL if none.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolTipText":[
			{
				"return_type":"wxString",
				"brief_description":"Get the text of the associated tooltip or empty string if none.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUpdateClientRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Get the update rectangle bounding box in client coords.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUpdateRegion":[
			{
				"return_type":"const wxRegion&",
				"brief_description":"Returns the region specifying which parts of the window have been damaged.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValidator":[
			{
				"return_type":"wxValidator*",
				"brief_description":"Validator functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVirtualSize":[
			{
				"return_type":"wxSize",
				"brief_description":"This gets the virtual size of the window in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindowBorderSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of the left\/right and top\/bottom borders of this window in x and y components of the result respectively.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindowStyle":[
			{
				"return_type":"long",
				"brief_description":"See GetWindowStyleFlag() for more info.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindowStyleFlag":[
			{
				"return_type":"long",
				"brief_description":"Gets the window style that was passed to the constructor or Create() method.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindowVariant":[
			{
				"return_type":"wxWindowVariant",
				"brief_description":"Returns the value previously passed to SetWindowVariant().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HandleAsNavigationKey":[
			{
				"return_type":"bool",
				"brief_description":"This function will generate the appropriate call to Navigate() if the key event is one normally used for keyboard navigation and return true in this case.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxKeyEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HandleWindowEvent":[
			{
				"return_type":"bool",
				"brief_description":"Shorthand for:",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasCapture":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window has the current mouse capture.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasExtraStyle":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window has the given exFlag bit set in its extra styles.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"exFlag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasFlag":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window has the given flag bit set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasFocus":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window (or in case of composite controls, its main child window) has focus.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasMultiplePages":[
			{
				"return_type":"bool",
				"brief_description":"This method should be overridden to return true if this window has multiple pages.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasScrollbar":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window currently has a scroll bar for this orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasTransparentBackground":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window background is transparent (as, for example, for wxStaticText) and should show the parent window background.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Hide":[
			{
				"return_type":"bool",
				"brief_description":"Equivalent to calling wxWindow::Show(false).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HitTest":[
			{
				"return_type":"wxHitTest",
				"brief_description":"Get the window border style from the given flags: this is different from simply doing flags & wxBORDER_MASK because it uses GetDefaultBorder() to translate wxBORDER_DEFAULT to something reasonable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxHitTest",
				"brief_description":"Get the window border style from the given flags: this is different from simply doing flags & wxBORDER_MASK because it uses GetDefaultBorder() to translate wxBORDER_DEFAULT to something reasonable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLayoutDirection":[
			{
				"return_type":"wxLayoutDirection",
				"brief_description":"Returns the layout direction for this window, Note that wxLayout_Default is returned if layout direction is not supported.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InitDialog":[
			{
				"return_type":"void",
				"brief_description":"Sends an wxEVT_INIT_DIALOG event, whose handler usually transfers data to the dialog via validators.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InheritAttributes":[
			{
				"return_type":"void",
				"brief_description":"This function is (or should be, in case of custom controls) called during window creation to intelligently set up the window visual attributes, that is the font and the foreground and background colours.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InformFirstDirection":[
			{
				"return_type":"bool",
				"brief_description":"wxSizer and friends use this to give a chance to a component to recalc its min size once one of the final size components is known.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"direction",
					"size",
					"availableOtherDir"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"InvalidateBestSize":[
			{
				"return_type":"void",
				"brief_description":"Resets the cached best size value so it will be recalculated the next time it is needed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsBeingDeleted":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window is in process of being destroyed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDoubleBuffered":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window contents is double-buffered by the system, i.e. if any drawing done on the window is really done on a temporary backing surface and transferred to the screen all at once later.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is enabled, i.e. if it accepts user input, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsExposed":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given point or rectangle area has been exposed since the last repaint.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"w",
					"h"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsFrozen":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is currently frozen by a call to Freeze().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsRetained":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is retained, false otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsScrollbarAlwaysShown":[
			{
				"return_type":"bool",
				"brief_description":"Return whether a scrollbar is always shown.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is shown, false if it has been hidden.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsShownOnScreen":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is physically visible on the screen, i.e. it is shown and all its parents up to the toplevel window are shown as well.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsThisEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window is intrinsically enabled, false otherwise, i.e. if Enable() Enable(false) had been called.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsTopLevel":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given window is a top-level one.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Layout":[
			{
				"return_type":"bool",
				"brief_description":"Invokes the constraint-based layout algorithm or the sizer-based algorithm for this window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineDown":[
			{
				"return_type":"bool",
				"brief_description":"Same as ScrollLines (1).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineUp":[
			{
				"return_type":"bool",
				"brief_description":"Same as ScrollLines (-1).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Lower":[
			{
				"return_type":"void",
				"brief_description":"Lowers the window to the bottom of the window hierarchy (Z-order).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Move":[
			{
				"return_type":"void",
				"brief_description":"Moves the window to the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxSIZE_USE_EXISTING"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Moves the window to the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxSIZE_USE_EXISTING"
				]
			}
		],
		"MoveAfterInTabOrder":[
			{
				"return_type":"void",
				"brief_description":"Moves this window in the tab navigation order after the specified win.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveBeforeInTabOrder":[
			{
				"return_type":"void",
				"brief_description":"Same as MoveAfterInTabOrder() except that it inserts this window just before win instead of putting it right after it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Navigate":[
			{
				"return_type":"bool",
				"brief_description":"Performs a keyboard navigation action starting from this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxNavigationKeyEvent::IsForward"
				]
			}
		],
		"NavigateIn":[
			{
				"return_type":"bool",
				"brief_description":"Performs a keyboard navigation action inside this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxNavigationKeyEvent::IsForward"
				]
			}
		],
		"NewControlId":[
			{
				"return_type":"wxWindowID",
				"brief_description":"Create a new ID or range of IDs that are not currently in use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"count"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"OnInternalIdle":[
			{
				"return_type":"void",
				"brief_description":"This virtual function is normally only used internally, but sometimes an application may need it to implement functionality that should not be disabled by an application defining an OnIdle handler in a derived class.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageDown":[
			{
				"return_type":"bool",
				"brief_description":"Same as ScrollPages (1).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageUp":[
			{
				"return_type":"bool",
				"brief_description":"Same as ScrollPages (-1).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PopupMenu":[
			{
				"return_type":"bool",
				"brief_description":"Pops up the given menu at the specified coordinates, relative to this window, and returns control when the user has dismissed the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"menu",
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDefaultPosition"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"menu",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"PostSizeEvent":[
			{
				"return_type":"void",
				"brief_description":"Posts a size event to the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PostSizeEventToParent":[
			{
				"return_type":"void",
				"brief_description":"Posts a size event to the parent of this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ProcessEvent":[
			{
				"return_type":"bool",
				"brief_description":"This function is public in wxEvtHandler but protected in wxWindow because for wxWindows you should always call ProcessEvent() on the pointer returned by GetEventHandler() and not on the wxWindow object itself.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ProcessWindowEvent":[
			{
				"return_type":"bool",
				"brief_description":"Convenient wrapper for ProcessEvent().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ProcessWindowEventLocally":[
			{
				"return_type":"bool",
				"brief_description":"Wrapper for wxEvtHandler::ProcessEventLocally().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PushEventHandler":[
			{
				"return_type":"void",
				"brief_description":"Pushes this event handler onto the event stack for the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"QueueEvent":[
			{
				"return_type":"void",
				"brief_description":"See ProcessEvent() for more info about why you shouldn't use this function and the reason for making this function protected in wxWindow.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxEvent*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Raise":[
			{
				"return_type":"void",
				"brief_description":"Raises the window to the top of the window hierarchy (Z-order).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Refresh":[
			{
				"return_type":"void",
				"brief_description":"Causes this window, and all of its children recursively (except under wxGTK1 where this is not implemented), to be repainted.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxRect*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"eraseBackground",
					"rect"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true",
					"NULL"
				]
			}
		],
		"RefreshRect":[
			{
				"return_type":"void",
				"brief_description":"Redraws the contents of the given rectangle: only the area inside it will be repainted.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"rect",
					"eraseBackground"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"ReleaseMouse":[
			{
				"return_type":"void",
				"brief_description":"Releases mouse input captured with CaptureMouse().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RemoveChild":[
			{
				"return_type":"void",
				"brief_description":"Removes a child window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"child"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveEventHandler":[
			{
				"return_type":"bool",
				"brief_description":"Find the given handler in the windows event handler stack and removes (but does not delete) it from the stack.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Reparent":[
			{
				"return_type":"bool",
				"brief_description":"Reparents the window, i.e. the window will be removed from its current parent window (e.g.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"newParent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SafelyProcessEvent":[
			{
				"return_type":"bool",
				"brief_description":"See ProcessEvent() for more info about why you shouldn't use this function and the reason for making this function protected in wxWindow.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ScreenToClient":[
			{
				"return_type":"wxPoint",
				"brief_description":"Converts from screen to client window coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ScrollLines":[
			{
				"return_type":"bool",
				"brief_description":"Scrolls the window by the given number of lines down (if lines is positive) or up.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lines"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ScrollPages":[
			{
				"return_type":"bool",
				"brief_description":"Scrolls the window by the given number of pages down (if pages is positive) or up.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pages"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SendDestroyEvent":[
			{
				"return_type":"void",
				"brief_description":"Generate wxWindowDestroyEvent for this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SendSizeEvent":[
			{
				"return_type":"void",
				"brief_description":"This function sends a dummy size event to the window allowing it to re-layout its children positions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"SendSizeEventToParent":[
			{
				"return_type":"void",
				"brief_description":"Safe wrapper for GetParent()->SendSizeEvent().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"SetAutoLayout":[
			{
				"return_type":"void",
				"brief_description":"Determines whether the Layout() function will be called automatically when the window is resized.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"autoLayout"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"bool",
				"brief_description":"Sets the background colour of the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackgroundStyle":[
			{
				"return_type":"bool",
				"brief_description":"Sets the background style of the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBackgroundStyle"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCanFocus":[
			{
				"return_type":"void",
				"brief_description":"This method is only implemented by ports which have support for native TAB traversal (such as GTK+ 2.0).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"canFocus"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaret":[
			{
				"return_type":"void",
				"brief_description":"Sets the caret() associated with the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCaret*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"caret"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetClientSize":[
			{
				"return_type":"void",
				"brief_description":"This sets the size of the window client area in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetConstraints":[
			{
				"return_type":"void",
				"brief_description":"Sets the window to have the given layout constraints.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLayoutConstraints*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"constraints"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetContainingSizer":[
			{
				"return_type":"void",
				"brief_description":"This normally does not need to be called by user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCursor":[
			{
				"return_type":"bool",
				"brief_description":"Sets the window's cursor.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxCursor&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cursor"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDropTarget":[
			{
				"return_type":"void",
				"brief_description":"Associates a drop target with this window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDropTarget*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"target"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEventHandler":[
			{
				"return_type":"void",
				"brief_description":"Sets the event handler for this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtraStyle":[
			{
				"return_type":"void",
				"brief_description":"Sets the extra style bits for the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"exStyle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFocus":[
			{
				"return_type":"void",
				"brief_description":"This sets the window to receive keyboard input.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFocusFromKbd":[
			{
				"return_type":"void",
				"brief_description":"This function is called by wxWidgets keyboard navigation code when the user gives the focus to this window from keyboard (e.g.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFont":[
			{
				"return_type":"bool",
				"brief_description":"Sets the font for this window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetForegroundColour":[
			{
				"return_type":"bool",
				"brief_description":"Sets the foreground colour of the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHelpText":[
			{
				"return_type":"void",
				"brief_description":"Sets the help text to be used as context-sensitive help for this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"helpText"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets the identifier of the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"winid"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetInitialBestSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the initial window size if none is given (i.e. at least one of the components of the size passed to ctor\/Create() is wxDefaultCoord).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"SetInitialSize":[
			{
				"return_type":"void",
				"brief_description":"A smart SetSize that will fill in default size components with the window's best size values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxDefaultSize"
				]
			}
		],
		"SetLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the window's label.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLayoutDirection":[
			{
				"return_type":"void",
				"brief_description":"Sets the layout direction for this window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLayoutDirection"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMaxClientSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the maximum client size of the window, to indicate to the sizer layout mechanism that this is the maximum possible size of its client area.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMaxSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the maximum size of the window, to indicate to the sizer layout mechanism that this is the maximum possible size.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinClientSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum client size of the window, to indicate to the sizer layout mechanism that this is the minimum required size of window's client area.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum size of the window, to indicate to the sizer layout mechanism that this is the minimum required size.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Sets the window's name.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNextHandler":[
			{
				"return_type":"void",
				"brief_description":"wxWindows cannot be used to form event handler chains; this function thus will assert when called.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOwnBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the background colour of the window but prevents it from being inherited by the children of this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOwnFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font of the window but prevents it from being inherited by the children of this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOwnForegroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the foreground colour of the window but prevents it from being inherited by the children of this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPalette":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPalette&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pal"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"A synonym for Centre().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPreviousHandler":[
			{
				"return_type":"void",
				"brief_description":"wxWindows cannot be used to form event handler chains; this function thus will assert when called.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetThemeEnabled":[
			{
				"return_type":"void",
				"brief_description":"This function tells a window if it should use the system's \"theme\" code to draw the windows' background instead of its own background drawing code.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWindowVariant":[
			{
				"return_type":"void",
				"brief_description":"This function can be called under all platforms but only does anything under Mac OS X 10.3+ currently.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowVariant"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"variant"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxSize":{
		"wxSize":[
			{
				"return_type":"",
				"brief_description":"Initializes this size object with zero width and height.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes this size object with the given width and height.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the height.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaults":[
			{
				"return_type":"void",
				"brief_description":"Combine this size object with another one replacing the default (i.e. equal to -1) components of this object with those of the other.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizeDefault"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Set":[
			{
				"return_type":"void",
				"brief_description":"Sets the width and height members.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetHeight":[
			{
				"return_type":"int",
				"brief_description":"Gets the height member.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Gets the width member.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsFullySpecified":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if neither of the size object components is equal to -1, which is used as default for the size values in wxWidgets (hence the predefined wxDefaultSize has both of its components equal to -1).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Scale":[
			{
				"return_type":"wxSize&",
				"brief_description":"Scales the dimensions of this object by the given factors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"float",
					"float"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xscale",
					"yscale"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DecTo":[
			{
				"return_type":"void",
				"brief_description":"Decrements this object so that both of its dimensions are not greater than the corresponding dimensions of the size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IncTo":[
			{
				"return_type":"void",
				"brief_description":"Increments this object so that both of its dimensions are not less than the corresponding dimensions of the size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxPoint":{
		"wxPoint":[
			{
				"return_type":"",
				"brief_description":"Constructs a point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes the point object with the given x and y coordinates.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Converts the given wxRealPoint (with floating point coordinates) to a wxPoint instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRealPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsFullySpecified":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if neither of the point components is equal to wxDefaultCoord.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxRealPoint":{
		"wxRealPoint":[
			{
				"return_type":"",
				"brief_description":"Initializes to zero the x and y members.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes the point with the given coordinates.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Converts the given wxPoint (with integer coordinates) to a wxRealPoint.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxEvtHandler":{
		"_implements":[
			"wxObject"
		],
		"wxEvtHandler":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Connect":[
			{
				"return_type":"void",
				"brief_description":"Connects the given function dynamically with the event handler, id and event type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxEventType",
					"wxObjectEventFunction",
					"wxObject*",
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"lastId",
					"eventType",
					"function",
					"userData",
					"eventSink"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"NULL",
					"NULL"
				]
			}
		],
		"Disconnect":[
			{
				"return_type":"bool",
				"brief_description":"Disconnects functions dynamically from the event handler, using the specified parameters as search criteria and returning true if a matching function has been found and removed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxEventType"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"lastId",
					"eventType"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"AddFilter":[
			{
				"return_type":"void",
				"brief_description":"Add an event filter whose FilterEvent() method will be called for each and every event processed by wxWidgets.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxEventFilter*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddPendingEvent":[
			{
				"return_type":"void",
				"brief_description":"Post an event to be processed later.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeletePendingEvents":[
			{
				"return_type":"void",
				"brief_description":"Deletes all events queued on this event handler using QueueEvent() or AddPendingEvent().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEvtHandlerEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event handler is enabled, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNextHandler":[
			{
				"return_type":"wxEvtHandler*",
				"brief_description":"Returns the pointer to the next handler in the chain.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPreviousHandler":[
			{
				"return_type":"wxEvtHandler*",
				"brief_description":"Returns the pointer to the previous handler in the chain.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsUnlinked":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the next and the previous handler pointers of this event handler instance are NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ProcessEvent":[
			{
				"return_type":"bool",
				"brief_description":"Processes an event, searching event tables and calling zero or more suitable event handler function(s).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ProcessEventLocally":[
			{
				"return_type":"bool",
				"brief_description":"Try to process the event in this handler and all those chained to it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ProcessPendingEvents":[
			{
				"return_type":"void",
				"brief_description":"Processes the pending events previously queued using QueueEvent() or AddPendingEvent(); you must call this function only if you are sure there are pending events for this handler, otherwise a wxCHECK will fail.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"QueueEvent":[
			{
				"return_type":"void",
				"brief_description":"Queue event for a later processing.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveFilter":[
			{
				"return_type":"void",
				"brief_description":"Remove a filter previously installed with AddFilter().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxEventFilter*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SafelyProcessEvent":[
			{
				"return_type":"bool",
				"brief_description":"Processes an event by calling ProcessEvent() and handles any exceptions that occur in the process.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEvtHandlerEnabled":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the event handler.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enabled"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNextHandler":[
			{
				"return_type":"void",
				"brief_description":"Sets the pointer to the next handler.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPreviousHandler":[
			{
				"return_type":"void",
				"brief_description":"Sets the pointer to the previous handler.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"TryAfter":[
			{
				"return_type":"bool",
				"brief_description":"Method called by ProcessEvent() as last resort.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"TryBefore":[
			{
				"return_type":"bool",
				"brief_description":"Method called by ProcessEvent() before examining this object event tables.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Unlink":[
			{
				"return_type":"void",
				"brief_description":"Unlinks this event handler from the chain it's part of (if any); then links the \"previous\" event handler to the \"next\" one (so that the chain won't be interrupted).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxStatusBar":{
		"wxStatusBar":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxSTB_DEFAULT_STYLE",
					"wxStatusBarNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMinHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimal possible height for the status bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStatusText":[
			{
				"return_type":"void",
				"brief_description":"Sets the status text for the i-th field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"i"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the window, for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxSTB_DEFAULT_STYLE",
					"wxStatusBarNameStr"
				]
			}
		],
		"GetBorders":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the horizontal and vertical borders used when rendering the field text inside the field area.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetField":[
			{
				"return_type":"const wxStatusBarPane&",
				"brief_description":"Returns the wxStatusBarPane representing the n-th field.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFieldRect":[
			{
				"return_type":"bool",
				"brief_description":"Returns the size and position of a field's internal bounding rectangle.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxRect&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"i",
					"rect"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetFieldsCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of fields in the status bar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStatusStyle":[
			{
				"return_type":"int",
				"brief_description":"Returns the style of the n-th field.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetStatusText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string associated with a status bar field.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"GetStatusWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the width of the n-th field.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PopStatusText":[
			{
				"return_type":"void",
				"brief_description":"Restores the text to the value it had before the last call to PushStatusText().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"field"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"PushStatusText":[
			{
				"return_type":"void",
				"brief_description":"Saves the current field text in a per-field stack, and sets the field text to the string passed as argument.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"string",
					"field"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"_implements":[
			"wxControl"
		],
		"SetFieldsCount":[
			{
				"return_type":"void",
				"brief_description":"Sets the number of fields, and optionally the field widths.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"number",
					"widths"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1",
					"NULL"
				]
			}
		],
		"SetStatusStyles":[
			{
				"return_type":"void",
				"brief_description":"Sets the styles of the fields in the status line which can make fields appear flat or raised instead of the standard sunken 3D border.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"styles"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetStatusWidths":[
			{
				"return_type":"void",
				"brief_description":"Sets the widths of the fields in the status line.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"widths_field"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxButton":{
		"wxButton":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxButtonNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the string label for the button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Button creation function for two-step creation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxButtonNameStr"
				]
			}
		],
		"_implements":[
			"wxAnyButton"
		],
		"GetLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string label for the button.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDefault":[
			{
				"return_type":"wxWindow*",
				"brief_description":"This sets the button to be the default item in its top-level window (e.g.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAuthNeeded":[
			{
				"return_type":"void",
				"brief_description":"Sets whether an authentication needed symbol should be displayed on the button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"needed"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"GetDefaultSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the default size for the buttons.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAuthNeeded":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if an authentication needed symbol is displayed on the button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxAnyButton":{
		"wxAnyButton":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxControl"
		],
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Return the bitmap shown by the button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapCurrent":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap used when the mouse is over the button, which may be invalid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapDisabled":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap for the disabled state, which may be invalid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapFocus":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap for the focused state, which may be invalid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapLabel":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap for the normal state.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapMargins":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the margins between the bitmap and the text of the button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapPressed":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap for the pressed state, which may be invalid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap to display in the button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"wxDirection"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxLEFT"
				]
			}
		],
		"SetBitmapCurrent":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap to be shown when the mouse is over the button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmapDisabled":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap for the disabled button appearance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmapFocus":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap for the button appearance when it has the keyboard focus.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmapLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap label for the button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmapMargins":[
			{
				"return_type":"void",
				"brief_description":"Set the margins between the bitmap and the text of the button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sz"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the margins between the bitmap and the text of the button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetBitmapPosition":[
			{
				"return_type":"void",
				"brief_description":"Set the position at which the bitmap is displayed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDirection"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmapPressed":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap for the selected (depressed) button appearance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxControl":{
		"wxControl":[
			{
				"return_type":"",
				"brief_description":"Default constructor to allow 2-phase creation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxControlNameStr"
				]
			}
		],
		"_implements":[
			"wxWindow"
		],
		"GetLabelText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the control's label without mnemonics.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the given label string without mnemonics (\"&\" characters).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxControlNameStr"
				]
			}
		],
		"SetLabelMarkup":[
			{
				"return_type":"bool",
				"brief_description":"Sets the controls label to a string using markup.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"markup"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabelText":[
			{
				"return_type":"void",
				"brief_description":"Sets the control's label to exactly the given string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveMnemonics":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the given str string without mnemonics (\"&\" characters).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"str"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the control's label.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the control's label, as it was passed to SetLabel().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EscapeMnemonics":[
			{
				"return_type":"wxString",
				"brief_description":"Escapes the special mnemonics characters (\"&\") in the given string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Command":[
			{
				"return_type":"void",
				"brief_description":"Simulates the effect of the user issuing a command to the item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCommandEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxValidator":{
		"wxValidator":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Validate":[
			{
				"return_type":"bool",
				"brief_description":"This overridable function is called when the value in the associated window must be validated.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"TransferToWindow":[
			{
				"return_type":"bool",
				"brief_description":"This overridable function is called when the value associated with the validator must be transferred to the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TransferFromWindow":[
			{
				"return_type":"bool",
				"brief_description":"This overridable function is called when the value in the window must be transferred to the validator.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWindow":[
			{
				"return_type":"void",
				"brief_description":"Associates a window with the validator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the window associated with the validator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SuppressBellOnError":[
			{
				"return_type":"void",
				"brief_description":"This functions switches on or turns off the error sound produced by the validators if an invalid key is pressed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"suppress"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Clone":[
			{
				"return_type":"wxObject*",
				"brief_description":"All validator classes must implement the Clone() function, which returns an identical copy of itself.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvtHandler"
		]
	},
	"wxBitmapHandler":{
		"_implements":[
			"wxObject"
		],
		"wxBitmapHandler":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetType":[
			{
				"return_type":"void",
				"brief_description":"Sets the handler type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBitmapType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Sets the handler name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtension":[
			{
				"return_type":"void",
				"brief_description":"Sets the handler extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extension"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads a bitmap from a file or resource, putting the resulting data into bitmap.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBitmap*",
					"const wxString&",
					"wxBitmapType",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"name",
					"type",
					"desiredWidth",
					"desiredHeight"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"GetType":[
			{
				"return_type":"wxBitmapType",
				"brief_description":"Gets the bitmap type associated with this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Gets the name of this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtension":[
			{
				"return_type":"const wxString&",
				"brief_description":"Gets the file extension associated with this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SaveFile":[
			{
				"return_type":"bool",
				"brief_description":"Saves a bitmap in the named file.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap*",
					"const wxString&",
					"wxBitmapType",
					"const wxPalette*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"name",
					"type",
					"palette"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"NULL"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates a bitmap from the given data, which can be of arbitrary type.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBitmap*",
					"const void*",
					"wxBitmapType",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"data",
					"type",
					"width",
					"height",
					"depth"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"1"
				]
			}
		]
	},
	"wxBitmap":{
		"AddHandler":[
			{
				"return_type":"void",
				"brief_description":"Adds a handler to the end of the static list of format handlers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxBitmapHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CleanUpHandlers":[
			{
				"return_type":"void",
				"brief_description":"Deletes all bitmap handlers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ConvertToDisabled":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns disabled (dimmed) version of the bitmap.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"brightness"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"255"
				]
			}
		],
		"wxBitmap":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor, uses reference counting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a new bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"depth"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxBITMAP_SCREEN_DEPTH"
				]
			},
			{
				"return_type":"",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sz",
					"depth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_SCREEN_DEPTH"
				]
			},
			{
				"return_type":"",
				"brief_description":"Loads a bitmap from a file or resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_DEFAULT_TYPE"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates this bitmap object from the given image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxImage&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"img",
					"depth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_SCREEN_DEPTH"
				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads a bitmap from a file or resource.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_DEFAULT_TYPE"
				]
			}
		],
		"RemoveHandler":[
			{
				"return_type":"bool",
				"brief_description":"Finds the handler with the given name, and removes it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SaveFile":[
			{
				"return_type":"bool",
				"brief_description":"Saves a bitmap in the named file.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType",
					"const wxPalette*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"type",
					"palette"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"_implements":[
			"wxGDIObject"
		],
		"ConvertToImage":[
			{
				"return_type":"wxImage",
				"brief_description":"Creates an image from a platform-dependent bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CopyFromIcon":[
			{
				"return_type":"bool",
				"brief_description":"Creates the bitmap from an icon.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates a fresh bitmap.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"depth"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxBITMAP_SCREEN_DEPTH"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sz",
					"depth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_SCREEN_DEPTH"
				]
			}
		],
		"FindHandler":[
			{
				"return_type":"wxBitmapHandler*",
				"brief_description":"Finds the handler with the given name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxBitmapHandler*",
				"brief_description":"Finds the handler associated with the given extension and type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"extension",
					"bitmapType"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxBitmapHandler*",
				"brief_description":"Finds the handler associated with the given bitmap type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxBitmapType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmapType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDepth":[
			{
				"return_type":"int",
				"brief_description":"Gets the colour depth of the bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHeight":[
			{
				"return_type":"int",
				"brief_description":"Gets the height of the bitmap in pixels.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMask":[
			{
				"return_type":"wxMask*",
				"brief_description":"Gets the associated mask (if any) which may have been loaded from a file or set for the bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPalette":[
			{
				"return_type":"wxPalette*",
				"brief_description":"Gets the associated palette (if any) which may have been loaded from a file or set for the bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of the bitmap in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSubBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns a sub bitmap of the current one as long as the rect belongs entirely to the bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Gets the width of the bitmap in pixels.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InitStandardHandlers":[
			{
				"return_type":"void",
				"brief_description":"Adds the standard bitmap format handlers, which, depending on wxWidgets configuration, can be handlers for Windows bitmap, Windows bitmap resource, and XPM.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertHandler":[
			{
				"return_type":"void",
				"brief_description":"Adds a handler at the start of the static list of format handlers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxBitmapHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if bitmap data is present.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMask":[
			{
				"return_type":"void",
				"brief_description":"Sets the mask for this bitmap.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMask*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPalette":[
			{
				"return_type":"void",
				"brief_description":"Sets the associated palette.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPalette&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"palette"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxPalette":{
		"wxPalette":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor, uses Reference Counting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPalette&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"palette"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a palette from arrays of size n, one for each red, blue or green component.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const unsigned char*",
					"const unsigned char*",
					"const unsigned char*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"n",
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxGDIObject"
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if palette data is present.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPixel":[
			{
				"return_type":"int",
				"brief_description":"Returns a pixel value (index into the palette) for the given RGB values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetColoursCount":[
			{
				"return_type":"int",
				"brief_description":"Returns number of entries in palette.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates a palette from arrays of size n, one for each red, blue or green component.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const unsigned char*",
					"const unsigned char*",
					"const unsigned char*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"n",
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetRGB":[
			{
				"return_type":"bool",
				"brief_description":"Returns RGB values for a given palette index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"unsigned char*",
					"unsigned char*",
					"unsigned char*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pixel",
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxImage":{
		"wxImage":[
			{
				"return_type":"",
				"brief_description":"Creates an image with the given size and clears it if requested.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"clear"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an empty wxImage object without an alpha channel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sz",
					"clear"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an image from a file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"type",
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY",
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an image from a file using MIME-types to specify the type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"mimetype",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an image from a stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxBitmapType",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"stream",
					"type",
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY",
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an image from a stream using MIME-types to specify the type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"stream",
					"mimetype",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"unsigned char*",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"sz",
					"data",
					"alpha",
					"static_data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an image from data in memory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"unsigned char*",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"data",
					"alpha",
					"static_data"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"sz",
					"data",
					"static_data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an image from data in memory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"data",
					"static_data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false"
				]
			}
		],
		"_implements":[
			"wxObject"
		],
		"SetType":[
			{
				"return_type":"void",
				"brief_description":"Set the type of image returned by GetType().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBitmapType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRGB":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour of the pixels within the given rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"rect",
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"SetPalette":[
			{
				"return_type":"void",
				"brief_description":"Associates a palette with the image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPalette&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"palette"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOption":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets a user-defined option.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMaskFromImage":[
			{
				"return_type":"bool",
				"brief_description":"Sets image's mask so that the pixels that have RGB value of mr,mg,mb in mask will be masked in the image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxImage&",
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"mask",
					"mr",
					"mg",
					"mb"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"SetMaskColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the mask colour for this image (and tells the image to use the mask).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetMask":[
			{
				"return_type":"void",
				"brief_description":"Specifies whether there is a mask or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"hasMask"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetData":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char*",
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"data",
					"new_width",
					"new_height",
					"static_data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the image data without performing checks.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"data",
					"static_data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"SetAlpha":[
			{
				"return_type":"void",
				"brief_description":"Sets the alpha value for the given pixel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"alpha"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This function is similar to SetData() and has similar restrictions.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"alpha",
					"static_data"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL",
					"false"
				]
			}
		],
		"Scale":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns a scaled version of the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxImageResizeQuality"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"quality"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxIMAGE_QUALITY_NORMAL"
				]
			}
		],
		"SaveFile":[
			{
				"return_type":"bool",
				"brief_description":"Saves an image in the given stream.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOutputStream&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"type"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Saves an image in the named file.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Saves an image in the named file.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"type"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Saves an image in the given stream.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOutputStream&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"mimetype"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Saves an image in the named file.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"mimetype"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RotateHue":[
			{
				"return_type":"void",
				"brief_description":"Rotates the hue of each pixel in the image by angle, which is a double in the range of -1.0 to +1.0, where -1.0 corresponds to -360 degrees and +1.0 corresponds to +360 degrees.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"angle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Rotate90":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns a copy of the image rotated 90 degrees in the direction indicated by clockwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clockwise"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Rotate180":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns a copy of the image rotated by 180 degrees.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Rotate":[
			{
				"return_type":"wxImage",
				"brief_description":"Rotates the image about the given point, by angle radians.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"const wxPoint&",
					"bool",
					"wxPoint*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"angle",
					"rotationCentre",
					"interpolating",
					"offsetAfterRotation"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true",
					"NULL"
				]
			}
		],
		"Resize":[
			{
				"return_type":"wxImage&",
				"brief_description":"Changes the size of the image in-place without scaling it by adding either a border with the given colour or cropping as necessary.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"const wxPoint&",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"size",
					"pos",
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"-1"
				]
			}
		],
		"Rescale":[
			{
				"return_type":"wxImage&",
				"brief_description":"Changes the size of the image in-place by scaling it: after a call to this function,the image will have the given width and height.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxImageResizeQuality"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"quality"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxIMAGE_QUALITY_NORMAL"
				]
			}
		],
		"Replace":[
			{
				"return_type":"void",
				"brief_description":"Replaces the colour specified by r1,g1,b1 by the colour r2,g2,b2.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char",
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"r1",
					"g1",
					"b1",
					"r2",
					"g2",
					"b2"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"RemoveHandler":[
			{
				"return_type":"bool",
				"brief_description":"Finds the handler with the given name, and removes it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RGBtoHSV":[
			{
				"return_type":"wxImage::HSVValue",
				"brief_description":"Converts a color in RGB color space to HSV color space.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxImage::RGBValue&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rgb"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Paste":[
			{
				"return_type":"void",
				"brief_description":"Copy the data of the given image to the specified position in this image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxImage&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"image",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Mirror":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns a mirrored copy of the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"horizontally"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads an image from an input stream.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"stream",
					"mimetype",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Loads an image from a file.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"mimetype",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Loads an image from a file.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"type",
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY",
					"-1"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Loads an image from an input stream.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxBitmapType",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"stream",
					"type",
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY",
					"-1"
				]
			}
		],
		"IsTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given pixel is transparent, i.e. either has the mask colour if this image has a mask or if this image has alpha channel and alpha value of this pixel is strictly less than threshold.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"threshold"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxIMAGE_ALPHA_THRESHOLD"
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if image data is present.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertHandler":[
			{
				"return_type":"void",
				"brief_description":"Adds a handler at the start of the static list of format handlers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxImageHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InitStandardHandlers":[
			{
				"return_type":"void",
				"brief_description":"Internal use only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InitAlpha":[
			{
				"return_type":"void",
				"brief_description":"Initializes the image alpha channel data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasOption":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given option is present.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasMask":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is a mask active, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasAlpha":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this image has alpha channel, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HSVtoRGB":[
			{
				"return_type":"wxImage::RGBValue",
				"brief_description":"Converts a color in HSV color space to RGB color space.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxImage::HSVValue&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"hsv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Gets the width of the image in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetType":[
			{
				"return_type":"wxBitmapType",
				"brief_description":"Gets the type of image found by LoadFile() or specified with SaveFile().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSubImage":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns a sub image of the current one as long as the rect belongs entirely to the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of the image in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRed":[
			{
				"return_type":"unsigned char",
				"brief_description":"Returns the red intensity at the given coordinate.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPalette":[
			{
				"return_type":"const wxPalette&",
				"brief_description":"Returns the palette associated with the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrFindMaskColour":[
			{
				"return_type":"bool",
				"brief_description":"Get the current mask colour or find a suitable unused colour that could be used as a mask colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char*",
					"unsigned char*",
					"unsigned char*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"r",
					"g",
					"b"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetOptionInt":[
			{
				"return_type":"int",
				"brief_description":"Gets a user-defined integer-valued option.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetOption":[
			{
				"return_type":"wxString",
				"brief_description":"Gets a user-defined string-valued option.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMaskRed":[
			{
				"return_type":"unsigned char",
				"brief_description":"Gets the red value of the mask colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaskGreen":[
			{
				"return_type":"unsigned char",
				"brief_description":"Gets the green value of the mask colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaskBlue":[
			{
				"return_type":"unsigned char",
				"brief_description":"Gets the blue value of the mask colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImageExtWildcard":[
			{
				"return_type":"wxString",
				"brief_description":"Iterates all registered wxImageHandler objects, and returns a string containing file extension masks suitable for passing to file open\/save dialog boxes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImageCount":[
			{
				"return_type":"int",
				"brief_description":"If the image file contains more than one image and the image handler is capable of retrieving these individually, this function will return the number of available images.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY"
				]
			},
			{
				"return_type":"int",
				"brief_description":"If the image file contains more than one image and the image handler is capable of retrieving these individually, this function will return the number of available images.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY"
				]
			}
		],
		"GetHeight":[
			{
				"return_type":"int",
				"brief_description":"Gets the height of the image in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHandlers":[
			{
				"return_type":"wxList&",
				"brief_description":"Returns the static list of image format handlers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGreen":[
			{
				"return_type":"unsigned char",
				"brief_description":"Returns the green intensity at the given coordinate.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetData":[
			{
				"return_type":"unsigned char*",
				"brief_description":"Returns the image data as an array.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBlue":[
			{
				"return_type":"unsigned char",
				"brief_description":"Returns the blue intensity at the given coordinate.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetAlpha":[
			{
				"return_type":"unsigned char",
				"brief_description":"Return alpha value at given pixel location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"unsigned char*",
				"brief_description":"Returns pointer to the array storing the alpha values for this image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindHandlerMime":[
			{
				"return_type":"wxImageHandler*",
				"brief_description":"Finds the handler associated with the given MIME type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mimetype"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindHandler":[
			{
				"return_type":"wxImageHandler*",
				"brief_description":"Finds the handler associated with the given image type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxBitmapType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxImageHandler*",
				"brief_description":"Finds the handler associated with the given extension and type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"extension",
					"imageType"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxImageHandler*",
				"brief_description":"Finds the handler with the given name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindFirstUnusedColour":[
			{
				"return_type":"bool",
				"brief_description":"Finds the first colour that is never used in the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char*",
					"unsigned char*",
					"unsigned char*",
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"r",
					"g",
					"b",
					"startR",
					"startG",
					"startB"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"1",
					"0",
					"0"
				]
			}
		],
		"Destroy":[
			{
				"return_type":"void",
				"brief_description":"Destroys the image data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"unsigned char*",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"sz",
					"data",
					"alpha",
					"static_data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates a fresh image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"unsigned char*",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"data",
					"alpha",
					"static_data"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"sz",
					"data",
					"static_data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates a fresh image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"unsigned char*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"data",
					"static_data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sz",
					"clear"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates a fresh image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"clear"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true"
				]
			}
		],
		"Copy":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns an identical copy of this image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ConvertToMono":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns monochromatic version of the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"r",
					"g",
					"b"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"ConvertToGreyscale":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns a greyscale version of the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxImage",
				"brief_description":"Returns a greyscale version of the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"weight_r",
					"weight_g",
					"weight_b"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"ConvertToDisabled":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns disabled (dimmed) version of the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"brightness"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"255"
				]
			}
		],
		"ConvertAlphaToMask":[
			{
				"return_type":"bool",
				"brief_description":"If the image has alpha channel, this method converts it to mask using the specified colour as the mask colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"mr",
					"mg",
					"mb",
					"threshold"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxIMAGE_ALPHA_THRESHOLD"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"If the image has alpha channel, this method converts it to mask.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"threshold"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxIMAGE_ALPHA_THRESHOLD"
				]
			}
		],
		"ComputeHistogram":[
			{
				"return_type":"unsigned long",
				"brief_description":"Computes the histogram of the image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageHistogram&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"histogram"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearAlpha":[
			{
				"return_type":"void",
				"brief_description":"Removes the alpha channel from the image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Initialize the image data with zeroes (the default) or with the byte value given as value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"CleanUpHandlers":[
			{
				"return_type":"void",
				"brief_description":"Deletes all image handlers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanRead":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if at least one of the available image handlers can read the data in the given stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxInputStream&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stream"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if at least one of the available image handlers can read the file with the given name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"BlurVertical":[
			{
				"return_type":"wxImage",
				"brief_description":"Blurs the image in the vertical direction only.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"blurRadius"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"BlurHorizontal":[
			{
				"return_type":"wxImage",
				"brief_description":"Blurs the image in the horizontal direction only.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"blurRadius"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Blur":[
			{
				"return_type":"wxImage",
				"brief_description":"Blurs the image in both horizontal and vertical directions by the specified pixel blurRadius.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"blurRadius"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddHandler":[
			{
				"return_type":"void",
				"brief_description":"Register an image handler.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxImageHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Size":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns a resized version of this image without scaling it by adding either a border with the given colour or cropping as necessary.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"const wxPoint&",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"size",
					"pos",
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"-1"
				]
			}
		]
	},
	"wxIcon":{
		"wxIcon":[
			{
				"return_type":"",
				"brief_description":"Loads an icon from a file or resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"type",
					"desiredWidth",
					"desiredHeight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxICON_DEFAULT_TYPE",
					"-1",
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"Copy ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads an icon from a file or resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"type",
					"desiredWidth",
					"desiredHeight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxICON_DEFAULT_TYPE",
					"-1",
					"-1"
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if icon data is present.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Gets the width of the icon in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHeight":[
			{
				"return_type":"int",
				"brief_description":"Gets the height of the icon in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDepth":[
			{
				"return_type":"int",
				"brief_description":"Gets the colour depth of the icon.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CopyFromBitmap":[
			{
				"return_type":"void",
				"brief_description":"Copies bmp bitmap to this icon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxGDIObject"
		]
	},
	"wxSplitterWindow":{
		"wxSplitterWindow":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_3D",
					"\"splitterWindow\""
				]
			}
		],
		"UpdateSize":[
			{
				"return_type":"void",
				"brief_description":"Causes any pending sizing of the sash and child panes to take place immediately.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Unsplit":[
			{
				"return_type":"bool",
				"brief_description":"Unsplits the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toRemove"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"SplitVertically":[
			{
				"return_type":"bool",
				"brief_description":"Initializes the left and right panes of the splitter window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window1",
					"window2",
					"sashPosition"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0"
				]
			}
		],
		"SplitHorizontally":[
			{
				"return_type":"bool",
				"brief_description":"Initializes the top and bottom panes of the splitter window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window1",
					"window2",
					"sashPosition"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0"
				]
			}
		],
		"SetSplitMode":[
			{
				"return_type":"void",
				"brief_description":"Sets the split mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSashPosition":[
			{
				"return_type":"void",
				"brief_description":"Sets the sash position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"position",
					"redraw"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetSashGravity":[
			{
				"return_type":"void",
				"brief_description":"Sets the sash gravity.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"gravity"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ReplaceWindow":[
			{
				"return_type":"bool",
				"brief_description":"This function replaces one of the windows managed by the wxSplitterWindow with another one.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"winOld",
					"winNew"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMinimumPaneSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum pane size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"paneSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSplit":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is split, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Initialize":[
			{
				"return_type":"void",
				"brief_description":"Initializes the splitter window to have one pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWindow2":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the right\/bottom pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindow1":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the left\/top or only pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSplitMode":[
			{
				"return_type":"wxSplitMode",
				"brief_description":"Gets the split mode.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSashSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the default sash size in pixels or 0 if it is invisible.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSashPosition":[
			{
				"return_type":"int",
				"brief_description":"Returns the current sash position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSashGravity":[
			{
				"return_type":"double",
				"brief_description":"Returns the current sash gravity.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinimumPaneSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the current minimum pane size (defaults to zero).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creation function, for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"point",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_3D",
					"\"splitter\""
				]
			}
		],
		"_implements":[
			"wxWindow"
		],
		"OnDoubleClickSash":[
			{
				"return_type":"void",
				"brief_description":"Application-overridable function called when the sash is double-clicked with the left mouse button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnSashPositionChange":[
			{
				"return_type":"bool",
				"brief_description":"Application-overridable function called when the sash position is changed by user.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"newSashPosition"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnUnsplit":[
			{
				"return_type":"void",
				"brief_description":"Application-overridable function called when the window is unsplit, either programmatically or using the wxSplitterWindow user interface.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"removed"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxBoxSizer":{
		"wxBoxSizer":[
			{
				"return_type":"",
				"brief_description":"Constructor for a wxBoxSizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"Implements the calculation of a box sizer's dimensions and then sets the size of its children (calling wxWindow::SetSize if the child is a window).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrientation":[
			{
				"return_type":"int",
				"brief_description":"Returns the orientation of the box sizer, either wxVERTICAL or wxHORIZONTAL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"Implements the calculation of a box sizer's minimal.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddSpacer":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Adds non-stretchable space to the main orientation of the sizer only.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxSizer"
		]
	},
	"wxSizer":{
		"_implements":[
			"wxObject"
		],
		"Show":[
			{
				"return_type":"bool",
				"brief_description":"Shows or hides sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"bool",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"show",
					"recursive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true",
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Shows the item at index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Shows or hides the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"bool",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"show",
					"recursive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true",
					"false"
				]
			}
		],
		"wxSizer":[
			{
				"return_type":"",
				"brief_description":"The constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetSizeHints":[
			{
				"return_type":"void",
				"brief_description":"This method first calls Fit() and then wxTopLevelWindow::SetSizeHints() on the window passed to it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVirtualSizeHints":[
			{
				"return_type":"void",
				"brief_description":"Tell the sizer to set the minimal size of the window virtual area to match the sizer's minimal size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"SetMinSize":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Call this to give the sizer a minimal size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemMinSize":[
			{
				"return_type":"bool",
				"brief_description":"Set an item's minimum size by window, sizer, or position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set an item's minimum size by window, sizer, or position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set an item's minimum size by window, sizer, or position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set an item's minimum size by window, sizer, or position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set an item's minimum size by window, sizer, or position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set an item's minimum size by window, sizer, or position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetDimension":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Call this to force the sizer to take the given dimension and thus force the items owned by the sizer to resize themselves according to the rules defined by the parameter in the Add() and Prepend() methods.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"Replace":[
			{
				"return_type":"bool",
				"brief_description":"Detaches the given oldsz from the sizer and replaces it with the given newsz.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"wxSizer*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"oldsz",
					"newsz",
					"recursive"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Detaches the given oldwin from the sizer and replaces it with the given newwin.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindow*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"oldwin",
					"newwin",
					"recursive"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Detaches the given item at position index from the sizer and replaces it with the given wxSizerItem newitem.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxSizerItem*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"newitem"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Remove":[
			{
				"return_type":"bool",
				"brief_description":"Removes a child from the sizer and destroys it if it is a sizer or a spacer, but not if it is a window (because windows are owned by their parent window, not the sizer).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Removes a sizer child from the sizer and destroys it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"This method is abstract and has to be overwritten by any derived class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PrependStretchSpacer":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Prepends stretchable space to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prop"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"PrependSpacer":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Prepends non-stretchable space to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Prepend":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizerItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Same as Add(), but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Same as Add(), but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Same as Add(), but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Same as Add(), but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Same as Add(), but prepends the items to the beginning of the list of items (windows, subsizers or spaces) owned by this sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Layout":[
			{
				"return_type":"void",
				"brief_description":"Call this to force layout of the children anew, e.g. after having added a child to or removed a child (window, other sizer or space) from the sizer while keeping the current dimension.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item at index is shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the sizer is shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window is shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the sizer has no elements.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertStretchSpacer":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Inserts stretchable space to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"prop"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"1"
				]
			}
		],
		"InsertSpacer":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Inserts non-stretchable space to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Insert":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Insert a child into the sizer before any existing item at index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int",
					"int",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"width",
					"height",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Insert a child into the sizer before any existing item at index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxSizer*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"sizer",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Insert a child into the sizer before any existing item at index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxSizer*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"sizer",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Insert a child into the sizer before any existing item at index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxWindow*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"window",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Insert a child into the sizer before any existing item at index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxWindow*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"window",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxSizerItem*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"InformFirstDirection":[
			{
				"return_type":"bool",
				"brief_description":"Inform sizer about the first direction that has been decided (by parent item).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"direction",
					"size",
					"availableOtherDir"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Hide":[
			{
				"return_type":"bool",
				"brief_description":"Hides the item at position index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Hides the child sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"recursive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Hides the child window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"recursive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the current size of the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the current position of the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the minimal size of the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of items in the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FitInside":[
			{
				"return_type":"void",
				"brief_description":"Tell the sizer to resize the virtual size of the window to match the sizer's minimal size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Fit":[
			{
				"return_type":"wxSize",
				"brief_description":"Tell the sizer to resize the window so that its client area matches the sizer's minimal size (ComputeFittingClientSize() is called to determine it).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Detach":[
			{
				"return_type":"bool",
				"brief_description":"Detach a item at position index from the sizer without destroying it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Detach the child sizer from the sizer without destroying it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Detach the child window from the sizer without destroying it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ComputeFittingWindowSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Like ComputeFittingClientSize(), but converts the result into window size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ComputeFittingClientSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Computes client area size for window so that it matches the sizer's minimal size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Add":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Appends a child to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Appends a child to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Appends a child to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Appends a child to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Appends a spacer child to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizerItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddSpacer":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"This base function adds non-stretchable space to both the horizontal and vertical orientation of the sizer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddStretchSpacer":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Adds stretchable space to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prop"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"This method is abstract and has to be overwritten by any derived class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Detaches all children from the sizer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"delete_windows"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"GetContainingWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the window this sizer is used in or NULL if none.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItem":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Finds wxSizerItem which holds the given window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"recursive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Finds wxSizerItem which holds the given sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"recursive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Finds wxSizerItem which is located in the sizer at position index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemById":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Finds item of the sizer which has the given id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"recursive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		]
	},
	"wxSizerItem":{
		"_implements":[
			"wxObject"
		],
		"wxSizerItem":[
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a subsizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxSizerFlags&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a subsizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a spacer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"proportion",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0",
					"0",
					"0",
					"NULL"
				]
			}
		],
		"SetWindow":[
			{
				"return_type":"void",
				"brief_description":"Set the window to be tracked by this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"Show":[
			{
				"return_type":"void",
				"brief_description":"Set the show item attribute, which sizers use to determine if the item is to be made part of the layout or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUserData":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSpacer":[
			{
				"return_type":"void",
				"brief_description":"Set the size of the spacer tracked by this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"SetSizer":[
			{
				"return_type":"void",
				"brief_description":"Set the sizer tracked by this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"SetRatio":[
			{
				"return_type":"void",
				"brief_description":"Set the ratio item attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"float"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ratio"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the ratio item attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSize"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the ratio item attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetProportion":[
			{
				"return_type":"void",
				"brief_description":"Set the proportion item attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"proportion"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinSize":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the minimum size to be allocated for this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetInitSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets the numeric id of the wxSizerItem to id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlag":[
			{
				"return_type":"void",
				"brief_description":"Set the flag item attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDimension":[
			{
				"return_type":"void",
				"brief_description":"Set the position and size of the space allocated to the sizer, and adjust the position and size of the item to be within that space taking alignment and borders into account.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetBorder":[
			{
				"return_type":"void",
				"brief_description":"Set the border item attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"border"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsWindow":[
			{
				"return_type":"bool",
				"brief_description":"Is this item a window?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSpacer":[
			{
				"return_type":"bool",
				"brief_description":"Is this item a spacer?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSizer":[
			{
				"return_type":"bool",
				"brief_description":"Is this item a sizer?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this item is a window or a spacer and it is shown or if this item is a sizer and not all of its elements are hidden.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AssignSizer":[
			{
				"return_type":"void",
				"brief_description":"Set the sizer tracked by this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AssignSpacer":[
			{
				"return_type":"void",
				"brief_description":"Set the size of the spacer tracked by this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the size of the spacer tracked by this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"w",
					"h"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AssignWindow":[
			{
				"return_type":"void",
				"brief_description":"Set the window to be tracked by this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculates the minimum desired size for the item, including any space needed by borders.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteWindows":[
			{
				"return_type":"void",
				"brief_description":"Destroy the window or the windows in a subsizer, depending on the type of item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DetachSizer":[
			{
				"return_type":"void",
				"brief_description":"Enable deleting the SizerItem without destroying the contained sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBorder":[
			{
				"return_type":"int",
				"brief_description":"Return the border attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlag":[
			{
				"return_type":"int",
				"brief_description":"Return the flags attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"int",
				"brief_description":"Return the numeric id of wxSizerItem, or wxID_NONE if the id has not been set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the minimum size needed for the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"What is the current position of the item, as set in the last Layout.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetProportion":[
			{
				"return_type":"int",
				"brief_description":"Get the proportion item attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRatio":[
			{
				"return_type":"float",
				"brief_description":"Get the ration item attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Get the rectangle of the item on the parent window, excluding borders.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the current size of the item, as set in the last Layout.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"If this item is tracking a sizer, return it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSpacer":[
			{
				"return_type":"wxSize",
				"brief_description":"If this item is tracking a spacer, return its size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUserData":[
			{
				"return_type":"wxObject*",
				"brief_description":"Get the userData item attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"If this item is tracking a window then return it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxSizerFlags":{
		"wxSizerFlags":[
			{
				"return_type":"",
				"brief_description":"Creates the wxSizer with the proportion specified by proportion.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"proportion"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"TripleBorder":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the border in the given direction having thrice the default border size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxALL"
				]
			}
		],
		"Top":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Aligns the object to the top, similar for Align(wxALIGN_TOP).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Shaped":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Set the wx_SHAPED flag which indicates that the elements should always keep the fixed width to height ratio equal to its original value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Right":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Aligns the object to the right, similar for Align(wxALIGN_RIGHT).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ReserveSpaceEvenIfHidden":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Set the wxRESERVE_SPACE_EVEN_IF_HIDDEN flag.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Proportion":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the proportion of this wxSizerFlags to proportion.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"proportion"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Left":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Aligns the object to the left, similar for Align(wxALIGN_LEFT).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultBorder":[
			{
				"return_type":"int",
				"brief_description":"Returns the border used by default in Border() method.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FixedMinSize":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Set the wxFIXED_MINSIZE flag which indicates that the initial size of the window should be also set as its minimal size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Expand":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the object of the wxSizerFlags to expand to fill as much area as it can.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DoubleHorzBorder":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the border in left and right directions having twice the default border size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DoubleBorder":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the border in the given direction having twice the default border size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxALL"
				]
			}
		],
		"Centre":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Center() for people with the other dialect of English.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Center":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the object of the wxSizerFlags to center itself in the area it is given.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Bottom":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Aligns the object to the bottom, similar for Align(wxALIGN_BOTTOM).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Border":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the wxSizerFlags to have a border with size as returned by GetDefaultBorder().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxALL"
				]
			},
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the wxSizerFlags to have a border of a number of pixels specified by borderinpixels with the directions specified by direction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"direction",
					"borderinpixels"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Align":[
			{
				"return_type":"wxSizerFlags&",
				"brief_description":"Sets the alignment of this wxSizerFlags to align.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alignment"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxRect":{
		"wxRect":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a wxRect object from x, y, width and height values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a wxRect object from top-left and bottom-right points.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"topLeft",
					"bottomRight"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a wxRect object from position pos and size values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a wxRect object from size values at the origin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetX":[
			{
				"return_type":"void",
				"brief_description":"Sets the x position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetY":[
			{
				"return_type":"void",
				"brief_description":"Sets the y position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Union":[
			{
				"return_type":"wxRect&",
				"brief_description":"Modifies the rectangle to contain the bounding box of this rectangle and the one passed in as parameter.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the height.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Offset":[
			{
				"return_type":"void",
				"brief_description":"Moves the rectangle by the specified offset.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dx",
					"dy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Moves the rectangle by the specified offset.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this rectangle has a width or height less than or equal to 0 and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Intersects":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this rectangle has a non-empty intersection with the rectangle rect and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Intersect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the overlapping portion of this rectangle and the one passed in as parameter.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxRect&",
				"brief_description":"Modifies this rectangle to contain the overlapping portion of this rectangle and the one passed in as parameter.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Inflate":[
			{
				"return_type":"wxRect",
				"brief_description":"Increases the size of the rectangle.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dx",
					"dy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxRect&",
				"brief_description":"Increases the size of the rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"diff"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxRect&",
				"brief_description":"Increases the size of the rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"diff"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxRect&",
				"brief_description":"Increases the size of the rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dx",
					"dy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetY":[
			{
				"return_type":"int",
				"brief_description":"Gets the y member.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetX":[
			{
				"return_type":"int",
				"brief_description":"Gets the x member.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Gets the width member.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTopRight":[
			{
				"return_type":"wxPoint",
				"brief_description":"Gets the position of the top right corner.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTopLeft":[
			{
				"return_type":"wxPoint",
				"brief_description":"Gets the position of the top left corner of the rectangle, same as GetPosition().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTop":[
			{
				"return_type":"int",
				"brief_description":"Gets the top point of the rectangle (the same as GetY()).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Gets the size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRight":[
			{
				"return_type":"int",
				"brief_description":"Gets the right point of the rectangle.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Gets the position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CenterIn":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the rectangle having the same size as this one but centered relatively to the given rectangle r.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"r",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBOTH"
				]
			}
		],
		"CentreIn":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the rectangle having the same size as this one but centered relatively to the given rectangle r.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"r",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBOTH"
				]
			}
		],
		"Contains":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given point is inside the rectangle (or on its boundary) and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given point is inside the rectangle (or on its boundary) and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given rectangle is completely inside this rectangle (or touches its boundary) and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Deflate":[
			{
				"return_type":"wxRect&",
				"brief_description":"Decrease the rectangle size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dx",
					"dy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxRect&",
				"brief_description":"Decrease the rectangle size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"diff"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxRect&",
				"brief_description":"Decrease the rectangle size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"diff"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxRect",
				"brief_description":"Decrease the rectangle size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dx",
					"dy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetBottom":[
			{
				"return_type":"int",
				"brief_description":"Gets the bottom point of the rectangle.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBottomLeft":[
			{
				"return_type":"wxPoint",
				"brief_description":"Gets the position of the bottom left corner.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBottomRight":[
			{
				"return_type":"wxPoint",
				"brief_description":"Gets the position of the bottom right corner.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHeight":[
			{
				"return_type":"int",
				"brief_description":"Gets the height member.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLeft":[
			{
				"return_type":"int",
				"brief_description":"Gets the left point of the rectangle (the same as GetX()).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxTreeCtrl":{
		"wxTreeCtrl":[
			{
				"return_type":"",
				"brief_description":"Default Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a tree control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTR_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxTreeCtrlNameStr"
				]
			}
		],
		"AddRoot":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Adds the root node to the tree, returning the new item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"int",
					"wxTreeItemData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"text",
					"image",
					"selImage",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1",
					"-1",
					"NULL"
				]
			}
		],
		"AppendItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Appends an item to the end of the branch identified by parent, return a new item id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"const wxString&",
					"int",
					"int",
					"wxTreeItemData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"image",
					"selImage",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"NULL"
				]
			}
		],
		"AssignImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the normal image list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AssignStateImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the state image list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearFocusedItem":[
			{
				"return_type":"void",
				"brief_description":"Clears the currently focused item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Collapse":[
			{
				"return_type":"void",
				"brief_description":"Collapses the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CollapseAll":[
			{
				"return_type":"void",
				"brief_description":"Collapses the root item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CollapseAllChildren":[
			{
				"return_type":"void",
				"brief_description":"Collapses this item and all of its children, recursively.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CollapseAndReset":[
			{
				"return_type":"void",
				"brief_description":"Collapses the given item and removes all children.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the tree control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTR_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxTreeCtrlNameStr"
				]
			}
		],
		"Delete":[
			{
				"return_type":"void",
				"brief_description":"Deletes the specified item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteAllItems":[
			{
				"return_type":"void",
				"brief_description":"Deletes all items in the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteChildren":[
			{
				"return_type":"void",
				"brief_description":"Deletes all children of the given item (but not the item itself).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EndEditLabel":[
			{
				"return_type":"void",
				"brief_description":"Ends label editing.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"discardChanges"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"EnsureVisible":[
			{
				"return_type":"void",
				"brief_description":"Scrolls and\/or expands items to ensure that the given item is visible.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Expand":[
			{
				"return_type":"void",
				"brief_description":"Expands the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ExpandAll":[
			{
				"return_type":"void",
				"brief_description":"Expands all items in the tree.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ExpandAllChildren":[
			{
				"return_type":"void",
				"brief_description":"Expands the given item and all its children recursively.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBoundingRect":[
			{
				"return_type":"bool",
				"brief_description":"Retrieves the rectangle bounding the item.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"wxRect&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"rect",
					"textOnly"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			}
		],
		"GetChildrenCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of items in the branch.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"recursively"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of items in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEditControl":[
			{
				"return_type":"wxTextCtrl*",
				"brief_description":"Returns the edit control being currently used to edit a label.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFirstVisibleItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the first visible item.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFocusedItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the item last clicked or otherwise selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImageList":[
			{
				"return_type":"wxImageList*",
				"brief_description":"Returns the normal image list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndent":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the current tree control indentation.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the background colour of the item.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemData":[
			{
				"return_type":"wxTreeItemData*",
				"brief_description":"Returns the tree item data associated with the item.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the font of the item label.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemImage":[
			{
				"return_type":"int",
				"brief_description":"Gets the specified item image.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"wxTreeItemIcon"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"which"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxTreeItemIcon_Normal"
				]
			}
		],
		"GetItemParent":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the item's parent.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemState":[
			{
				"return_type":"int",
				"brief_description":"Gets the specified item state.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the item label.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour of the item label.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLastChild":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the last child of the item (or an invalid tree item if this item has no children).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetNextChild":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the next child; call GetFirstChild() for the first child.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"wxTreeItemIdValue&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"cookie"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetNextSibling":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the next sibling of the specified item; call GetPrevSibling() for the previous sibling.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetNextVisible":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the next visible item or an invalid item if this item is the last visible one.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPrevSibling":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the previous sibling of the specified item; call GetNextSibling() for the next sibling.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPrevVisible":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the previous visible item or an invalid item if this item is the first visible one.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetQuickBestSize":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the control will use a quick calculation for the best size, looking only at the first and last items.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRootItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the root item for the tree control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the selection, or an invalid item if there is no selection.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStateImageList":[
			{
				"return_type":"wxImageList*",
				"brief_description":"Returns the state image list (from which application-defined state images are taken).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HitTest":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Calculates which (if any) item is under the given point, returning the tree item id at this point plus extra information flags.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"int&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"point",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"InsertItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Inserts an item after a given one (previous).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"const wxTreeItemId&",
					"const wxString&",
					"int",
					"int",
					"wxTreeItemData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"previous",
					"text",
					"image",
					"selImage",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"-1",
					"-1",
					"NULL"
				]
			},
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Inserts an item before one identified by its position (pos).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"size_t",
					"const wxString&",
					"int",
					"int",
					"wxTreeItemData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"pos",
					"text",
					"image",
					"selImage",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"-1",
					"-1",
					"NULL"
				]
			}
		],
		"IsBold":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given item is in bold state.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the control is empty (i.e. has no items, even no root one).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is expanded (only makes sense if it has children).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSelected":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsVisible":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is visible on the screen.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ItemHasChildren":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item has children.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrependItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Appends an item as the first child of parent, return a new item id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"const wxString&",
					"int",
					"int",
					"wxTreeItemData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"image",
					"selImage",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"NULL"
				]
			}
		],
		"ScrollTo":[
			{
				"return_type":"void",
				"brief_description":"Scrolls the specified item into view.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectChildren":[
			{
				"return_type":"void",
				"brief_description":"Select all the immediate children of the given parent.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectItem":[
			{
				"return_type":"void",
				"brief_description":"Selects the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"select"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetFocusedItem":[
			{
				"return_type":"void",
				"brief_description":"Sets the currently focused item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the normal image list.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIndent":[
			{
				"return_type":"void",
				"brief_description":"Sets the indentation for the tree control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour of the item's background.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemBold":[
			{
				"return_type":"void",
				"brief_description":"Makes item appear in bold font if bold parameter is true or resets it to the normal state.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"bold"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetItemData":[
			{
				"return_type":"void",
				"brief_description":"Sets the item client data.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"wxTreeItemData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemDropHighlight":[
			{
				"return_type":"void",
				"brief_description":"Gives the item the visual feedback for Drag'n'Drop actions, which is useful if something is dragged from the outside onto the tree control (as opposed to a DnD operation within the tree control, which already is implemented internally).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"highlight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetItemFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the item's font.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"const wxFont&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"font"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemHasChildren":[
			{
				"return_type":"void",
				"brief_description":"Force appearance of the button next to the item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"hasChildren"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetItemImage":[
			{
				"return_type":"void",
				"brief_description":"Sets the specified item's image.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"int",
					"wxTreeItemIcon"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"image",
					"which"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxTreeItemIcon_Normal"
				]
			}
		],
		"SetItemState":[
			{
				"return_type":"void",
				"brief_description":"Sets the specified item state.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"state"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemText":[
			{
				"return_type":"void",
				"brief_description":"Sets the item label.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour of the item's text.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetQuickBestSize":[
			{
				"return_type":"void",
				"brief_description":"If true is passed, specifies that the control will use a quick calculation for the best size, looking only at the first and last items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"quickBestSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStateImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the state image list (from which application-defined state images are taken).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWindowStyle":[
			{
				"return_type":"void",
				"brief_description":"Sets the mode flags associated with the display of the tree control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"styles"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SortChildren":[
			{
				"return_type":"void",
				"brief_description":"Sorts the children of the given item using OnCompareItems().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Toggle":[
			{
				"return_type":"void",
				"brief_description":"Toggles the given item between collapsed and expanded states.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ToggleItemSelection":[
			{
				"return_type":"void",
				"brief_description":"Toggles the given item between selected and unselected states.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Unselect":[
			{
				"return_type":"void",
				"brief_description":"Removes the selection from the currently selected item (if any).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UnselectAll":[
			{
				"return_type":"void",
				"brief_description":"This function either behaves the same as Unselect() if the control doesn't have wxTR_MULTIPLE style, or removes the selection from all items if it does have this style.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UnselectItem":[
			{
				"return_type":"void",
				"brief_description":"Unselects the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxTreeItemId":{
		"wxTreeItemId":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this instance is referencing a valid tree item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxTreeItemData":{
		"GetId":[
			{
				"return_type":"const wxTreeItemId&",
				"brief_description":"Returns the item associated with this node.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets the item associated with this node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxTreeItemData":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxClientData"
		]
	},
	"wxClientData":{
		"wxClientData":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxImageList":{
		"Add":[
			{
				"return_type":"int",
				"brief_description":"Adds a new image or images using a bitmap and optional mask bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"mask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullBitmap"
				]
			},
			{
				"return_type":"int",
				"brief_description":"Adds a new image or images using a bitmap and mask colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"maskColour"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"int",
				"brief_description":"Adds a new image using an icon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxmsw",
					"wxosx"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Initializes the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"mask",
					"initialCount"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true",
					"1"
				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap corresponding to the given index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetIcon":[
			{
				"return_type":"wxIcon",
				"brief_description":"Returns the icon corresponding to the given index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetImageCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of images in the list.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"bool",
				"brief_description":"Retrieves the size of the images in the list.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int&",
					"int&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Remove":[
			{
				"return_type":"bool",
				"brief_description":"Removes the image at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveAll":[
			{
				"return_type":"bool",
				"brief_description":"Removes all the images in the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Replace":[
			{
				"return_type":"bool",
				"brief_description":"Replaces the existing image with the new image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"bitmap",
					"mask"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullBitmap"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Replaces the existing image with the new image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxIcon&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"icon"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				],
				"platforms":[
					"wxmsw",
					"wxosx"
				]
			}
		],
		"wxImageList":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor specifying the image size, whether image masks should be created, and the initial size of the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"mask",
					"initialCount"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true",
					"1"
				]
			}
		],
		"Draw":[
			{
				"return_type":"bool",
				"brief_description":"Draws a specified image onto a device context.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxDC&",
					"int",
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"dc",
					"x",
					"y",
					"flags",
					"solidBackground"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxIMAGELIST_DRAW_NORMAL",
					"false"
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxDC":{
		"_implements":[
			"wxObject"
		],
		"StartPage":[
			{
				"return_type":"void",
				"brief_description":"Starts a document page (only relevant when outputting to a printer).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StartDoc":[
			{
				"return_type":"bool",
				"brief_description":"Starts a document (only relevant when outputting to a printer).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"message"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUserScale":[
			{
				"return_type":"void",
				"brief_description":"Sets the user scaling factor, useful for applications which require 'zooming'.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xScale",
					"yScale"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetTextForeground":[
			{
				"return_type":"void",
				"brief_description":"Sets the current text foreground colour for the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextBackground":[
			{
				"return_type":"void",
				"brief_description":"Sets the current text background colour for the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CalcBoundingBox":[
			{
				"return_type":"void",
				"brief_description":"Adds the specified point to the bounding box which can be retrieved with MinX(), MaxX() and MinY(), MaxY() functions.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CanUseTransformMatrix":[
			{
				"return_type":"bool",
				"brief_description":"Check if the use of transformation matrix is supported by the current system.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Clears the device context using the current background brush.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CopyAttributes":[
			{
				"return_type":"void",
				"brief_description":"Copy attributes from another DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDC&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CrossHair":[
			{
				"return_type":"void",
				"brief_description":"Displays a cross hair using the current pen.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DestroyClippingRegion":[
			{
				"return_type":"void",
				"brief_description":"Destroys the current clipping region so that none of the DC is clipped.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeviceToLogicalX":[
			{
				"return_type":"wxCoord",
				"brief_description":"Convert device X coordinate to logical coordinate, using the current mapping mode, user scale factor, device origin and axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeviceToLogicalXRel":[
			{
				"return_type":"wxCoord",
				"brief_description":"Convert device X coordinate to relative logical coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeviceToLogicalY":[
			{
				"return_type":"wxCoord",
				"brief_description":"Converts device Y coordinate to logical coordinate, using the current mapping mode, user scale factor, device origin and axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeviceToLogicalYRel":[
			{
				"return_type":"wxCoord",
				"brief_description":"Convert device Y coordinate to relative logical coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DrawArc":[
			{
				"return_type":"void",
				"brief_description":"Draws an arc from the given start to the given end point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"xStart",
					"yStart",
					"xEnd",
					"yEnd",
					"xc",
					"yc"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxPoint&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"ptStart",
					"ptEnd",
					"centre"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawBitmap":[
			{
				"return_type":"void",
				"brief_description":"Draw a bitmap on the device context at the specified point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"wxCoord",
					"wxCoord",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"x",
					"y",
					"useMask"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"const wxPoint&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"bmp",
					"pt",
					"useMask"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			}
		],
		"DrawCheckMark":[
			{
				"return_type":"void",
				"brief_description":"Draws a check mark inside the given rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DrawCircle":[
			{
				"return_type":"void",
				"brief_description":"Draws a circle with the given centre and radius.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"radius"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"radius"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DrawEllipse":[
			{
				"return_type":"void",
				"brief_description":"Draws an ellipse contained in the rectangle specified either with the given top left corner and the given size or directly.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DrawEllipticArc":[
			{
				"return_type":"void",
				"brief_description":"Draws an arc of an ellipse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height",
					"start",
					"end"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&",
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pt",
					"sz",
					"sa",
					"ea"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawIcon":[
			{
				"return_type":"void",
				"brief_description":"Draw an icon on the display (does nothing if the device context is PostScript).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"icon",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"icon",
					"pt"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DrawLabel":[
			{
				"return_type":"void",
				"brief_description":"Draw optional bitmap and the text into the given rectangle and aligns it as specified by alignment parameter; it also will emphasize the character with the given index if it is != -1 and return the bounding rectangle if required.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxBitmap&",
					"const wxRect&",
					"int",
					"int",
					"wxRect*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"text",
					"bitmap",
					"rect",
					"alignment",
					"indexAccel",
					"rectBounding"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxALIGN_LEFT|wxALIGN_TOP",
					"-1",
					"NULL"
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxRect&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"text",
					"rect",
					"alignment",
					"indexAccel"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxALIGN_LEFT|wxALIGN_TOP",
					"-1"
				]
			}
		],
		"DrawLine":[
			{
				"return_type":"void",
				"brief_description":"Draws a line from the first point to the second.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x1",
					"y1",
					"x2",
					"y2"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt1",
					"pt2"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DrawLines":[
			{
				"return_type":"void",
				"brief_description":"This method uses a list of wxPoints, adding the optional offset coordinate.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPointList*",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"points",
					"xoffset",
					"yoffset"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0"
				]
			}
		],
		"DrawPoint":[
			{
				"return_type":"void",
				"brief_description":"Draws a point using the color of the current pen.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DrawRectangle":[
			{
				"return_type":"void",
				"brief_description":"Draws a rectangle with the given top left corner, and with the given size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"sz"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DrawRotatedText":[
			{
				"return_type":"void",
				"brief_description":"Draws the text rotated by angle degrees (positive angles are counterclockwise; the full angle is 360 degrees).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxCoord",
					"wxCoord",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"text",
					"x",
					"y",
					"angle"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxPoint&",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"text",
					"point",
					"angle"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawRoundedRectangle":[
			{
				"return_type":"void",
				"brief_description":"Draws a rectangle with the given top left corner, and with the given size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height",
					"radius"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pt",
					"sz",
					"radius"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"rect",
					"radius"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DrawSpline":[
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x1",
					"y1",
					"x2",
					"y2",
					"x3",
					"y3"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawText":[
			{
				"return_type":"void",
				"brief_description":"Draws a text string at the specified point, using the current text font, and the current text foreground and background colours.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"text",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"pt"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"EndDoc":[
			{
				"return_type":"void",
				"brief_description":"Ends a document (only relevant when outputting to a printer).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EndPage":[
			{
				"return_type":"void",
				"brief_description":"Ends a document page (only relevant when outputting to a printer).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FloodFill":[
			{
				"return_type":"bool",
				"brief_description":"Flood fills the device context starting from the given point, using the current brush colour, and using a style:",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"const wxColour&",
					"wxFloodFillStyle"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"colour",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxFLOOD_SURFACE"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxColour&",
					"wxFloodFillStyle"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pt",
					"col",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxFLOOD_SURFACE"
				]
			}
		],
		"GetBackground":[
			{
				"return_type":"const wxBrush&",
				"brief_description":"Gets the brush used for painting the background.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBackgroundMode":[
			{
				"return_type":"int",
				"brief_description":"Returns the current background mode: wxSOLID or wxTRANSPARENT.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBrush":[
			{
				"return_type":"const wxBrush&",
				"brief_description":"Gets the current brush.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharHeight":[
			{
				"return_type":"wxCoord",
				"brief_description":"Gets the character height of the currently set font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharWidth":[
			{
				"return_type":"wxCoord",
				"brief_description":"Gets the average character width of the currently set font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClippingBox":[
			{
				"return_type":"void",
				"brief_description":"Gets the rectangle surrounding the current clipping region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord*",
					"wxCoord*",
					"wxCoord*",
					"wxCoord*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetDepth":[
			{
				"return_type":"int",
				"brief_description":"Returns the depth (number of bits\/pixel) of this DC.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDeviceOrigin":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the current device origin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"const wxFont&",
				"brief_description":"Gets the current font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontMetrics":[
			{
				"return_type":"wxFontMetrics",
				"brief_description":"Returns the various font characteristics.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLayoutDirection":[
			{
				"return_type":"wxLayoutDirection",
				"brief_description":"Gets the current layout direction of the device context.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLogicalFunction":[
			{
				"return_type":"wxRasterOperationMode",
				"brief_description":"Gets the current logical function.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLogicalOrigin":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord*",
					"wxCoord*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxPoint",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLogicalScale":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double*",
					"double*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetMapMode":[
			{
				"return_type":"wxMappingMode",
				"brief_description":"Gets the current mapping mode for the device context.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMultiLineTextExtent":[
			{
				"return_type":"void",
				"brief_description":"Gets the dimensions of the string using the currently selected font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxCoord*",
					"wxCoord*",
					"wxCoord*",
					"const wxFont*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"string",
					"w",
					"h",
					"heightLine",
					"font"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"NULL",
					"NULL"
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"Gets the dimensions of the string using the currently selected font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPPI":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the resolution of the device in pixels per inch.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPartialTextExtents":[
			{
				"return_type":"bool",
				"brief_description":"Fills the widths array with the widths from the beginning of text to the corresponding character of text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxArrayInt&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"widths"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPen":[
			{
				"return_type":"const wxPen&",
				"brief_description":"Gets the current pen.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPixel":[
			{
				"return_type":"bool",
				"brief_description":"Gets in colour the colour at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxColour*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"colour"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetSize":[
			{
				"return_type":"void",
				"brief_description":"Gets the horizontal and vertical extent of this device context in device units.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord*",
					"wxCoord*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSizeMM":[
			{
				"return_type":"void",
				"brief_description":"Returns the horizontal and vertical resolution in millimetres.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord*",
					"wxCoord*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextBackground":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Gets the current text background colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextExtent":[
			{
				"return_type":"void",
				"brief_description":"Gets the dimensions of the string using the currently selected font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxCoord*",
					"wxCoord*",
					"wxCoord*",
					"wxCoord*",
					"const wxFont*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"string",
					"w",
					"h",
					"descent",
					"externalLeading",
					"font"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"NULL",
					"NULL",
					"NULL"
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetTextForeground":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Gets the current text foreground colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTransformMatrix":[
			{
				"return_type":"wxAffineMatrix2D",
				"brief_description":"Return the transformation matrix used by this device context.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUserScale":[
			{
				"return_type":"void",
				"brief_description":"Gets the current user scale factor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double*",
					"double*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GradientFillConcentric":[
			{
				"return_type":"void",
				"brief_description":"Fill the area specified by rect with a radial gradient, starting from initialColour at the centre of the circle and fading to destColour on the circle outside.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"rect",
					"initialColour",
					"destColour"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Fill the area specified by rect with a radial gradient, starting from initialColour at the centre of the circle and fading to destColour on the circle outside.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"const wxColour&",
					"const wxColour&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"rect",
					"initialColour",
					"destColour",
					"circleCenter"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GradientFillLinear":[
			{
				"return_type":"void",
				"brief_description":"Fill the area specified by rect with a linear gradient, starting from initialColour and eventually fading to destColour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"const wxColour&",
					"const wxColour&",
					"wxDirection"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"rect",
					"initialColour",
					"destColour",
					"nDirection"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxRIGHT"
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the DC is ok to use.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LogicalToDeviceX":[
			{
				"return_type":"wxCoord",
				"brief_description":"Converts logical X coordinate to device coordinate, using the current mapping mode, user scale factor, device origin and axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LogicalToDeviceY":[
			{
				"return_type":"wxCoord",
				"brief_description":"Converts logical Y coordinate to device coordinate, using the current mapping mode, user scale factor, device origin and axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LogicalToDeviceXRel":[
			{
				"return_type":"wxCoord",
				"brief_description":"Converts logical X coordinate to relative device coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LogicalToDeviceYRel":[
			{
				"return_type":"wxCoord",
				"brief_description":"Converts logical Y coordinate to relative device coordinate, using the current mapping mode and user scale factor but ignoring the axis orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MaxX":[
			{
				"return_type":"wxCoord",
				"brief_description":"Gets the maximum horizontal extent used in drawing commands so far.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MaxY":[
			{
				"return_type":"wxCoord",
				"brief_description":"Gets the maximum vertical extent used in drawing commands so far.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MinX":[
			{
				"return_type":"wxCoord",
				"brief_description":"Gets the minimum horizontal extent used in drawing commands so far.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MinY":[
			{
				"return_type":"wxCoord",
				"brief_description":"Gets the minimum vertical extent used in drawing commands so far.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ResetBoundingBox":[
			{
				"return_type":"void",
				"brief_description":"Resets the bounding box: after a call to this function, the bounding box doesn't contain anything.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ResetTransformMatrix":[
			{
				"return_type":"void",
				"brief_description":"Revert the transformation matrix to identity matrix.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAxisOrientation":[
			{
				"return_type":"void",
				"brief_description":"Sets the x and y axis orientation (i.e. the direction from lowest to highest values on the axis).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xLeftRight",
					"yBottomUp"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetBackground":[
			{
				"return_type":"void",
				"brief_description":"Sets the current background brush for the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBrush&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"brush"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackgroundMode":[
			{
				"return_type":"void",
				"brief_description":"mode may be one of wxSOLID and wxTRANSPARENT.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBrush":[
			{
				"return_type":"void",
				"brief_description":"Sets the current brush for the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBrush&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"brush"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetClippingRegion":[
			{
				"return_type":"void",
				"brief_description":"Sets the clipping region for this device context to the intersection of the given region described by the parameters of this method and the previously set clipping region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"sz"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDeviceClippingRegion":[
			{
				"return_type":"void",
				"brief_description":"Sets the clipping region for this device context.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDeviceOrigin":[
			{
				"return_type":"void",
				"brief_description":"Sets the device origin (i.e. the origin in pixels after scaling has been applied).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the current font for the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLayoutDirection":[
			{
				"return_type":"void",
				"brief_description":"Sets the current layout direction for the device context.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLayoutDirection"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLogicalFunction":[
			{
				"return_type":"void",
				"brief_description":"Sets the current logical function for the device context.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRasterOperationMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"function"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLogicalOrigin":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetLogicalScale":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMapMode":[
			{
				"return_type":"void",
				"brief_description":"The mapping mode of the device context defines the unit of measurement used to convert logical units to device units.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMappingMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPalette":[
			{
				"return_type":"void",
				"brief_description":"If this is a window DC or memory DC, assigns the given palette to the window or bitmap associated with the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPalette&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"palette"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPen":[
			{
				"return_type":"void",
				"brief_description":"Sets the current pen for the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPen&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pen"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTransformMatrix":[
			{
				"return_type":"bool",
				"brief_description":"Set the transformation matrix.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAffineMatrix2D&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"matrix"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StretchBlit":[
			{
				"return_type":"bool",
				"brief_description":"Copy from a source DC to this DC possibly changing the scale.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxDC*",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxRasterOperationMode",
					"bool",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"xdest",
					"ydest",
					"dstWidth",
					"dstHeight",
					"source",
					"xsrc",
					"ysrc",
					"srcWidth",
					"srcHeight",
					"logicalFunc",
					"useMask",
					"xsrcMask",
					"ysrcMask"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					"wxCOPY",
					"false",
					"wxDefaultCoord",
					"wxDefaultCoord"
				]
			}
		],
		"Blit":[
			{
				"return_type":"bool",
				"brief_description":"Copy from a source DC to this DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxDC*",
					"wxCoord",
					"wxCoord",
					"wxRasterOperationMode",
					"bool",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"xdest",
					"ydest",
					"width",
					"height",
					"source",
					"xsrc",
					"ysrc",
					"logicalFunc",
					"useMask",
					"xsrcMask",
					"ysrcMask"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					"wxCOPY",
					"false",
					"wxDefaultCoord",
					"wxDefaultCoord"
				]
			}
		]
	},
	"wxColour":{
		"wxColour":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"red",
					"green",
					"blue",
					"alpha"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxALPHA_OPAQUE"
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colourName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colRGB"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Set":[
			{
				"return_type":"void",
				"brief_description":"Sets the RGB intensity values using the given values (first overload), extracting them from the packed long (second overload), using the given string (third overload).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"RGB"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the RGB intensity values using the given values (first overload), extracting them from the packed long (second overload), using the given string (third overload).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"red",
					"green",
					"blue",
					"alpha"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxALPHA_OPAQUE"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Sets the RGB intensity values using the given values (first overload), extracting them from the packed long (second overload), using the given string (third overload).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"str"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Red":[
			{
				"return_type":"unsigned char",
				"brief_description":"Returns the red intensity.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetRGB":[
			{
				"return_type":"void",
				"brief_description":"Sets the RGB or RGBA colour values from a single 32 bit value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint32"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colRGB"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRGBA":[
			{
				"return_type":"void",
				"brief_description":"Sets the RGB or RGBA colour values from a single 32 bit value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint32"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colRGBA"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Blue":[
			{
				"return_type":"unsigned char",
				"brief_description":"Returns the blue intensity.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Green":[
			{
				"return_type":"unsigned char",
				"brief_description":"Returns the green intensity.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRGBA":[
			{
				"return_type":"wxUint32",
				"brief_description":"Gets the RGB or RGBA colour values as a single 32 bit value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRGB":[
			{
				"return_type":"wxUint32",
				"brief_description":"Gets the RGB or RGBA colour values as a single 32 bit value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Alpha":[
			{
				"return_type":"unsigned char",
				"brief_description":"Returns the alpha value, on platforms where alpha is not yet supported, this always returns wxALPHA_OPAQUE.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxFont":{
		"wxFont":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor, uses reference counting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a font object with the specified attributes and size in points.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxFontFamily",
					"wxFontStyle",
					"wxFontWeight",
					"bool",
					"const wxString&",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pointSize",
					"family",
					"style",
					"weight",
					"underline",
					"faceName",
					"encoding"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false",
					"wxEmptyString",
					"wxFONTENCODING_DEFAULT"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a font object with the specified attributes and size in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"wxFontFamily",
					"wxFontStyle",
					"wxFontWeight",
					"bool",
					"const wxString&",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pixelSize",
					"family",
					"style",
					"weight",
					"underline",
					"faceName",
					"encoding"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false",
					"wxEmptyString",
					"wxFONTENCODING_DEFAULT"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor from font description string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nativeInfoString"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Construct font from a native font info structure.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxNativeFontInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nativeInfo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Bold":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns a bold version of this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultEncoding":[
			{
				"return_type":"wxFontEncoding",
				"brief_description":"Returns the current application's default encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEncoding":[
			{
				"return_type":"wxFontEncoding",
				"brief_description":"Returns the encoding of this font.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFaceName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the face name associated with the font, or the empty string if there is no face information.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFamily":[
			{
				"return_type":"wxFontFamily",
				"brief_description":"Gets the font family if possible.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNativeFontInfoDesc":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the platform-dependent string completely describing this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNativeFontInfoUserDesc":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a user-friendly string for this font object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPixelSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Gets the pixel size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPointSize":[
			{
				"return_type":"int",
				"brief_description":"Gets the point size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"wxFontStyle",
				"brief_description":"Gets the font style.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUnderlined":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the font is underlined, false otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWeight":[
			{
				"return_type":"wxFontWeight",
				"brief_description":"Gets the font weight.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsFixedWidth":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the font is a fixed width (or monospaced) font, false if it is a proportional one or font is invalid.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this object is a valid font, false otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Italic":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns an italic version of this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Larger":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns a larger version of this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MakeBold":[
			{
				"return_type":"wxFont&",
				"brief_description":"Changes this font to be bold.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MakeItalic":[
			{
				"return_type":"wxFont&",
				"brief_description":"Changes this font to be italic.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MakeLarger":[
			{
				"return_type":"wxFont&",
				"brief_description":"Changes this font to be larger.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MakeSmaller":[
			{
				"return_type":"wxFont&",
				"brief_description":"Changes this font to be smaller.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MakeUnderlined":[
			{
				"return_type":"wxFont&",
				"brief_description":"Changes this font to be underlined.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"New":[
			{
				"return_type":"wxFont*",
				"brief_description":"This function takes the same parameters as the relative wxFont constructor and returns a new font object allocated on the heap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"int",
					"wxFontFamily",
					"wxFontStyle",
					"wxFontWeight",
					"bool",
					"const wxString&",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pointSize",
					"family",
					"style",
					"weight",
					"underline",
					"faceName",
					"encoding"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false",
					"wxEmptyString",
					"wxFONTENCODING_DEFAULT"
				]
			},
			{
				"return_type":"wxFont*",
				"brief_description":"This function takes the same parameters as the relative wxFont constructor and returns a new font object allocated on the heap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"int",
					"wxFontFamily",
					"int",
					"const wxString&",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pointSize",
					"family",
					"flags",
					"faceName",
					"encoding"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxFONTFLAG_DEFAULT",
					"wxEmptyString",
					"wxFONTENCODING_DEFAULT"
				]
			},
			{
				"return_type":"wxFont*",
				"brief_description":"This function takes the same parameters as the relative wxFont constructor and returns a new font object allocated on the heap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"wxFontFamily",
					"wxFontStyle",
					"wxFontWeight",
					"bool",
					"const wxString&",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pixelSize",
					"family",
					"style",
					"weight",
					"underline",
					"faceName",
					"encoding"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false",
					"wxEmptyString",
					"wxFONTENCODING_DEFAULT"
				]
			},
			{
				"return_type":"wxFont*",
				"brief_description":"This function takes the same parameters as the relative wxFont constructor and returns a new font object allocated on the heap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"wxFontFamily",
					"int",
					"const wxString&",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pixelSize",
					"family",
					"flags",
					"faceName",
					"encoding"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxFONTFLAG_DEFAULT",
					"wxEmptyString",
					"wxFONTENCODING_DEFAULT"
				]
			},
			{
				"return_type":"wxFont*",
				"brief_description":"This function takes the same parameters as the relative wxFont constructor and returns a new font object allocated on the heap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nativeInfoString"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxFont*",
				"brief_description":"This function takes the same parameters as the relative wxFont constructor and returns a new font object allocated on the heap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxNativeFontInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nativeInfo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Scale":[
			{
				"return_type":"wxFont&",
				"brief_description":"Changes the size of this font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"float"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Scaled":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns a scaled version of this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"float"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultEncoding":[
			{
				"return_type":"void",
				"brief_description":"Sets the default font encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEncoding":[
			{
				"return_type":"void",
				"brief_description":"Sets the encoding for this font.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFaceName":[
			{
				"return_type":"bool",
				"brief_description":"Sets the facename for the font.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"faceName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFamily":[
			{
				"return_type":"void",
				"brief_description":"Sets the font family.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontFamily"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"family"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNativeFontInfo":[
			{
				"return_type":"bool",
				"brief_description":"Creates the font corresponding to the given native font description string which must have been previously returned by GetNativeFontInfoDesc().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the encoding for this font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxNativeFontInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNativeFontInfoUserDesc":[
			{
				"return_type":"bool",
				"brief_description":"Creates the font corresponding to the given native font description string and returns true if the creation was successful.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPixelSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the pixel size.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixelSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPointSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the point size.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pointSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"void",
				"brief_description":"Sets the font style.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontStyle"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSymbolicSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the font size using a predefined symbolic size name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontSymbolicSize"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSymbolicSizeRelativeTo":[
			{
				"return_type":"void",
				"brief_description":"Sets the font size compared to the base font size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontSymbolicSize",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"size",
					"base"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetUnderlined":[
			{
				"return_type":"void",
				"brief_description":"Sets underlining.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"underlined"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the font weight.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontWeight"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"weight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Smaller":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns a smaller version of this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Underlined":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns underlined version of this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNativeFontInfo":[
			{
				"return_type":"const wxNativeFontInfo*",
				"brief_description":"Returns the encoding of this font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGDIObject"
		]
	},
	"wxPanel":{
		"_implements":[
			"wxWindow"
		],
		"AcceptsFocus":[
			{
				"return_type":"bool",
				"brief_description":"This method is overridden from wxWindow::AcceptsFocus() and returns true only if there is no child window in the panel which can accept the focus.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Used for two-step panel construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTAB_TRAVERSAL",
					"wxPanelNameStr"
				]
			}
		],
		"InitDialog":[
			{
				"return_type":"void",
				"brief_description":"Sends a wxInitDialogEvent, which in turn transfers data to the dialog via validators.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Layout":[
			{
				"return_type":"bool",
				"brief_description":"See wxWindow::SetAutoLayout(): when auto layout is on, this function gets called automatically when the window is resized.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFocus":[
			{
				"return_type":"void",
				"brief_description":"Overrides wxWindow::SetFocus().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFocusIgnoringChildren":[
			{
				"return_type":"void",
				"brief_description":"In contrast to SetFocus() (see above) this will set the focus to the panel even if there are child windows in the panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxPanel":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTAB_TRAVERSAL",
					"wxPanelNameStr"
				]
			}
		]
	},
	"wxCheckListBox":{
		"Check":[
			{
				"return_type":"void",
				"brief_description":"Checks the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"check"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"const wxString",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					true,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"nStrings",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"NULL",
					"0",
					"wxDefaultValidator",
					"wxListBoxNameStr"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxListBoxNameStr"
				]
			}
		],
		"IsChecked":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given item is checked, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxCheckListBox":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a list box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"\"listBox\""
				]
			}
		],
		"_implements":[
			"wxListBox"
		]
	},
	"wxListBox":{
		"wxListBox":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a list box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxListBoxNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetStringSelection":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"s",
					"select"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetString":[
			{
				"return_type":"void",
				"brief_description":"Sets the label for the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection to the given item n or removes the selection entirely if n == wxNOT_FOUND.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFirstItem":[
			{
				"return_type":"void",
				"brief_description":"Set the specified item to be the first visible item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the specified item to be the first visible item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSorted":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the listbox has wxLB_SORT style.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertItems":[
			{
				"return_type":"void",
				"brief_description":"Insert the given number of strings before the specified position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"items",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsSelected":[
			{
				"return_type":"bool",
				"brief_description":"Determines whether an item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HitTest":[
			{
				"return_type":"int",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"int",
				"brief_description":"Returns the item located at point, or wxNOT_FOUND if there is no item located at point.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"point"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of the item with the given index.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the selected item or wxNOT_FOUND if no item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of items in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindString":[
			{
				"return_type":"int",
				"brief_description":"Finds an item whose label matches the given string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"string",
					"caseSensitive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"EnsureVisible":[
			{
				"return_type":"void",
				"brief_description":"Ensure that the item with the given index is currently shown.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Deselect":[
			{
				"return_type":"void",
				"brief_description":"Deselects an item in the list box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the listbox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxListBoxNameStr"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates the listbox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"const wxString",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					true,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"n",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"NULL",
					"0",
					"wxDefaultValidator",
					"wxListBoxNameStr"
				]
			}
		],
		"_implements":[
			"wxControlWithItems"
		]
	},
	"wxControlWithItems":{
		"_implements":[
			"wxControl",
			"wxItemContainer"
		]
	},
	"wxMenuBar":{
		"wxMenuBar":[
			{
				"return_type":"",
				"brief_description":"Construct an empty menu bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"Append":[
			{
				"return_type":"bool",
				"brief_description":"Adds the item to the end of the menu bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"menu",
					"title"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Attach":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFrame*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"frame"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Check":[
			{
				"return_type":"void",
				"brief_description":"Checks or unchecks a menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"check"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Detach":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Enable":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables (greys out) a menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"enable"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"EnableTop":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables a whole menu.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"enable"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"FindMenu":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the menu with the given title or wxNOT_FOUND if no such menu exists in this menubar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindMenuItem":[
			{
				"return_type":"int",
				"brief_description":"Finds the menu item id for a menu name\/menu item string pair.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"menuString",
					"itemString"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetFrame":[
			{
				"return_type":"wxFrame*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHelpString":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the help string associated with the menu item identifier.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the label associated with a menu item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLabelTop":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of a top-level menu.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"GetMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Returns the menu at menuIndex (zero-based).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menuIndex"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMenuCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of menus in this menubar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMenuLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of a top-level menu.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMenuLabelText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of a top-level menu.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Insert":[
			{
				"return_type":"bool",
				"brief_description":"Inserts the menu at the given position into the menu bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxMenu*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"menu",
					"title"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"IsAttached":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsChecked":[
			{
				"return_type":"bool",
				"brief_description":"Determines whether an item is checked.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Determines whether an item is enabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Refresh":[
			{
				"return_type":"void",
				"brief_description":"Redraw the menu bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxRect*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"eraseBackground",
					"rect"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true",
					"NULL"
				]
			}
		],
		"Remove":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Removes the menu from the menu bar and returns the menu object - the caller is responsible for deleting it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Replace":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Replaces the menu at the given position with another one.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxMenu*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"menu",
					"title"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetHelpString":[
			{
				"return_type":"void",
				"brief_description":"Sets the help string associated with a menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"helpString"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the label of a menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetLabelTop":[
			{
				"return_type":"void",
				"brief_description":"Sets the label of a top-level menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				],
				"deprecated":true
			}
		],
		"SetMenuLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the label of a top-level menu.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxWindow"
		]
	},
	"wxMenuEvent":{
		"GetMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Returns the menu which is being opened or closed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMenuId":[
			{
				"return_type":"int",
				"brief_description":"Returns the menu identifier associated with the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPopup":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the menu which is being opened or closed is a popup menu, false if it is a normal one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxMenuEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"wxMenu*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"id",
					"menu"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"NULL"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxMenuItem":{
		"_implements":[
			"wxObject"
		],
		"wxMenuItem":[
			{
				"return_type":"",
				"brief_description":"Constructs a wxMenuItem object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*",
					"int",
					"const wxString&",
					"const wxString&",
					"wxItemKind",
					"wxMenu*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parentMenu",
					"id",
					"text",
					"helpString",
					"kind",
					"subMenu"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL",
					"wxID_SEPARATOR",
					"wxEmptyString",
					"wxEmptyString",
					"wxITEM_NORMAL",
					"NULL"
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Sets the text associated with the menu item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"SetSubMenu":[
			{
				"return_type":"void",
				"brief_description":"Sets the submenu of this menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMenu":[
			{
				"return_type":"void",
				"brief_description":"Sets the parent menu which will contain this menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the label associated with the menu item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHelp":[
			{
				"return_type":"void",
				"brief_description":"Sets the help string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"helpString"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSubMenu":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is a submenu.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSeparator":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is a separator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Check":[
			{
				"return_type":"void",
				"brief_description":"Checks or unchecks the menu item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"check"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Enable":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the menu item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"Returns the checked or unchecked bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"GetHelp":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the help string associated with the menu item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"int",
				"brief_description":"Returns the menu item identifier.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text associated with the menu item including any accelerator characters that were passed to the constructor or SetItemLabel().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemLabelText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text associated with the menu item, without any accelerator characters.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKind":[
			{
				"return_type":"wxItemKind",
				"brief_description":"Returns the item kind, one of wxITEM_SEPARATOR, wxITEM_NORMAL, wxITEM_CHECK or wxITEM_RADIO.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text associated with the menu item without any accelerator characters it might contain.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"GetLabelFromText":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"GetLabelText":[
			{
				"return_type":"wxString",
				"brief_description":"Strips all accelerator characters and mnemonics from the given text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Returns the menu this menu item is in, or NULL if this menu item is not attached.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text associated with the menu item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"GetSubMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Returns the submenu associated with the menu item, or NULL if there isn't one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the text associated with the menu item, such as it was passed to the wxMenuItem constructor, i.e.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"IsCheckable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is checkable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsChecked":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is checked.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is enabled.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap for the menu item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxmsw",
					"wxosx",
					"wxgtk"
				]
			}
		]
	},
	"wxMenu":{
		"wxMenu":[
			{
				"return_type":"",
				"brief_description":"Constructs a wxMenu object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a wxMenu object with a title.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"title",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a wxMenu object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetTitle":[
			{
				"return_type":"void",
				"brief_description":"Sets the title of the menu.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParent":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabel":[
			{
				"return_type":"void",
				"brief_description":"Sets the label of a menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetInvokingWindow":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHelpString":[
			{
				"return_type":"void",
				"brief_description":"Sets an item's help string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"helpString"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Remove":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Removes the menu item from the menu but doesn't delete the associated C++ object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Removes the menu item from the menu but doesn't delete the associated C++ object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrependSeparator":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts a separator at position 0.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PrependRadioItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts a radio item at position 0.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"item",
					"helpString"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"PrependCheckItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts a checkable item at position 0.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"item",
					"helpString"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"Prepend":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts the given item at position 0, i.e. before all the other existing items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&",
					"wxItemKind"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"item",
					"helpString",
					"kind"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString",
					"wxEmptyString",
					"wxITEM_NORMAL"
				]
			},
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts the given item at position 0, i.e. before all the other existing items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Append":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Adds a menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&",
					"wxItemKind"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"item",
					"helpString",
					"kind"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString",
					"wxEmptyString",
					"wxITEM_NORMAL"
				]
			},
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Adds a submenu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"wxMenu*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"item",
					"subMenu",
					"helpString"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString"
				],
				"deprecated":true
			},
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Adds a menu item object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menuItem"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AppendCheckItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Adds a checkable item to the end of the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"item",
					"help"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"AppendRadioItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Adds a radio item to the end of the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"item",
					"help"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"AppendSeparator":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Adds a separator to the end of the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AppendSubMenu":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Adds the given submenu to this menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"submenu",
					"text",
					"help"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"Attach":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenuBar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menubar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Break":[
			{
				"return_type":"void",
				"brief_description":"Inserts a break in a menu, causing the next appended item to appear in a new column.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Check":[
			{
				"return_type":"void",
				"brief_description":"Checks or unchecks the menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"check"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Delete":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the menu item from the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Deletes the menu item from the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Destroy":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the menu item from the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Deletes the menu item from the menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Detach":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvtHandler"
		],
		"Enable":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables (greys out) a menu item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"enable"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"FindItem":[
			{
				"return_type":"int",
				"brief_description":"Finds the menu id for a menu item string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"itemString"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindItemByPosition":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Returns the wxMenuItem given a position in the menu.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"position"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetHelpString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the help string associated with a menu item.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetInvokingWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabel":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a menu item label.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLabelText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a menu item label, without any of the original mnemonics and accelerators.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMenuItemCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of items in the menu.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParent":[
			{
				"return_type":"wxMenu*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"long",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTitle":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the title of the menu.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Insert":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts the given item before the position pos.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"menuItem"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts the given item before the position pos.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int",
					"const wxString&",
					"const wxString&",
					"wxItemKind"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"id",
					"item",
					"helpString",
					"kind"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxEmptyString",
					"wxITEM_NORMAL"
				]
			}
		],
		"InsertCheckItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts a checkable item at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"id",
					"item",
					"helpString"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"InsertRadioItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts a radio item at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"id",
					"item",
					"helpString"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"InsertSeparator":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Inserts a separator at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsAttached":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsChecked":[
			{
				"return_type":"bool",
				"brief_description":"Determines whether a menu item is checked.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Determines whether a menu item is enabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindChildItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Finds the menu item object associated with the given menu item identifier and, optionally, the position of the item in the menu.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"size_t*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		]
	},
	"wxEvent":{
		"_implements":[
			"wxObject"
		],
		"GetEventCategory":[
			{
				"return_type":"wxEventCategory",
				"brief_description":"Returns a generic category for this event.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEventObject":[
			{
				"return_type":"wxObject*",
				"brief_description":"Returns the object (usually a window) associated with the event, if any.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEventType":[
			{
				"return_type":"wxEventType",
				"brief_description":"Returns the identifier of the given event type, such as wxEVT_BUTTON.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"int",
				"brief_description":"Returns the identifier associated with this event, such as a button command id.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSkipped":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event handler should be skipped, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTimestamp":[
			{
				"return_type":"long",
				"brief_description":"Gets the timestamp for the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsCommandEvent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event is or is derived from wxCommandEvent else it returns false.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ResumePropagation":[
			{
				"return_type":"void",
				"brief_description":"Sets the propagation level to the given value (for example returned from an earlier call to wxEvent::StopPropagation).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"propagationLevel"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEventObject":[
			{
				"return_type":"void",
				"brief_description":"Sets the originating object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"object"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEventType":[
			{
				"return_type":"void",
				"brief_description":"Sets the event type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets the identifier associated with this event, such as a button command id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTimestamp":[
			{
				"return_type":"void",
				"brief_description":"Sets the timestamp for the event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"timeStamp"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"ShouldPropagate":[
			{
				"return_type":"bool",
				"brief_description":"Test if this event should be propagated or not, i.e. if the propagation level is currently greater than 0.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Skip":[
			{
				"return_type":"void",
				"brief_description":"This method can be used inside an event handler to control whether further event handlers bound to this event will be called after the current one returns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"skip"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"StopPropagation":[
			{
				"return_type":"int",
				"brief_description":"Stop the event from propagating to its parent window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxEventType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"eventType"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"wxEVT_NULL"
				]
			}
		],
		"Clone":[
			{
				"return_type":"wxEvent*",
				"brief_description":"Returns a copy of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxTreeEvent":{
		"GetItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the item (valid for all events).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKeyCode":[
			{
				"return_type":"int",
				"brief_description":"Returns the key code if the event is a key event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKeyEvent":[
			{
				"return_type":"const wxKeyEvent&",
				"brief_description":"Returns the key event for EVT_TREE_KEY_DOWN events.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabel":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the label if the event is a begin or end edit label event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOldItem":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the old item index (valid for EVT_TREE_ITEM_CHANGING and EVT_TREE_ITEM_CHANGED events).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPoint":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the position of the mouse pointer if the event is a drag or menu-context event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEditCancelled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the label edit was cancelled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetToolTip":[
			{
				"return_type":"void",
				"brief_description":"Set the tooltip for the item (valid for EVT_TREE_ITEM_GETTOOLTIP events).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tooltip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxTreeEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor, used by wxWidgets itself only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"wxTreeCtrl*",
					"const wxTreeItemId&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"tree",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxTreeItemId()"
				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxKeyEvent":{
		"DoAllowNextEvent":[
			{
				"return_type":"void",
				"brief_description":"Allow normal key events generation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKeyCode":[
			{
				"return_type":"int",
				"brief_description":"Returns the key code of the key that generated this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Obtains the position (in client coordinates) at which the key was pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"void",
				"brief_description":"Obtains the position (in client coordinates) at which the key was pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord*",
					"wxCoord*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRawKeyCode":[
			{
				"return_type":"wxUint32",
				"brief_description":"Returns the raw key code for this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRawKeyFlags":[
			{
				"return_type":"wxUint32",
				"brief_description":"Returns the low level key flags for this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetX":[
			{
				"return_type":"wxCoord",
				"brief_description":"Returns the X position (in client coordinates) of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetY":[
			{
				"return_type":"wxCoord",
				"brief_description":"Returns the Y position (in client coordinates) of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsKeyInCategory":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the key is in the given key category.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"category"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsNextEventAllowed":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if DoAllowNextEvent() had been called, false by default.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxKeyEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"keyEventType"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL"
				]
			}
		],
		"_implements":[
			"wxKeyboardState",
			"wxEvent"
		],
		"GetUnicodeKey":[
			{
				"return_type":"wxChar",
				"brief_description":"Returns the Unicode character corresponding to this key event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxKeyboardState":{
		"AltDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Alt key is pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CmdDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the key used for command accelerators is pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"ControlDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Control key or Apple\/Command key under OS X is pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModifiers":[
			{
				"return_type":"int",
				"brief_description":"Return the bit mask of all pressed modifier keys.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasModifiers":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if Control or Alt are pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MetaDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Meta\/Windows\/Apple key is pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RawControlDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Control key (also under OS X).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAltDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetControlDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMetaDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRawControlDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetShiftDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShiftDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Shift key is pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxKeyboardState":[
			{
				"return_type":"",
				"brief_description":"Constructor initializes the modifier key settings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"bool",
					"bool",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"controlDown",
					"shiftDown",
					"altDown",
					"metaDown"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false",
					"false",
					"false",
					"false"
				]
			}
		]
	},
	"wxNotifyEvent":{
		"Allow":[
			{
				"return_type":"void",
				"brief_description":"This is the opposite of Veto(): it explicitly allows the event to be processed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAllowed":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the change is allowed (Veto() hasn't been called) or false otherwise (if it was).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Veto":[
			{
				"return_type":"void",
				"brief_description":"Prevents the change announced by this event from happening.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxNotifyEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor (used internally by wxWidgets only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"eventType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxCommandEvent":{
		"wxCommandEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandEventType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		],
		"SetString":[
			{
				"return_type":"void",
				"brief_description":"Sets the m_commandString member.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetInt":[
			{
				"return_type":"void",
				"brief_description":"Sets the m_commandInt member.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"intCommand"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtraLong":[
			{
				"return_type":"void",
				"brief_description":"Sets the m_extraLong member.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extraLong"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSelection":[
			{
				"return_type":"bool",
				"brief_description":"For a listbox or similar event, returns true if it is a selection, false if it is a deselection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsChecked":[
			{
				"return_type":"bool",
				"brief_description":"This method can be used with checkbox and menu events: for the checkboxes, the method returns true for a selection event and false for a deselection one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns item string for a listbox or choice selection event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns item index for a listbox or choice selection event (not valid for a deselection).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInt":[
			{
				"return_type":"int",
				"brief_description":"Returns the integer identifier corresponding to a listbox, choice or radiobox selection (only if the event was a selection, not a deselection), or a boolean value representing the value of a checkbox.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtraLong":[
			{
				"return_type":"long",
				"brief_description":"Returns extra information dependent on the event objects type.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxCloseEvent":{
		"_implements":[
			"wxEvent"
		],
		"CanVeto":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if you can veto a system shutdown or a window close event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLoggingOff":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the user is just logging off or false if the system is shutting down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCanVeto":[
			{
				"return_type":"void",
				"brief_description":"Sets the 'can veto' flag.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"canVeto"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLoggingOff":[
			{
				"return_type":"void",
				"brief_description":"Sets the 'logging off' flag.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"loggingOff"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Veto":[
			{
				"return_type":"void",
				"brief_description":"Call this from your event handler to veto a system shutdown or to signal to the calling application that a window close did not happen.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"veto"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"wxCloseEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandEventType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		]
	},
	"wxActivateEvent":{
		"wxActivateEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"bool",
					"int",
					"Reason"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"eventType",
					"active",
					"id",
					"ActivationReason"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"true",
					"0",
					"Reason_Unknown"
				]
			}
		],
		"GetActive":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the application or window is being activated, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxAuiManager":{
		"wxAuiManager":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"managed_wnd",
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL",
					"wxAUI_MGR_DEFAULT"
				]
			}
		],
		"Update":[
			{
				"return_type":"void",
				"brief_description":"This method is called after any number of changes are made to any of the managed panes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UnInit":[
			{
				"return_type":"void",
				"brief_description":"Uninitializes the framework and should be called before a managed frame or window is destroyed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowHint":[
			{
				"return_type":"void",
				"brief_description":"This function is used by controls to explicitly show a hint window at the specified rectangle.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetManagedWindow":[
			{
				"return_type":"void",
				"brief_description":"Called to specify the frame or window which is to be managed by wxAuiManager.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"managed_wnd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDockSizeConstraint":[
			{
				"return_type":"void",
				"brief_description":"When a user creates a new dock by dragging a window into a docked position, often times the large size of the window will create a dock that is unwieldly large.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"widthpct",
					"heightpct"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"This method is used to specify wxAuiManagerOption's flags.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetArtProvider":[
			{
				"return_type":"void",
				"brief_description":"Instructs wxAuiManager to use art provider specified by parameter art_provider for all drawing calls.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAuiDockArt*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"art_provider"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SavePerspective":[
			{
				"return_type":"wxString",
				"brief_description":"Saves the entire user interface layout into an encoded wxString, which can then be stored by the application (probably using wxConfig).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SavePaneInfo":[
			{
				"return_type":"wxString",
				"brief_description":"SavePaneInfo() is similar to SavePerspective, with the exception that it only saves information about a single pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pane"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ProcessDockResult":[
			{
				"return_type":"bool",
				"brief_description":"ProcessDockResult() is a protected member of the wxAUI layout manager.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxAuiPaneInfo&",
					"const wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"target",
					"new_pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"LoadPerspective":[
			{
				"return_type":"bool",
				"brief_description":"Loads a saved perspective.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"perspective",
					"update"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"LoadPaneInfo":[
			{
				"return_type":"void",
				"brief_description":"LoadPaneInfo() is similar to LoadPerspective, with the exception that it only loads information about a single pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString",
					"wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pane_part",
					"pane"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"InsertPane":[
			{
				"return_type":"bool",
				"brief_description":"This method is used to insert either a previously unmanaged pane window into the frame manager, or to insert a currently managed pane somewhere else.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxAuiPaneInfo&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"insert_location",
					"insert_level"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxAUI_INSERT_PANE"
				]
			}
		],
		"HideHint":[
			{
				"return_type":"void",
				"brief_description":"HideHint() hides any docking hint that may be visible.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPane":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"GetPane() is used to lookup a wxAuiPaneInfo object either by window pointer or by pane name, which acts as a unique id for a window pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"GetPane() is used to lookup a wxAuiPaneInfo object either by window pointer or by pane name, which acts as a unique id for a window pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetManager":[
			{
				"return_type":"wxAuiManager*",
				"brief_description":"Calling this method will return the wxAuiManager for a given window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetManagedWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the frame currently being managed by wxAuiManager.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the current wxAuiManagerOption's flags.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDockSizeConstraint":[
			{
				"return_type":"void",
				"brief_description":"Returns the current dock constraint values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double*",
					"double*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"widthpct",
					"heightpct"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetArtProvider":[
			{
				"return_type":"wxAuiDockArt*",
				"brief_description":"Returns the current art provider being used.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DetachPane":[
			{
				"return_type":"bool",
				"brief_description":"Tells the wxAuiManager to stop managing the pane specified by window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddPane":[
			{
				"return_type":"bool",
				"brief_description":"AddPane() tells the frame manager to start managing a child window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxAuiPaneInfo&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"pane_info",
					"drop_pos"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"AddPane() tells the frame manager to start managing a child window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"direction",
					"caption"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxLEFT",
					"wxEmptyString"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"AddPane() tells the frame manager to start managing a child window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"pane_info"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxEvtHandler"
		]
	},
	"wxAuiDockArt":{
		"wxAuiDockArt":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMetric":[
			{
				"return_type":"void",
				"brief_description":"Set a certain setting with the value new_val.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"new_val"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Set a font setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxFont&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"font"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetMetric":[
			{
				"return_type":"int",
				"brief_description":"Get the value of a certain setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Set a certain setting with the value colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"colour"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Get a font setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the colour of a certain setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DrawSash":[
			{
				"return_type":"void",
				"brief_description":"Draws a sash between two windows.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"int",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"window",
					"orientation",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawPaneButton":[
			{
				"return_type":"void",
				"brief_description":"Draws a button in the pane's title bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"int",
					"int",
					"const wxRect&",
					"wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"window",
					"button",
					"button_state",
					"rect",
					"pane"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawGripper":[
			{
				"return_type":"void",
				"brief_description":"Draws a gripper.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"window",
					"rect",
					"pane"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawCaption":[
			{
				"return_type":"void",
				"brief_description":"Draws a caption.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxString&",
					"const wxRect&",
					"wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"window",
					"text",
					"rect",
					"pane"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawBorder":[
			{
				"return_type":"void",
				"brief_description":"Draws a border.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"window",
					"rect",
					"pane"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawBackground":[
			{
				"return_type":"void",
				"brief_description":"Draws a background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"int",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"window",
					"orientation",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxAuiPaneInfo":{
		"wxAuiPaneInfo":[
			{
				"return_type":"",
				"brief_description":"Copy constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Window":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Window() assigns the window pointer that the wxAuiPaneInfo should use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"w"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"TopDockable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"TopDockable() indicates whether a pane can be docked at the top of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Top":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Top() sets the pane dock position to the top of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToolbarPane":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"ToolbarPane() specifies that the pane should adopt the default toolbar pane settings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Show":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Show() indicates that a pane should be shown.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetFlag":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"SetFlag() turns the property given by flag on or off with the option_state parameter.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"flag",
					"option_state"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SafeSet":[
			{
				"return_type":"void",
				"brief_description":"Write the safe parts of a newly loaded PaneInfo structure \"source\" into \"this\" used on loading perspectives etc.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAuiPaneInfo"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"source"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Row":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Row() determines the row of the docked pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RightDockable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"RightDockable() indicates whether a pane can be docked on the right of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Right":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Right() sets the pane dock position to the right side of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Resizable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Resizable() allows a pane to be resized if the parameter is true, and forces it to be a fixed size if the parameter is false.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"resizable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Position":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Position() determines the position of the docked pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PinButton":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"PinButton() indicates that a pin button should be drawn for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"PaneBorder":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"PaneBorder indicates that a border should be drawn for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Name":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Name() sets the name of the pane so it can be referenced in lookup functions.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Movable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Movable indicates whether a frame can be moved.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"MinimizeButton":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"MinimizeButton() indicates that a minimize button should be drawn for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"MinSize":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"MinSize() sets the minimum size of the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"MinSize() sets the minimum size of the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MaximizeButton":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"MaximizeButton() indicates that a maximize button should be drawn for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"MaxSize":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"MaxSize() sets the maximum size of the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"MaxSize() sets the maximum size of the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LeftDockable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"LeftDockable() indicates whether a pane can be docked on the left of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Left":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Left() sets the pane dock position to the left side of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Layer":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Layer() determines the layer of the docked pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"layer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsTopDockable":[
			{
				"return_type":"bool",
				"brief_description":"IsTopDockable() returns true if the pane can be docked at the top of the managed frame.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsToolbar":[
			{
				"return_type":"bool",
				"brief_description":"IsToolbar() returns true if the pane contains a toolbar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsShown":[
			{
				"return_type":"bool",
				"brief_description":"IsShown() returns true if the pane is currently shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsRightDockable":[
			{
				"return_type":"bool",
				"brief_description":"IsRightDockable() returns true if the pane can be docked on the right of the managed frame.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsResizable":[
			{
				"return_type":"bool",
				"brief_description":"IsResizable() returns true if the pane can be resized.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"IsOk() returns true if the wxAuiPaneInfo structure is valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsMovable":[
			{
				"return_type":"bool",
				"brief_description":"IsMoveable() returns true if the docked frame can be undocked or moved to another dock position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsLeftDockable":[
			{
				"return_type":"bool",
				"brief_description":"IsLeftDockable() returns true if the pane can be docked on the left of the managed frame.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsFloating":[
			{
				"return_type":"bool",
				"brief_description":"IsFloating() returns true if the pane is floating.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsFloatable":[
			{
				"return_type":"bool",
				"brief_description":"IsFloatable() returns true if the pane can be undocked and displayed as a floating window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsFixed":[
			{
				"return_type":"bool",
				"brief_description":"IsFixed() returns true if the pane cannot be resized.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDocked":[
			{
				"return_type":"bool",
				"brief_description":"IsDocked() returns true if the pane is currently docked.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDockable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the pane can be docked at any side.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsBottomDockable":[
			{
				"return_type":"bool",
				"brief_description":"IsBottomDockable() returns true if the pane can be docked at the bottom of the managed frame.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Icon":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Icon() sets the icon of the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Hide":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Hide() indicates that a pane should be hidden.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasPinButton":[
			{
				"return_type":"bool",
				"brief_description":"HasPinButton() returns true if the pane displays a button to float the pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasMinimizeButton":[
			{
				"return_type":"bool",
				"brief_description":"HasMinimizeButton() returns true if the pane displays a button to minimize the pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasMaximizeButton":[
			{
				"return_type":"bool",
				"brief_description":"HasMaximizeButton() returns true if the pane displays a button to maximize the pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasGripperTop":[
			{
				"return_type":"bool",
				"brief_description":"HasGripper() returns true if the pane displays a gripper at the top.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasGripper":[
			{
				"return_type":"bool",
				"brief_description":"HasGripper() returns true if the pane displays a gripper.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFlag":[
			{
				"return_type":"bool",
				"brief_description":"HasFlag() returns true if the property specified by flag is active for the pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasCloseButton":[
			{
				"return_type":"bool",
				"brief_description":"HasCloseButton() returns true if the pane displays a button to close the pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasCaption":[
			{
				"return_type":"bool",
				"brief_description":"HasCaption() returns true if the pane displays a caption.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBorder":[
			{
				"return_type":"bool",
				"brief_description":"HasBorder() returns true if the pane displays a border.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GripperTop":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"GripperTop() indicates that a gripper should be drawn at the top of the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"attop"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Gripper":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Gripper() indicates that a gripper should be drawn for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"FloatingSize":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"FloatingSize() sets the size of the floating pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"FloatingSize() sets the size of the floating pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FloatingPosition":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"FloatingPosition() sets the position of the floating pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"FloatingPosition() sets the position of the floating pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Floatable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Floatable() sets whether the user will be able to undock a pane and turn it into a floating window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Float":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Float() indicates that a pane should be floated.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Fixed":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Fixed() forces a pane to be fixed size so that it cannot be resized.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Dockable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Dockable() specifies whether a frame can be docked or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"DockFixed":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"DockFixed() causes the containing dock to have no resize sash.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Dock":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Dock() indicates that a pane should be docked.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Direction":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Direction() determines the direction of the docked pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DestroyOnClose":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"DestroyOnClose() indicates whether a pane should be destroyed when it is closed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"DefaultPane":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"DefaultPane() specifies that the pane should adopt the default pane settings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CloseButton":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"CloseButton() indicates that a close button should be drawn for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"CentrePane":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"CentrePane() specifies that the pane should adopt the default center pane settings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Centre":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Center() sets the pane dock position to the left side of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CenterPane":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"CentrePane() specifies that the pane should adopt the default center pane settings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Center":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Center() sets the pane dock position to the left side of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CaptionVisible":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"CaptionVisible indicates that a pane caption should be visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Caption":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Caption() sets the caption of the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"BottomDockable":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"BottomDockable() indicates whether a pane can be docked at the bottom of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Bottom":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Bottom() sets the pane dock position to the bottom side of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"BestSize":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"BestSize() sets the ideal size for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"BestSize() sets the ideal size for the pane.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator=":[
			{
				"return_type":"wxAuiPaneInfo&",
				"brief_description":"Makes a copy of the wxAuiPaneInfo object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxAuiManagerEvent":{
		"wxAuiManagerEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL"
				]
			}
		],
		"Veto":[
			{
				"return_type":"void",
				"brief_description":"Cancels the action indicated by this event if CanVeto() is true.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"veto"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetPane":[
			{
				"return_type":"void",
				"brief_description":"Sets the pane this event is associated with.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAuiPaneInfo*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pane"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetManager":[
			{
				"return_type":"void",
				"brief_description":"Sets the wxAuiManager this event is associated with.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAuiManager*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"manager"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDC":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pdc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCanVeto":[
			{
				"return_type":"void",
				"brief_description":"Sets whether or not this event can be vetoed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"can_veto"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetButton":[
			{
				"return_type":"void",
				"brief_description":"Sets the ID of the button clicked that triggered this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"button"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetVeto":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPane":[
			{
				"return_type":"wxAuiPaneInfo*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetManager":[
			{
				"return_type":"wxAuiManager*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDC":[
			{
				"return_type":"wxDC*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetButton":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanVeto":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxAuiNotebook":{
		"wxAuiNotebook":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxAUI_NB_DEFAULT_STYLE"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Split":[
			{
				"return_type":"void",
				"brief_description":"Split performs a split operation programmatically.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"page",
					"direction"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ShowWindowMenu":[
			{
				"return_type":"bool",
				"brief_description":"Shows the window menu for the active tab control associated with this notebook, and returns true if a selection was made.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetUniformBitmapSize":[
			{
				"return_type":"void",
				"brief_description":"Split performs a split operation programmatically.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTabCtrlHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the tab height.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectedFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font for drawing selected tab labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPageText":[
			{
				"return_type":"bool",
				"brief_description":"Sets the tab label for the page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"page",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPageImage":[
			{
				"return_type":"bool",
				"brief_description":"Sets the image index for the given page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"imageId"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPageBitmap":[
			{
				"return_type":"bool",
				"brief_description":"Sets the bitmap for the page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"page",
					"bitmap"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetNormalFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font for drawing unselected tab labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMeasuringFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font for measuring tab labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"bool",
				"brief_description":"Sets the font for drawing the tab labels, using a bold version of the font for selected tab labels.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetArtProvider":[
			{
				"return_type":"void",
				"brief_description":"Sets the art provider to be used by the notebook.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAuiTabArt*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"art"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemovePage":[
			{
				"return_type":"bool",
				"brief_description":"Removes a page, without deleting the window pointer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetTabCtrlHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the height of the tab control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the currently selected page.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the tab label for the page.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPageIndex":[
			{
				"return_type":"int",
				"brief_description":"Returns the page index for the specified window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page_wnd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPageCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of pages in the notebook.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the tab bitmap for the page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPage":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the page specified by the given index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page_idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetHeightForPageHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the desired height of the notebook for the given page height.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageHeight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCurrentPage":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the currently selected page or NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetArtProvider":[
			{
				"return_type":"wxAuiTabArt*",
				"brief_description":"Returns the associated art provider.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeletePage":[
			{
				"return_type":"bool",
				"brief_description":"Deletes a page at the given index.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteAllPages":[
			{
				"return_type":"bool",
				"brief_description":"Deletes all pages.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the notebook window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0"
				]
			}
		],
		"ChangeSelection":[
			{
				"return_type":"int",
				"brief_description":"Changes the selection for the given page, returning the previous selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AdvanceSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection to the next or previous page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"forward"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"AddPage":[
			{
				"return_type":"bool",
				"brief_description":"Adds a page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"bool",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"page",
					"caption",
					"select",
					"bitmap"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false",
					"wxNullBitmap"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Adds a new page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"page",
					"text",
					"select",
					"imageId"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxBookCtrlBase"
		],
		"SetSelection":[
			{
				"return_type":"size_t",
				"brief_description":"Sets the page selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"new_page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxAuiNotebookEvent":{
		"Clone":[
			{
				"return_type":"wxEvent*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxAuiNotebookEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"command_type",
					"win_id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		],
		"_implements":[
			"wxBookCtrlEvent"
		]
	},
	"wxBookCtrlEvent":{
		"GetOldSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the page that was selected before the change, wxNOT_FOUND if none was selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the currently selected page, or wxNOT_FOUND if none was selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetOldSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the id of the page selected before the change.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection member variable.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxBookCtrlEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor (used internally by wxWidgets only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"eventType",
					"id",
					"sel",
					"oldSel"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"wxNOT_FOUND",
					"wxNOT_FOUND"
				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxAuiDefaultToolBarArt":{
		"Clone":[
			{
				"return_type":"wxAuiToolBarArt*",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DrawBackground":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawButton":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawControlLabel":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawDropDownButton":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawGripper":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawLabel":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawOverflowButton":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"state"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawSeparator":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetElementSize":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"element"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFlags":[
			{
				"return_type":"unsigned int",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabelSize":[
			{
				"return_type":"wxSize",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetTextOrientation":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolSize":[
			{
				"return_type":"wxSize",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetElementSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"element_id",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextOrientation":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxAuiDefaultToolBarArt":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxAuiToolBarArt"
		]
	},
	"wxBookCtrlBase":{
		"_implements":[
			"wxControl",
			"wxWithImages"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Constructs the book control with the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxEmptyString"
				]
			}
		],
		"AddPage":[
			{
				"return_type":"bool",
				"brief_description":"Adds a new page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"page",
					"text",
					"select",
					"imageId"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false",
					"NO_IMAGE"
				]
			}
		],
		"AdvanceSelection":[
			{
				"return_type":"void",
				"brief_description":"Cycles through the tabs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"forward"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"DeleteAllPages":[
			{
				"return_type":"bool",
				"brief_description":"Deletes all pages.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeletePage":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the specified page, and the associated window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCurrentPage":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the currently selected page or NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPage":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the window at the given page position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPageCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of pages in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HitTest":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the tab at the specified position or wxNOT_FOUND if none.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"long*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"InsertPage":[
			{
				"return_type":"bool",
				"brief_description":"Inserts a new page at the specified position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"page",
					"text",
					"select",
					"imageId"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false",
					"NO_IMAGE"
				]
			}
		],
		"RemovePage":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the specified page, without deleting the associated window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPageImage":[
			{
				"return_type":"bool",
				"brief_description":"Sets the image index for the given page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"page",
					"image"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPageSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the width and height of the pages.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPageText":[
			{
				"return_type":"bool",
				"brief_description":"Sets the text for the given page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"page",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"int",
				"brief_description":"Sets the selection to the given page, returning the previous selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the currently selected page, or wxNOT_FOUND if none was selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string for the given page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nPage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPageImage":[
			{
				"return_type":"int",
				"brief_description":"Returns the image index for the given page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nPage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ChangeSelection":[
			{
				"return_type":"int",
				"brief_description":"Changes the selection to the given page, returning the previous selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxWithImages":{
		"wxWithImages":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the image list to use.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasImageList":[
			{
				"return_type":"bool",
				"brief_description":"Return true if we have a valid image list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImageList":[
			{
				"return_type":"wxImageList*",
				"brief_description":"Returns the associated image list, may be NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImage":[
			{
				"return_type":"wxIcon",
				"brief_description":"Return the image with the given index from the image list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"iconIndex"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AssignImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the image list for the page control and takes ownership of the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxAcceleratorEntry":{
		"wxAcceleratorEntry":[
			{
				"return_type":"",
				"brief_description":"Copy ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAcceleratorEntry&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"entry"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"flags",
					"keyCode",
					"cmd",
					"item"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0",
					"0",
					"NULL"
				]
			}
		],
		"ToString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a textual representation of this accelerator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Set":[
			{
				"return_type":"void",
				"brief_description":"Sets the accelerator entry parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"wxMenuItem*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"flags",
					"keyCode",
					"cmd",
					"item"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"NULL"
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this object is correctly initialized.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMenuItem":[
			{
				"return_type":"wxMenuItem*",
				"brief_description":"Returns the menu item associated with this accelerator entry.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKeyCode":[
			{
				"return_type":"int",
				"brief_description":"Returns the keycode for the accelerator table entry.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"int",
				"brief_description":"Returns the flags for the accelerator table entry.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCommand":[
			{
				"return_type":"int",
				"brief_description":"Returns the command identifier for the accelerator table entry.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FromString":[
			{
				"return_type":"bool",
				"brief_description":"Parses the given string and sets the accelerator accordingly.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"str"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxAcceleratorTable":{
		"_implements":[
			"wxObject"
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the accelerator table is valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxAcceleratorTable":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxGDIObject":{
		"_implements":[
			"wxObject"
		]
	},
	"wxAnimation":{
		"_implements":[
			"wxGDIObject"
		],
		"GetDelay":[
			{
				"return_type":"int",
				"brief_description":"Returns the delay for the i-th frame in milliseconds.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFrame":[
			{
				"return_type":"wxImage",
				"brief_description":"Returns the i-th frame as a wxImage.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFrameCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of frames for this animation.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of the animation.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if animation data is present.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads an animation from a file.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxAnimationType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxANIMATION_TYPE_ANY"
				]
			}
		],
		"wxAnimation":[
			{
				"return_type":"",
				"brief_description":"Copy ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAnimation&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"anim"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Loads an animation from a file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxAnimationType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxANIMATION_TYPE_ANY"
				]
			}
		],
		"Load":[
			{
				"return_type":"bool",
				"brief_description":"Loads an animation from the given stream.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxAnimationType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxANIMATION_TYPE_ANY"
				]
			}
		]
	},
	"wxAnimationCtrl":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the control with the given anim animation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxAnimation&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"anim",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullAnimation",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxAC_DEFAULT_STYLE",
					"wxAnimationCtrlNameStr"
				]
			}
		],
		"GetAnimation":[
			{
				"return_type":"wxAnimation",
				"brief_description":"Returns the animation associated with this control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInactiveBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the inactive bitmap shown in this control when the; see SetInactiveBitmap() for more info.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPlaying":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the animation is being played.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads the animation from the given file and calls SetAnimation().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxAnimationType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"file",
					"animType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxANIMATION_TYPE_ANY"
				]
			}
		],
		"Play":[
			{
				"return_type":"bool",
				"brief_description":"Starts playing the animation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAnimation":[
			{
				"return_type":"void",
				"brief_description":"Sets the animation to play in this control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAnimation&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"anim"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetInactiveBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap to show on the control when it's not playing an animation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Stop":[
			{
				"return_type":"void",
				"brief_description":"Stops playing the animation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxAnimationCtrl":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxAnimation&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"anim",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullAnimation",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxAC_DEFAULT_STYLE",
					"wxAnimationCtrlNameStr"
				]
			}
		],
		"_implements":[
			"wxControl"
		],
		"Load":[
			{
				"return_type":"bool",
				"brief_description":"Loads the animation from the given stream and calls SetAnimation().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxAnimationType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"file",
					"animType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxANIMATION_TYPE_ANY"
				]
			}
		]
	},
	"wxArtProvider":{
		"Remove":[
			{
				"return_type":"bool",
				"brief_description":"Remove a provider from the stack if it is on it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"provider"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PushBack":[
			{
				"return_type":"void",
				"brief_description":"Register new art provider and add it to the bottom of providers stack.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"provider"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Push":[
			{
				"return_type":"void",
				"brief_description":"Register new art provider and add it to the top of providers stack (i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"provider"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Pop":[
			{
				"return_type":"bool",
				"brief_description":"Remove latest added provider and delete it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Insert":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"provider"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"HasNativeProvider":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the platform uses native icons provider that should take precedence over any customizations.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSizeHint":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns a suitable size hint for the given wxArtClient.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxArtClient&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"client",
					"platform_default"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"GetNativeSizeHint":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns native icon size for use specified by client hint.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxArtClient&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"client"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetIconBundle":[
			{
				"return_type":"wxIconBundle",
				"brief_description":"Query registered providers for icon bundle with given ID.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxArtID&",
					"const wxArtClient&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"client"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxART_OTHER"
				]
			}
		],
		"GetIcon":[
			{
				"return_type":"wxIcon",
				"brief_description":"Same as wxArtProvider::GetBitmap, but return a wxIcon object (or wxNullIcon on failure).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxArtID&",
					"const wxArtClient&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"client",
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxART_OTHER",
					"wxDefaultSize"
				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Query registered providers for bitmap with given ID.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxArtID&",
					"const wxArtClient&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"client",
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxART_OTHER",
					"wxDefaultSize"
				]
			}
		],
		"Delete":[
			{
				"return_type":"bool",
				"brief_description":"Delete the given provider.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"provider"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxIconBundle":{
		"_implements":[
			"wxGDIObject"
		],
		"wxIconBundle":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes the bundle with the icon(s) found in the file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"file",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY"
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes the bundle with a single icon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIconBundle&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ic"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes the bundle with the icon(s) found in the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY"
				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the bundle doesn't contain any icons, false otherwise (in which case a call to GetIcon() with default parameter should return a valid icon).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIconOfExactSize":[
			{
				"return_type":"wxIcon",
				"brief_description":"Returns the icon with exactly the given size or wxNullIcon if this size is not available.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetIconCount":[
			{
				"return_type":"size_t",
				"brief_description":"return the number of available icons",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIconByIndex":[
			{
				"return_type":"wxIcon",
				"brief_description":"return the icon at index (must be < GetIconCount())",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddIcon":[
			{
				"return_type":"void",
				"brief_description":"Adds the icon to the collection; if the collection already contains an icon with the same width and height, it is replaced by the new one.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Adds all the icons contained in the file to the bundle; if the collection already contains icons with the same width and height, they are replaced by the new ones.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"file",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Adds all the icons contained in the stream to the bundle; if the collection already contains icons with the same width and height, they are replaced by the new ones.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxBitmapType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBITMAP_TYPE_ANY"
				]
			}
		],
		"GetIcon":[
			{
				"return_type":"wxIcon",
				"brief_description":"Returns the icon with the given size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"size",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"FALLBACK_SYSTEM"
				]
			},
			{
				"return_type":"wxIcon",
				"brief_description":"Same as.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"size",
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxDefaultCoord",
					"FALLBACK_SYSTEM"
				]
			}
		]
	},
	"wxStyledTextCtrl":{
		"wxStyledTextCtrl":[
			{
				"return_type":"",
				"brief_description":"Ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxSTCNameStr"
				]
			}
		],
		"AutoCompGetCurrent":[
			{
				"return_type":"int",
				"brief_description":"Get currently selected item position in the auto-completion list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DoDragOver":[
			{
				"return_type":"wxDragResult",
				"brief_description":"Allow for simulating a DnD DragOver.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxDragResult"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"defaultRes"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetCaretSticky":[
			{
				"return_type":"int",
				"brief_description":"Can the caret preferred x position only be changed by explicit movement commands?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharacterPointer":[
			{
				"return_type":"const char*",
				"brief_description":"Compact the document buffer and return a read-only pointer to the characters in the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Load the contents of filename into the editor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SaveFile":[
			{
				"return_type":"bool",
				"brief_description":"Write the contents of the editor to filename.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaretSticky":[
			{
				"return_type":"void",
				"brief_description":"Stop the caret preferred x position changing when the user types.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"useCaretStickyBehaviour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ZoomOut":[
			{
				"return_type":"void",
				"brief_description":"Make the displayed text smaller by decreasing the sizes by 1 point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ZoomIn":[
			{
				"return_type":"void",
				"brief_description":"Magnify the displayed text by increasing the sizes by 1 point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxControl",
			"wxTextEntry"
		],
		"AddText":[
			{
				"return_type":"void",
				"brief_description":"Add text to the document at current position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddSelection":[
			{
				"return_type":"int",
				"brief_description":"Add a selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"caret",
					"anchor"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"WrapCount":[
			{
				"return_type":"int",
				"brief_description":"The number of display lines needed to wrap a document line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"WordStartPosition":[
			{
				"return_type":"int",
				"brief_description":"Get position of start of word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"onlyWordCharacters"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"WordRightExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret right one word extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddUndoAction":[
			{
				"return_type":"void",
				"brief_description":"Add a container action to the undo stack.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"token",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Allocate":[
			{
				"return_type":"void",
				"brief_description":"Enlarge the document to a particular size of text bytes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bytes"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AnnotationClearAll":[
			{
				"return_type":"void",
				"brief_description":"Clear the annotations from all lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AnnotationGetLines":[
			{
				"return_type":"int",
				"brief_description":"Get the number of annotation lines for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AnnotationGetStyle":[
			{
				"return_type":"int",
				"brief_description":"Get the style number for the annotations for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AnnotationGetStyleOffset":[
			{
				"return_type":"int",
				"brief_description":"Get the start of the range of style numbers used for annotations.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AnnotationGetStyles":[
			{
				"return_type":"wxString",
				"brief_description":"Get the annotation styles for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AnnotationGetText":[
			{
				"return_type":"wxString",
				"brief_description":"Get the annotation text for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AnnotationGetVisible":[
			{
				"return_type":"int",
				"brief_description":"Get the visibility for the annotations for a view.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AnnotationSetStyle":[
			{
				"return_type":"void",
				"brief_description":"Set the style number for the annotations for a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AnnotationSetStyleOffset":[
			{
				"return_type":"void",
				"brief_description":"Get the start of the range of style numbers used for annotations.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AnnotationSetStyles":[
			{
				"return_type":"void",
				"brief_description":"Set the annotation styles for a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"styles"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AnnotationSetText":[
			{
				"return_type":"void",
				"brief_description":"Set the annotation text for a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AnnotationSetVisible":[
			{
				"return_type":"void",
				"brief_description":"Set the visibility for the annotations for a view.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AppendText":[
			{
				"return_type":"void",
				"brief_description":"Append a string to the end of the document without changing the selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompActive":[
			{
				"return_type":"bool",
				"brief_description":"Is there an auto-completion list visible?",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompCancel":[
			{
				"return_type":"void",
				"brief_description":"Remove the auto-completion list from the screen.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompComplete":[
			{
				"return_type":"void",
				"brief_description":"User has selected an item so remove the list and insert the selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetAutoHide":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether or not autocompletion is hidden automatically when nothing matches.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetCancelAtStart":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether auto-completion cancelled by backspacing before start.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetChooseSingle":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether a single item auto-completion list automatically choose the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetDropRestOfWord":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether or not autocompletion deletes any word characters after the inserted text upon completion.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetIgnoreCase":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve state of ignore case flag.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetMaxHeight":[
			{
				"return_type":"int",
				"brief_description":"Set the maximum height, in rows, of auto-completion and user lists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetMaxWidth":[
			{
				"return_type":"int",
				"brief_description":"Get the maximum width, in characters, of auto-completion and user lists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetSeparator":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the auto-completion list separator character.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompGetTypeSeparator":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the auto-completion list type-separator character.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompPosStart":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the position of the caret when the auto-completion list was displayed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompSelect":[
			{
				"return_type":"void",
				"brief_description":"Select the item in the auto-completion list that starts with a string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetAutoHide":[
			{
				"return_type":"void",
				"brief_description":"Set whether or not autocompletion is hidden automatically when nothing matches.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"autoHide"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetCancelAtStart":[
			{
				"return_type":"void",
				"brief_description":"Should the auto-completion list be cancelled if the user backspaces to a position before where the box was created.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cancel"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetChooseSingle":[
			{
				"return_type":"void",
				"brief_description":"Should a single item auto-completion list automatically choose the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"chooseSingle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetDropRestOfWord":[
			{
				"return_type":"void",
				"brief_description":"Set whether or not autocompletion deletes any word characters after the inserted text upon completion.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dropRestOfWord"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetFillUps":[
			{
				"return_type":"void",
				"brief_description":"Define a set of characters that when typed will cause the autocompletion to choose the selected item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"characterSet"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetIgnoreCase":[
			{
				"return_type":"void",
				"brief_description":"Set whether case is significant when performing auto-completion searches.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ignoreCase"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetMaxHeight":[
			{
				"return_type":"void",
				"brief_description":"Set the maximum height, in rows, of auto-completion and user lists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rowCount"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetMaxWidth":[
			{
				"return_type":"void",
				"brief_description":"Set the maximum width, in characters, of auto-completion and user lists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"characterCount"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetSeparator":[
			{
				"return_type":"void",
				"brief_description":"Change the separator character in the string setting up an auto-completion list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"separatorCharacter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompSetTypeSeparator":[
			{
				"return_type":"void",
				"brief_description":"Change the type-separator character in the string setting up an auto-completion list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"separatorCharacter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompShow":[
			{
				"return_type":"void",
				"brief_description":"Display a auto-completion list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"lenEntered",
					"itemList"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AutoCompStops":[
			{
				"return_type":"void",
				"brief_description":"Define a set of character that when typed cancel the auto-completion list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"characterSet"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"BackTab":[
			{
				"return_type":"void",
				"brief_description":"Dedent the selected lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"BeginUndoAction":[
			{
				"return_type":"void",
				"brief_description":"Start a sequence of actions that is undone and redone as a unit.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"BraceBadLight":[
			{
				"return_type":"void",
				"brief_description":"Highlight the character at a position indicating there is no matching brace.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"BraceHighlight":[
			{
				"return_type":"void",
				"brief_description":"Highlight the characters at two positions.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos1",
					"pos2"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"BraceMatch":[
			{
				"return_type":"int",
				"brief_description":"Find the position of a matching brace or INVALID_POSITION if no match.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CallTipActive":[
			{
				"return_type":"bool",
				"brief_description":"Is there an active call tip?",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CallTipCancel":[
			{
				"return_type":"void",
				"brief_description":"Remove the call tip from the screen.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CallTipPosAtStart":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the position where the caret was before displaying the call tip.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CallTipSetBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour for the call tip.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"back"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CallTipSetForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour for the call tip.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fore"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CallTipSetForegroundHighlight":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour for the highlighted part of the call tip.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fore"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CallTipSetHighlight":[
			{
				"return_type":"void",
				"brief_description":"Highlight a segment of the definition.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"start",
					"end"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CallTipShow":[
			{
				"return_type":"void",
				"brief_description":"Show a call tip containing a definition near position pos.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"definition"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CallTipUseStyle":[
			{
				"return_type":"void",
				"brief_description":"Enable use of STYLE_CALLTIP and set call tip tab size in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tabSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanPaste":[
			{
				"return_type":"bool",
				"brief_description":"Will a paste succeed?",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanRedo":[
			{
				"return_type":"bool",
				"brief_description":"Are there any redoable actions in the undo history?",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanUndo":[
			{
				"return_type":"bool",
				"brief_description":"Are there any undoable actions in the undo history?",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Cancel":[
			{
				"return_type":"void",
				"brief_description":"Cancel any modes such as call tip or auto-completion list display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CharLeft":[
			{
				"return_type":"void",
				"brief_description":"Move caret left one character.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CharLeftExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret left one character extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CharLeftRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret left one character, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CharPositionFromPoint":[
			{
				"return_type":"int",
				"brief_description":"Find the position of a character from a point within the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CharPositionFromPointClose":[
			{
				"return_type":"int",
				"brief_description":"Find the position of a character from a point within the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CharRight":[
			{
				"return_type":"void",
				"brief_description":"Move caret right one character.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CharRightExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret right one character extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CharRightRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret right one character, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ChooseCaretX":[
			{
				"return_type":"void",
				"brief_description":"Set the last x chosen value to be the caret x position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Clear the selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearAll":[
			{
				"return_type":"void",
				"brief_description":"Delete all text in the document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearDocumentStyle":[
			{
				"return_type":"void",
				"brief_description":"Set all style bytes to 0, remove all folding information.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearRegisteredImages":[
			{
				"return_type":"void",
				"brief_description":"Clear all the registered images.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearSelections":[
			{
				"return_type":"void",
				"brief_description":"Clear selections to a single empty stream selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CmdKeyAssign":[
			{
				"return_type":"void",
				"brief_description":"When key+modifier combination km is pressed perform msg.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"key",
					"modifiers",
					"cmd"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"CmdKeyClear":[
			{
				"return_type":"void",
				"brief_description":"When key+modifier combination km is pressed do nothing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"modifiers"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CmdKeyClearAll":[
			{
				"return_type":"void",
				"brief_description":"Drop all key mappings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CmdKeyExecute":[
			{
				"return_type":"void",
				"brief_description":"Perform one of the operations defined by the wxSTC_CMD_* constants.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cmd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Colourise":[
			{
				"return_type":"void",
				"brief_description":"Colourise a segment of the document using the current lexing language.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"start",
					"end"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ConvertEOLs":[
			{
				"return_type":"void",
				"brief_description":"Convert all line endings in the document to one mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"eolMode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Copy":[
			{
				"return_type":"void",
				"brief_description":"Copy the selection to the clipboard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CopyAllowLine":[
			{
				"return_type":"void",
				"brief_description":"Copy the selection, if selection empty copy the line with the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CopyRange":[
			{
				"return_type":"void",
				"brief_description":"Copy a range of text to the clipboard.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"start",
					"end"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CopyText":[
			{
				"return_type":"void",
				"brief_description":"Copy argument text to the clipboard.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"length",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create the UI elements for a STC that was created with the default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxSTCNameStr"
				]
			}
		],
		"CreateDocument":[
			{
				"return_type":"void*",
				"brief_description":"Create a new document object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Cut":[
			{
				"return_type":"void",
				"brief_description":"Cut the selection to the clipboard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DelLineLeft":[
			{
				"return_type":"void",
				"brief_description":"Delete back from the current position to the start of the line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DelLineRight":[
			{
				"return_type":"void",
				"brief_description":"Delete forwards from the current position to the end of the line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DelWordLeft":[
			{
				"return_type":"void",
				"brief_description":"Delete the word to the left of the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DelWordRight":[
			{
				"return_type":"void",
				"brief_description":"Delete the word to the right of the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteBack":[
			{
				"return_type":"void",
				"brief_description":"Delete the selection or if no selection, the character before the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteBackNotLine":[
			{
				"return_type":"void",
				"brief_description":"Delete the selection or if no selection, the character before the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DoDropText":[
			{
				"return_type":"bool",
				"brief_description":"Allow for simulating a DnD DropText.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DocLineFromVisible":[
			{
				"return_type":"int",
				"brief_description":"Find the document line of a display line taking hidden lines into account.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lineDisplay"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DocumentEnd":[
			{
				"return_type":"void",
				"brief_description":"Move caret to last position in document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DocumentEndExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to last position in document extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DocumentStart":[
			{
				"return_type":"void",
				"brief_description":"Move caret to first position in document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DocumentStartExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to first position in document extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EditToggleOvertype":[
			{
				"return_type":"void",
				"brief_description":"Switch from insert to overtype mode or the reverse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EmptyUndoBuffer":[
			{
				"return_type":"void",
				"brief_description":"Delete the undo history.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EndUndoAction":[
			{
				"return_type":"void",
				"brief_description":"End a sequence of actions that is undone and redone as a unit.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnsureCaretVisible":[
			{
				"return_type":"void",
				"brief_description":"Ensure the caret is visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnsureVisible":[
			{
				"return_type":"void",
				"brief_description":"Ensure a particular line is visible by expanding any header line hiding it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnsureVisibleEnforcePolicy":[
			{
				"return_type":"void",
				"brief_description":"Ensure a particular line is visible by expanding any header line hiding it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindColumn":[
			{
				"return_type":"int",
				"brief_description":"Find the position of a column on a line taking into account tabs and multi-byte characters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"column"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"FindText":[
			{
				"return_type":"int",
				"brief_description":"Find some text in the document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"minPos",
					"maxPos",
					"text",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"FormFeed":[
			{
				"return_type":"void",
				"brief_description":"Insert a Form Feed character.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FormatRange":[
			{
				"return_type":"int",
				"brief_description":"On Windows, will draw the document into a display context such as a printer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"int",
					"int",
					"wxDC*",
					"wxDC*",
					"wxRect",
					"wxRect"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"doDraw",
					"startPos",
					"endPos",
					"draw",
					"target",
					"renderRect",
					"pageRect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"GetAdditionalCaretForeground":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the foreground colour of additional carets.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAdditionalCaretsBlink":[
			{
				"return_type":"bool",
				"brief_description":"Whether additional carets will blink.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAdditionalCaretsVisible":[
			{
				"return_type":"bool",
				"brief_description":"Whether additional carets are visible.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAdditionalSelAlpha":[
			{
				"return_type":"int",
				"brief_description":"Get the alpha of the selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAdditionalSelectionTyping":[
			{
				"return_type":"bool",
				"brief_description":"Whether typing can be performed into multiple selections.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAnchor":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of the opposite end of the selection to the caret.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBackSpaceUnIndents":[
			{
				"return_type":"bool",
				"brief_description":"Does a backspace pressed when caret is within indentation unindent?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBufferedDraw":[
			{
				"return_type":"bool",
				"brief_description":"Is drawing done first into a buffer or direct to the screen?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaretForeground":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the foreground colour of the caret.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaretLineBackAlpha":[
			{
				"return_type":"int",
				"brief_description":"Get the background alpha of the caret line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaretLineBackground":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the colour of the background of the line containing the caret.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaretLineVisible":[
			{
				"return_type":"bool",
				"brief_description":"Is the background of the line containing the caret in a different colour?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaretPeriod":[
			{
				"return_type":"int",
				"brief_description":"Get the time in milliseconds that the caret is on and off.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaretWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the width of the insert mode caret.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharAt":[
			{
				"return_type":"int",
				"brief_description":"Returns the character byte at the position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCodePage":[
			{
				"return_type":"int",
				"brief_description":"Get the code page used to interpret the bytes of the document as characters.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumn":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the column number of a position, taking tab width into account.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetControlCharSymbol":[
			{
				"return_type":"int",
				"brief_description":"Get the way control characters are displayed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentLine":[
			{
				"return_type":"int",
				"brief_description":"Returns the line number of the line with the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentPos":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of the caret.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEOLMode":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the current end of line mode - one of CRLF, CR, or LF.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEdgeColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Retrieve the colour used in edge indication.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEdgeColumn":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the column number which text should be kept within.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEdgeMode":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the edge highlight mode.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEndAtLastLine":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether the maximum scroll position has the last line at the bottom of the view.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEndStyled":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the position of the last correctly styled character.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtraAscent":[
			{
				"return_type":"int",
				"brief_description":"Get extra ascent for each line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtraDescent":[
			{
				"return_type":"int",
				"brief_description":"Get extra descent for each line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFirstVisibleLine":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the display line at the top of the display.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFoldExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Is a header line expanded?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFoldLevel":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the fold level of a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFoldParent":[
			{
				"return_type":"int",
				"brief_description":"Find the parent line of a child line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetHighlightGuide":[
			{
				"return_type":"int",
				"brief_description":"Get the highlighted indentation guide column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndent":[
			{
				"return_type":"int",
				"brief_description":"Retrieve indentation size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndentationGuides":[
			{
				"return_type":"int",
				"brief_description":"Are the indentation guides visible?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLastChild":[
			{
				"return_type":"int",
				"brief_description":"Find the last child line of a header line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"level"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetLastKeydownProcessed":[
			{
				"return_type":"bool",
				"brief_description":"Can be used to prevent the EVT_CHAR handler from adding the char.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLayoutCache":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the degree of caching of layout information.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLength":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of bytes in the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLexer":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the lexing language of the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLibraryVersionInfo":[
			{
				"return_type":"wxVersionInfo",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLine":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve the contents of a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of lines in the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLineEndPosition":[
			{
				"return_type":"int",
				"brief_description":"Get the position after the last visible characters on a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineIndentPosition":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the position before the first non indentation character on a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineIndentation":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the number of columns that a line is indented.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineRaw":[
			{
				"return_type":"wxCharBuffer",
				"brief_description":"Retrieve the contents of a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineSelEndPosition":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineSelStartPosition":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineState":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the extra styling information for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineVisible":[
			{
				"return_type":"bool",
				"brief_description":"Is a line visible?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMainSelection":[
			{
				"return_type":"int",
				"brief_description":"Which selection is the main selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMarginLeft":[
			{
				"return_type":"int",
				"brief_description":"Returns the size in pixels of the left margin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMarginMask":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the marker mask of a margin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"margin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMarginRight":[
			{
				"return_type":"int",
				"brief_description":"Returns the size in pixels of the right margin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMarginSensitive":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve the mouse click sensitivity of a margin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"margin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMarginType":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the type of a margin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"margin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMarginWidth":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the width of a margin in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"margin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMarkerSymbolDefined":[
			{
				"return_type":"int",
				"brief_description":"Which symbol was defined for markerNumber with MarkerDefine.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"markerNumber"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMaxLineState":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the last line number that has line state.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModEventMask":[
			{
				"return_type":"int",
				"brief_description":"Get which document modification events are sent to the container.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModify":[
			{
				"return_type":"bool",
				"brief_description":"Is the document different from when it was last saved?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMouseDownCaptures":[
			{
				"return_type":"bool",
				"brief_description":"Get whether mouse gets captured.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMouseDwellTime":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the time the mouse must sit still to generate a mouse dwell event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMultipleSelection":[
			{
				"return_type":"bool",
				"brief_description":"Whether multiple selections can be made.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOvertype":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if overtype mode is active otherwise false is returned.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPasteConvertEndings":[
			{
				"return_type":"bool",
				"brief_description":"Get convert-on-paste setting.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintColourMode":[
			{
				"return_type":"int",
				"brief_description":"Returns the print colour mode.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintMagnification":[
			{
				"return_type":"int",
				"brief_description":"Returns the print magnification.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintWrapMode":[
			{
				"return_type":"int",
				"brief_description":"Is printing line wrapped?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetProperty":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve a 'property' value previously set with SetProperty.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"key"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPropertyExpanded":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve a 'property' value previously set with SetProperty, with '$()' variable replacement on returned buffer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"key"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPropertyInt":[
			{
				"return_type":"int",
				"brief_description":"Retrieve a 'property' value previously set with SetProperty, interpreted as an int AFTER any '$()' variable replacement.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"key"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetReadOnly":[
			{
				"return_type":"bool",
				"brief_description":"In read-only mode?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRectangularSelectionAnchor":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRectangularSelectionAnchorVirtualSpace":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRectangularSelectionCaret":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRectangularSelectionCaretVirtualSpace":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRectangularSelectionModifier":[
			{
				"return_type":"int",
				"brief_description":"Get the modifier key used for rectangular selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSTCCursor":[
			{
				"return_type":"int",
				"brief_description":"Get cursor type.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSTCFocus":[
			{
				"return_type":"bool",
				"brief_description":"Get internal focus flag.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScrollWidth":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the document width assumed for scrolling.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSearchFlags":[
			{
				"return_type":"int",
				"brief_description":"Get the search flags used by SearchInTarget.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelAlpha":[
			{
				"return_type":"int",
				"brief_description":"Get the alpha of the selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedText":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve the selected text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedTextRaw":[
			{
				"return_type":"wxCharBuffer",
				"brief_description":"Retrieve the selected text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionEnd":[
			{
				"return_type":"int",
				"brief_description":"Returns the position at the end of the selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionMode":[
			{
				"return_type":"int",
				"brief_description":"Get the mode of the current selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionNAnchor":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectionNAnchorVirtualSpace":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectionNCaret":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectionNCaretVirtualSpace":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectionNEnd":[
			{
				"return_type":"int",
				"brief_description":"Returns the position at the end of the selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectionNStart":[
			{
				"return_type":"int",
				"brief_description":"Returns the position at the start of the selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectionStart":[
			{
				"return_type":"int",
				"brief_description":"Returns the position at the start of the selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelections":[
			{
				"return_type":"int",
				"brief_description":"How many selections are there?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStatus":[
			{
				"return_type":"int",
				"brief_description":"Get error status.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyleAt":[
			{
				"return_type":"int",
				"brief_description":"Returns the style byte at the position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetTabIndents":[
			{
				"return_type":"bool",
				"brief_description":"Does a tab pressed when caret is within indentation indent?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTabWidth":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the visible size of a tab.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTargetEnd":[
			{
				"return_type":"int",
				"brief_description":"Get the position that ends the target.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTargetStart":[
			{
				"return_type":"int",
				"brief_description":"Get the position that starts the target.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve all the text in the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextLength":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the number of characters in the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextRange":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve a range of text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"startPos",
					"endPos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetTextRangeRaw":[
			{
				"return_type":"wxCharBuffer",
				"brief_description":"Retrieve a range of text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"startPos",
					"endPos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetTextRaw":[
			{
				"return_type":"wxCharBuffer",
				"brief_description":"Retrieve all the text in the document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTwoPhaseDraw":[
			{
				"return_type":"bool",
				"brief_description":"Is drawing done in two phases with backgrounds drawn before foregrounds?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUndoCollection":[
			{
				"return_type":"bool",
				"brief_description":"Is undo history being collected?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUseHorizontalScrollBar":[
			{
				"return_type":"bool",
				"brief_description":"Is the horizontal scroll bar visible?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUseTabs":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether tabs will be used in indentation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUseVerticalScrollBar":[
			{
				"return_type":"bool",
				"brief_description":"Is the vertical scroll bar visible?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetViewEOL":[
			{
				"return_type":"bool",
				"brief_description":"Are the end of line characters visible?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetViewWhiteSpace":[
			{
				"return_type":"int",
				"brief_description":"Are white space characters currently visible? Returns one of SCWS_* constants.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVirtualSpaceOptions":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWhitespaceSize":[
			{
				"return_type":"int",
				"brief_description":"Get the size of the dots used to mark space characters.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWrapIndentMode":[
			{
				"return_type":"int",
				"brief_description":"Retrieve how wrapped sublines are placed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWrapMode":[
			{
				"return_type":"int",
				"brief_description":"Retrieve whether text is word wrapped.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWrapStartIndent":[
			{
				"return_type":"int",
				"brief_description":"Retrive the start indent for wrapped lines.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWrapVisualFlags":[
			{
				"return_type":"int",
				"brief_description":"Retrive the display mode of visual flags for wrapped lines.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWrapVisualFlagsLocation":[
			{
				"return_type":"int",
				"brief_description":"Retrive the location of visual flags for wrapped lines.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetXOffset":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetZoom":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the zoom level.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GotoLine":[
			{
				"return_type":"void",
				"brief_description":"Set caret to start of a line and ensure it is visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GotoPos":[
			{
				"return_type":"void",
				"brief_description":"Set caret to a position and ensure it is visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HideLines":[
			{
				"return_type":"void",
				"brief_description":"Make a range of lines invisible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"lineStart",
					"lineEnd"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"HideSelection":[
			{
				"return_type":"void",
				"brief_description":"Draw the selection in normal style or with selection highlighted.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"normal"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Home":[
			{
				"return_type":"void",
				"brief_description":"Move caret to first position on line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HomeDisplay":[
			{
				"return_type":"void",
				"brief_description":"Move caret to first position on display line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HomeDisplayExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to first position on display line extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HomeExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to first position on line extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HomeRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to first position on line, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HomeWrap":[
			{
				"return_type":"void",
				"brief_description":"These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)? except they behave differently when word-wrap is enabled: They go first to the start \/ end of the display line, like (Home|LineEnd)Display The difference is that, the cursor is already at the point, it goes on to the start or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HomeWrapExtend":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IndicatorGetAlpha":[
			{
				"return_type":"int",
				"brief_description":"Get the alpha fill colour of the given indicator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indicator"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IndicatorGetForeground":[
			{
				"return_type":"wxColour",
				"brief_description":"Retrieve the foreground colour of an indicator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indic"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IndicatorGetStyle":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the style of an indicator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indic"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IndicatorSetAlpha":[
			{
				"return_type":"void",
				"brief_description":"Set the alpha fill colour of the given indicator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indicator",
					"alpha"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorSetForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour of an indicator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indic",
					"fore"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorSetStyle":[
			{
				"return_type":"void",
				"brief_description":"Set an indicator to plain, squiggle or TT.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indic",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"InsertText":[
			{
				"return_type":"void",
				"brief_description":"Insert string at a position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"InsertTextRaw":[
			{
				"return_type":"void",
				"brief_description":"Insert string at a position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const char*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"LineCopy":[
			{
				"return_type":"void",
				"brief_description":"Copy the line containing the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineCut":[
			{
				"return_type":"void",
				"brief_description":"Cut the line containing the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineDelete":[
			{
				"return_type":"void",
				"brief_description":"Delete the line containing the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineDown":[
			{
				"return_type":"void",
				"brief_description":"Move caret down one line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineDownExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret down one line extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineDownRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret down one line, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineDuplicate":[
			{
				"return_type":"void",
				"brief_description":"Duplicate the current line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineEnd":[
			{
				"return_type":"void",
				"brief_description":"Move caret to last position on line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineEndDisplay":[
			{
				"return_type":"void",
				"brief_description":"Move caret to last position on display line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineEndDisplayExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to last position on display line extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineEndExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to last position on line extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineEndRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to last position on line, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineEndWrap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineEndWrapExtend":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineFromPosition":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the line containing a position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LineLength":[
			{
				"return_type":"int",
				"brief_description":"How many characters are on a line, including end of line characters?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LineScroll":[
			{
				"return_type":"void",
				"brief_description":"Scroll horizontally and vertically.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"columns",
					"lines"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"LineScrollDown":[
			{
				"return_type":"void",
				"brief_description":"Scroll the document down, keeping the caret visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineScrollUp":[
			{
				"return_type":"void",
				"brief_description":"Scroll the document up, keeping the caret visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineTranspose":[
			{
				"return_type":"void",
				"brief_description":"Switch the current line with the previous.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineUp":[
			{
				"return_type":"void",
				"brief_description":"Move caret up one line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineUpExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret up one line extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LineUpRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret up one line, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LinesJoin":[
			{
				"return_type":"void",
				"brief_description":"Join the lines in the target.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LinesOnScreen":[
			{
				"return_type":"int",
				"brief_description":"Retrieves the number of lines completely visible.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LinesSplit":[
			{
				"return_type":"void",
				"brief_description":"Split the lines in the target into lines that are less wide than pixelWidth where possible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixelWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LowerCase":[
			{
				"return_type":"void",
				"brief_description":"Transform the selection to lower case.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MarginGetStyle":[
			{
				"return_type":"int",
				"brief_description":"Get the style number for the text margin for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarginGetStyleOffset":[
			{
				"return_type":"int",
				"brief_description":"Get the start of the range of style numbers used for margin text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MarginGetStyles":[
			{
				"return_type":"wxString",
				"brief_description":"Get the styles in the text margin for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarginGetText":[
			{
				"return_type":"wxString",
				"brief_description":"Get the text in the text margin for a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarginSetStyle":[
			{
				"return_type":"void",
				"brief_description":"Set the style number for the text margin for a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarginSetStyleOffset":[
			{
				"return_type":"void",
				"brief_description":"Get the start of the range of style numbers used for margin text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarginSetStyles":[
			{
				"return_type":"void",
				"brief_description":"Set the style in the text margin for a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"styles"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarginSetText":[
			{
				"return_type":"void",
				"brief_description":"Set the text in the text margin for a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarginTextClearAll":[
			{
				"return_type":"void",
				"brief_description":"Clear the margin text on all lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MarkerAdd":[
			{
				"return_type":"int",
				"brief_description":"Add a marker to a line, returning an ID which can be used to find or delete the marker.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"markerNumber"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerAddSet":[
			{
				"return_type":"void",
				"brief_description":"Add a set of markers to a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"set"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerDefine":[
			{
				"return_type":"void",
				"brief_description":"Set the symbol used for a particular marker number, and optionally the fore and background colours.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"markerNumber",
					"markerSymbol",
					"foreground",
					"background"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullColour",
					"wxNullColour"
				]
			}
		],
		"MarkerDefineBitmap":[
			{
				"return_type":"void",
				"brief_description":"Define a marker from a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"markerNumber",
					"bmp"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerDelete":[
			{
				"return_type":"void",
				"brief_description":"Delete a marker from a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"markerNumber"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerDeleteAll":[
			{
				"return_type":"void",
				"brief_description":"Delete all markers with a particular number from all lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"markerNumber"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarkerDeleteHandle":[
			{
				"return_type":"void",
				"brief_description":"Delete a marker.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarkerGet":[
			{
				"return_type":"int",
				"brief_description":"Get a bit mask of all the markers set on a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarkerLineFromHandle":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the line number at which a particular marker is located.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarkerNext":[
			{
				"return_type":"int",
				"brief_description":"Find the next line at or after lineStart that includes a marker in mask.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"lineStart",
					"markerMask"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerPrevious":[
			{
				"return_type":"int",
				"brief_description":"Find the previous line before lineStart that includes a marker in mask.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"lineStart",
					"markerMask"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerSetAlpha":[
			{
				"return_type":"void",
				"brief_description":"Set the alpha used for a marker that is drawn in the text area, not the margin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"markerNumber",
					"alpha"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerSetBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour used for a particular marker number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"markerNumber",
					"back"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MarkerSetForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour used for a particular marker number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"markerNumber",
					"fore"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MoveCaretInsideView":[
			{
				"return_type":"void",
				"brief_description":"Move the caret inside current view if it's not there already.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"NewLine":[
			{
				"return_type":"void",
				"brief_description":"Insert a new line, may use a CRLF, CR or LF depending on EOL mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageDown":[
			{
				"return_type":"void",
				"brief_description":"Move caret one page down.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageDownExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret one page down extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageDownRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret one page down, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageUp":[
			{
				"return_type":"void",
				"brief_description":"Move caret one page up.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageUpExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret one page up extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageUpRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret one page up, extending rectangular selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ParaDown":[
			{
				"return_type":"void",
				"brief_description":"Move caret between paragraphs (delimited by empty lines).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ParaDownExtend":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ParaUp":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ParaUpExtend":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Paste":[
			{
				"return_type":"void",
				"brief_description":"Paste the contents of the clipboard into the document replacing the selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PointFromPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Retrieve the point in the window where a position is displayed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PositionAfter":[
			{
				"return_type":"int",
				"brief_description":"Given a valid document position, return the next position taking code page into account.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PositionBefore":[
			{
				"return_type":"int",
				"brief_description":"Given a valid document position, return the previous position taking code page into account.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PositionFromLine":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the position at the start of a line.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PositionFromPoint":[
			{
				"return_type":"int",
				"brief_description":"Find the position from a point within the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPoint"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PositionFromPointClose":[
			{
				"return_type":"int",
				"brief_description":"Find the position from a point within the window but return INVALID_POSITION if not close to text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Redo":[
			{
				"return_type":"void",
				"brief_description":"Redoes the next action on the undo history.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RegisterImage":[
			{
				"return_type":"void",
				"brief_description":"Register an image for use in autocompletion lists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"type",
					"bmp"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ReplaceSelection":[
			{
				"return_type":"void",
				"brief_description":"Replace the selected text with the argument text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ReplaceTarget":[
			{
				"return_type":"int",
				"brief_description":"Replace the target text with the argument text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ReplaceTargetRE":[
			{
				"return_type":"int",
				"brief_description":"Replace the target text with the argument text after \\d processing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RotateSelection":[
			{
				"return_type":"void",
				"brief_description":"Set the main selection to the next selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ScrollToColumn":[
			{
				"return_type":"void",
				"brief_description":"Scroll enough to make the given column visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ScrollToLine":[
			{
				"return_type":"void",
				"brief_description":"Scroll enough to make the given line visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SearchAnchor":[
			{
				"return_type":"void",
				"brief_description":"Sets the current caret position to be the search anchor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SearchInTarget":[
			{
				"return_type":"int",
				"brief_description":"Search for a counted string in the target and set the target to the found range.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SearchNext":[
			{
				"return_type":"int",
				"brief_description":"Find some text starting at the search anchor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"flags",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SearchPrev":[
			{
				"return_type":"int",
				"brief_description":"Find some text starting at the search anchor and moving backwards.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"flags",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SelectAll":[
			{
				"return_type":"void",
				"brief_description":"Select all the text in the document.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SelectionDuplicate":[
			{
				"return_type":"void",
				"brief_description":"Duplicate the selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SelectionIsRectangle":[
			{
				"return_type":"bool",
				"brief_description":"Is the selection rectangular? The alternative is the more common stream selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAdditionalCaretForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour of additional carets.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fore"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAdditionalCaretsBlink":[
			{
				"return_type":"void",
				"brief_description":"Set whether additional carets will blink.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"additionalCaretsBlink"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAdditionalCaretsVisible":[
			{
				"return_type":"void",
				"brief_description":"Set whether additional carets are visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"additionalCaretsBlink"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAdditionalSelAlpha":[
			{
				"return_type":"void",
				"brief_description":"Set the alpha of the selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alpha"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAdditionalSelBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour of additional selections.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"back"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAdditionalSelForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour of additional selections.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fore"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAdditionalSelectionTyping":[
			{
				"return_type":"void",
				"brief_description":"Set whether typing can be performed into multiple selections.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"additionalSelectionTyping"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAnchor":[
			{
				"return_type":"void",
				"brief_description":"Set the selection anchor to a position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"posAnchor"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackSpaceUnIndents":[
			{
				"return_type":"void",
				"brief_description":"Sets whether a backspace pressed when caret is within indentation unindents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bsUnIndents"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBufferedDraw":[
			{
				"return_type":"void",
				"brief_description":"If drawing is buffered then each line of text is drawn into a bitmap buffer before drawing it to the screen to avoid flicker.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"buffered"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaretForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour of the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fore"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaretLineBackAlpha":[
			{
				"return_type":"void",
				"brief_description":"Set background alpha of the caret line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alpha"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaretLineBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the colour of the background of the line containing the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"back"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaretLineVisible":[
			{
				"return_type":"void",
				"brief_description":"Display the background of the line containing the caret in a different colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaretPeriod":[
			{
				"return_type":"void",
				"brief_description":"Get the time in milliseconds that the caret is on and off.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"periodMilliseconds"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCaretWidth":[
			{
				"return_type":"void",
				"brief_description":"Set the width of the insert mode caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixelWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCharsDefault":[
			{
				"return_type":"void",
				"brief_description":"Reset the set of characters for whitespace and word characters to the defaults.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCodePage":[
			{
				"return_type":"void",
				"brief_description":"Set the code page used to interpret the bytes of the document as characters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"codePage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetControlCharSymbol":[
			{
				"return_type":"void",
				"brief_description":"Change the way control characters are displayed: If symbol is < 32, keep the drawn way, else, use the given character.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"symbol"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCurrentPos":[
			{
				"return_type":"void",
				"brief_description":"Sets the position of the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEOLMode":[
			{
				"return_type":"void",
				"brief_description":"Set the current end of line mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"eolMode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEdgeColour":[
			{
				"return_type":"void",
				"brief_description":"Change the colour used in edge indication.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"edgeColour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEdgeColumn":[
			{
				"return_type":"void",
				"brief_description":"Set the column number of the edge.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEdgeMode":[
			{
				"return_type":"void",
				"brief_description":"The edge may be displayed by a line (EDGE_LINE) or by highlighting text that goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEndAtLastLine":[
			{
				"return_type":"void",
				"brief_description":"Sets the scroll range so that maximum scroll position has the last line at the bottom of the view (default).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"endAtLastLine"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtraAscent":[
			{
				"return_type":"void",
				"brief_description":"Set extra ascent for each line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extraAscent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtraDescent":[
			{
				"return_type":"void",
				"brief_description":"Set extra descent for each line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extraDescent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFirstVisibleLine":[
			{
				"return_type":"void",
				"brief_description":"Scroll so that a display line is at the top of the display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lineDisplay"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFoldExpanded":[
			{
				"return_type":"void",
				"brief_description":"Show the children of a header line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"expanded"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFoldFlags":[
			{
				"return_type":"void",
				"brief_description":"Set some style options for folding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFoldLevel":[
			{
				"return_type":"void",
				"brief_description":"Set the fold level of a line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"level"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFoldMarginColour":[
			{
				"return_type":"void",
				"brief_description":"Set the colours used as a chequerboard pattern in the fold margin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"back"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFoldMarginHiColour":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"fore"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetHScrollBar":[
			{
				"return_type":"void",
				"brief_description":"Set the horizontal scrollbar to use instead of the ont that's built-in.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxScrollBar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHighlightGuide":[
			{
				"return_type":"void",
				"brief_description":"Set the highlighted indentation guide column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHotspotActiveBackground":[
			{
				"return_type":"void",
				"brief_description":"Set a back colour for active hotspots.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"back"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetHotspotActiveForeground":[
			{
				"return_type":"void",
				"brief_description":"Set a fore colour for active hotspots.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"fore"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetHotspotActiveUnderline":[
			{
				"return_type":"void",
				"brief_description":"Enable \/ Disable underlining active hotspots.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"underline"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHotspotSingleLine":[
			{
				"return_type":"void",
				"brief_description":"Limit hotspots to single line so hotspots on two lines don't merge.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"singleLine"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIndent":[
			{
				"return_type":"void",
				"brief_description":"Set the number of spaces used for one level of indentation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indentSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIndentationGuides":[
			{
				"return_type":"void",
				"brief_description":"Show or hide indentation guides.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indentView"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetKeyWords":[
			{
				"return_type":"void",
				"brief_description":"Set up the key words used by the lexer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"keywordSet",
					"keyWords"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetLastKeydownProcessed":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLayoutCache":[
			{
				"return_type":"void",
				"brief_description":"Sets the degree of caching of layout information.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLexer":[
			{
				"return_type":"void",
				"brief_description":"Set the lexing language of the document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lexer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLexerLanguage":[
			{
				"return_type":"void",
				"brief_description":"Set the lexing language of the document based on string name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"language"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLineIndentation":[
			{
				"return_type":"void",
				"brief_description":"Change the indentation of a line to a number of columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"indentSize"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetLineState":[
			{
				"return_type":"void",
				"brief_description":"Used to hold extra styling information for each line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"line",
					"state"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMainSelection":[
			{
				"return_type":"void",
				"brief_description":"Set the main selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMarginLeft":[
			{
				"return_type":"void",
				"brief_description":"Sets the size in pixels of the left margin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixelWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMarginMask":[
			{
				"return_type":"void",
				"brief_description":"Set a mask that determines which markers are displayed in a margin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"margin",
					"mask"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMarginRight":[
			{
				"return_type":"void",
				"brief_description":"Sets the size in pixels of the right margin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixelWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMarginSensitive":[
			{
				"return_type":"void",
				"brief_description":"Make a margin sensitive or insensitive to mouse clicks.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"margin",
					"sensitive"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMarginType":[
			{
				"return_type":"void",
				"brief_description":"Set a margin to be either numeric or symbolic.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"margin",
					"marginType"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMarginWidth":[
			{
				"return_type":"void",
				"brief_description":"Set the width of a margin to a width expressed in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"margin",
					"pixelWidth"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"void",
				"brief_description":"Set the left and right margin in the edit area, measured in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"left",
					"right"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetModEventMask":[
			{
				"return_type":"void",
				"brief_description":"Set which document modification events are sent to the container.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMouseDownCaptures":[
			{
				"return_type":"void",
				"brief_description":"Set whether the mouse is captured when its button is pressed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"captures"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMouseDwellTime":[
			{
				"return_type":"void",
				"brief_description":"Sets the time the mouse must sit still to generate a mouse dwell event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"periodMilliseconds"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMultipleSelection":[
			{
				"return_type":"void",
				"brief_description":"Set whether multiple selections can be made.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"multipleSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOvertype":[
			{
				"return_type":"void",
				"brief_description":"Set to overtype (true) or insert mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"overtype"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPasteConvertEndings":[
			{
				"return_type":"void",
				"brief_description":"Enable\/Disable convert-on-paste for line endings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"convert"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintColourMode":[
			{
				"return_type":"void",
				"brief_description":"Modify colours when printing for clearer printed text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintMagnification":[
			{
				"return_type":"void",
				"brief_description":"Sets the print magnification added to the point size of each style for printing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"magnification"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintWrapMode":[
			{
				"return_type":"void",
				"brief_description":"Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetProperty":[
			{
				"return_type":"void",
				"brief_description":"Set up a value that may be used by a lexer for some optional feature.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetReadOnly":[
			{
				"return_type":"void",
				"brief_description":"Set to read only or read write.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"readOnly"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRectangularSelectionAnchor":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"posAnchor"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRectangularSelectionAnchorVirtualSpace":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"space"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRectangularSelectionCaret":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRectangularSelectionCaretVirtualSpace":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"space"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRectangularSelectionModifier":[
			{
				"return_type":"void",
				"brief_description":"On GTK+, allow selecting the modifier key to use for mouse-based rectangular selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"modifier"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSTCCursor":[
			{
				"return_type":"void",
				"brief_description":"Sets the cursor to one of the SC_CURSOR* values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cursorType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSTCFocus":[
			{
				"return_type":"void",
				"brief_description":"Change internal focus flag.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"focus"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSavePoint":[
			{
				"return_type":"void",
				"brief_description":"Remember the current position in the undo history as the position at which the document was saved.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetScrollWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the document width assumed for scrolling.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixelWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSearchFlags":[
			{
				"return_type":"void",
				"brief_description":"Set the search flags used by SearchInTarget.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelAlpha":[
			{
				"return_type":"void",
				"brief_description":"Set the alpha of the selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alpha"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour of the main and additional selections and whether to use this setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"back"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour of the main and additional selections and whether to use this setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"fore"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Selects the text starting at the first position up to (but not including) the character at the last position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectionEnd":[
			{
				"return_type":"void",
				"brief_description":"Sets the position that ends the selection - this becomes the currentPosition.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectionMode":[
			{
				"return_type":"void",
				"brief_description":"Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE\/SC_SEL_THIN) or by lines (SC_SEL_LINES).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectionNAnchor":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"selection",
					"posAnchor"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectionNAnchorVirtualSpace":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"selection",
					"space"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectionNCaret":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"selection",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectionNCaretVirtualSpace":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"selection",
					"space"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectionNEnd":[
			{
				"return_type":"void",
				"brief_description":"Sets the position that ends the selection - this becomes the currentPosition.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"selection",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectionNStart":[
			{
				"return_type":"void",
				"brief_description":"Sets the position that starts the selection - this becomes the anchor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"selection",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectionStart":[
			{
				"return_type":"void",
				"brief_description":"Sets the position that starts the selection - this becomes the anchor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStatus":[
			{
				"return_type":"void",
				"brief_description":"Change error status - 0 = OK.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"statusCode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyling":[
			{
				"return_type":"void",
				"brief_description":"Change style from current styling position for length characters to a style and move the current styling position to after this newly styled segment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"length",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetTabIndents":[
			{
				"return_type":"void",
				"brief_description":"Sets whether a tab pressed when caret is within indentation indents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tabIndents"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTabWidth":[
			{
				"return_type":"void",
				"brief_description":"Change the visible size of a tab to be a multiple of the width of a space character.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tabWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTargetEnd":[
			{
				"return_type":"void",
				"brief_description":"Sets the position that ends the target which is used for updating the document without affecting the scroll position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTargetStart":[
			{
				"return_type":"void",
				"brief_description":"Sets the position that starts the target which is used for updating the document without affecting the scroll position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Replace the contents of the document with the argument text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextRaw":[
			{
				"return_type":"void",
				"brief_description":"Replace the contents of the document with the argument text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const char*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTwoPhaseDraw":[
			{
				"return_type":"void",
				"brief_description":"In twoPhaseDraw mode, drawing is performed in two phases, first the background and then the foreground.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"twoPhase"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUndoCollection":[
			{
				"return_type":"void",
				"brief_description":"Choose between collecting actions into the undo history and discarding them.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"collectUndo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUseHorizontalScrollBar":[
			{
				"return_type":"void",
				"brief_description":"Show or hide the horizontal scroll bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUseTabs":[
			{
				"return_type":"void",
				"brief_description":"Indentation will only use space characters if useTabs is false, otherwise it will use a combination of tabs and spaces.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"useTabs"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUseVerticalScrollBar":[
			{
				"return_type":"void",
				"brief_description":"Show or hide the vertical scroll bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVScrollBar":[
			{
				"return_type":"void",
				"brief_description":"Set the vertical scrollbar to use instead of the ont that's built-in.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxScrollBar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetViewEOL":[
			{
				"return_type":"void",
				"brief_description":"Make the end of line characters visible or invisible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetViewWhiteSpace":[
			{
				"return_type":"void",
				"brief_description":"Make white space characters invisible, always visible or visible outside indentation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"viewWS"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVirtualSpaceOptions":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"virtualSpaceOptions"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVisiblePolicy":[
			{
				"return_type":"void",
				"brief_description":"Set the way the display area is determined when a particular line is to be moved to by Find, FindNext, GotoLine, etc.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"visiblePolicy",
					"visibleSlop"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetWhitespaceBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour of all whitespace and whether to use this setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"back"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetWhitespaceChars":[
			{
				"return_type":"void",
				"brief_description":"Set the set of characters making up whitespace for when moving or selecting by word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"characters"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWhitespaceForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour of all whitespace and whether to use this setting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useSetting",
					"fore"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetWhitespaceSize":[
			{
				"return_type":"void",
				"brief_description":"Set the size of the dots used to mark space characters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWordChars":[
			{
				"return_type":"void",
				"brief_description":"Set the set of characters making up words for when moving or selecting by word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"characters"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWrapIndentMode":[
			{
				"return_type":"void",
				"brief_description":"Sets how wrapped sublines are placed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWrapMode":[
			{
				"return_type":"void",
				"brief_description":"Sets whether text is word wrapped.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWrapStartIndent":[
			{
				"return_type":"void",
				"brief_description":"Set the start indent for wrapped lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWrapVisualFlags":[
			{
				"return_type":"void",
				"brief_description":"Set the display mode of visual flags for wrapped lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"wrapVisualFlags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWrapVisualFlagsLocation":[
			{
				"return_type":"void",
				"brief_description":"Set the location of visual flags for wrapped lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"wrapVisualFlagsLocation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetXCaretPolicy":[
			{
				"return_type":"void",
				"brief_description":"Set the way the caret is kept visible when going sideways.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"caretPolicy",
					"caretSlop"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetXOffset":[
			{
				"return_type":"void",
				"brief_description":"Get and Set the xOffset (ie, horizontal scroll position).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"newOffset"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetYCaretPolicy":[
			{
				"return_type":"void",
				"brief_description":"Set the way the line the caret is on is kept visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"caretPolicy",
					"caretSlop"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetZoom":[
			{
				"return_type":"void",
				"brief_description":"Set the zoom level.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"zoom"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowLines":[
			{
				"return_type":"void",
				"brief_description":"Make a range of lines visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"lineStart",
					"lineEnd"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StartRecord":[
			{
				"return_type":"void",
				"brief_description":"Start notifying the container of all key presses and commands.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StartStyling": [
			{
				"return_type": "void",
				"brief_description": "Set the current styling position to start.",
				"constant": false,
				"virtual": false,
				"pure_virtual": false,
				"static": false,
				"protected": false,
				"parameters_type": [
					"int"
				],
				"parameters_is_array": [
					false
				],
				"parameters_extra": [
					false
				],
				"parameters_name": [
					"start"
				],
				"parameters_required": [
					true
				],
				"parameters_default_value": [
					null
				]
			}
		],
		"StopRecord":[
			{
				"return_type":"void",
				"brief_description":"Stop notifying the container of all key presses and commands.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StutteredPageDown":[
			{
				"return_type":"void",
				"brief_description":"Move caret to bottom of page, or one page down if already at bottom of page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StutteredPageDownExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StutteredPageUp":[
			{
				"return_type":"void",
				"brief_description":"Move caret to top of page, or one page up if already at top of page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StutteredPageUpExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to top of page, or one page up if already at top of page, extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StyleClearAll":[
			{
				"return_type":"void",
				"brief_description":"Clear all the styles and make equivalent to the global default style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StyleResetDefault":[
			{
				"return_type":"void",
				"brief_description":"Reset the default style to its state at startup.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StyleSetBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"back"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetBold":[
			{
				"return_type":"void",
				"brief_description":"Set a style to be bold or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"bold"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetCase":[
			{
				"return_type":"void",
				"brief_description":"Set a style to be mixed case, or to force upper or lower case.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"caseForce"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetChangeable":[
			{
				"return_type":"void",
				"brief_description":"Set a style to be changeable or not (read only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"changeable"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetCharacterSet":[
			{
				"return_type":"void",
				"brief_description":"Set the character set of the font in a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"characterSet"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetEOLFilled":[
			{
				"return_type":"void",
				"brief_description":"Set a style to have its end of line filled or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"filled"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetFaceName":[
			{
				"return_type":"void",
				"brief_description":"Set the font of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"fontName"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetFont":[
			{
				"return_type":"void",
				"brief_description":"Set style size, face, bold, italic, and underline attributes from a wxFont's attributes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxFont&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"styleNum",
					"font"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetFontAttr":[
			{
				"return_type":"void",
				"brief_description":"Set all font style attributes at once.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&",
					"bool",
					"bool",
					"bool",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"styleNum",
					"size",
					"faceName",
					"bold",
					"italic",
					"underline",
					"encoding"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"wxFONTENCODING_DEFAULT"
				]
			}
		],
		"StyleSetFontEncoding":[
			{
				"return_type":"void",
				"brief_description":"Set the font encoding to be used by a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"encoding"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the foreground colour of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"fore"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetHotSpot":[
			{
				"return_type":"void",
				"brief_description":"Set a style to be a hotspot or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"hotspot"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetItalic":[
			{
				"return_type":"void",
				"brief_description":"Set a style to be italic or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"italic"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetSize":[
			{
				"return_type":"void",
				"brief_description":"Set the size of characters of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"sizePoints"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetSpec":[
			{
				"return_type":"void",
				"brief_description":"Extract style settings from a spec-string which is composed of one or more of the following comma separated elements:",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"styleNum",
					"spec"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetUnderline":[
			{
				"return_type":"void",
				"brief_description":"Set a style to be underlined or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"underline"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetVisible":[
			{
				"return_type":"void",
				"brief_description":"Set a style to be visible or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"visible"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SwapMainAnchorCaret":[
			{
				"return_type":"void",
				"brief_description":"Swap that caret and anchor of the main selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Tab":[
			{
				"return_type":"void",
				"brief_description":"If selection is empty or all on one line replace the selection with a tab character.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TargetFromSelection":[
			{
				"return_type":"void",
				"brief_description":"Make the target range start and end be the same as the selection range start and end.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TextHeight":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the height of a particular line of text in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"TextWidth":[
			{
				"return_type":"int",
				"brief_description":"Measure the pixel width of some text in a particular style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ToggleCaretSticky":[
			{
				"return_type":"void",
				"brief_description":"Switch between sticky and non-sticky: meant to be bound to a key.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToggleFold":[
			{
				"return_type":"void",
				"brief_description":"Switch a header line between expanded and contracted.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Undo":[
			{
				"return_type":"void",
				"brief_description":"Undo one action in the undo history.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UpperCase":[
			{
				"return_type":"void",
				"brief_description":"Transform the selection to upper case.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UsePopUp": [
			{
				"return_type": "void",
				"brief_description": "Set whether a pop up menu is displayed automatically when the user presses the wrong mouse button on certain areas.",
				"constant": false,
				"virtual": false,
				"pure_virtual": false,
				"static": false,
				"protected": false,
				"parameters_type": [
					"int"
				],
				"parameters_is_array": [
					false
				],
				"parameters_extra": [
					false
				],
				"parameters_name": [
					"popUpMode"
				],
				"parameters_required": [
					true
				],
				"parameters_default_value": [
					null
				]
			}
		],
		"UserListShow":[
			{
				"return_type":"void",
				"brief_description":"Display a list of strings and send notification when user chooses one.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"listType",
					"itemList"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"VCHome":[
			{
				"return_type":"void",
				"brief_description":"Move caret to before first visible character on line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"VCHomeExtend":[
			{
				"return_type":"void",
				"brief_description":"Like VCHome but extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"VCHomeRectExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret to before first visible character on line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"VCHomeWrap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"VCHomeWrapExtend":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"VisibleFromDocLine":[
			{
				"return_type":"int",
				"brief_description":"Find the display line of a document line taking hidden lines into account.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"WordEndPosition":[
			{
				"return_type":"int",
				"brief_description":"Get position of end of word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"onlyWordCharacters"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"WordLeft":[
			{
				"return_type":"void",
				"brief_description":"Move caret left one word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordLeftEnd":[
			{
				"return_type":"void",
				"brief_description":"Move caret left one word, position cursor at end of word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordLeftEndExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret left one word, position cursor at end of word, extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordLeftExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret left one word extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordPartLeft":[
			{
				"return_type":"void",
				"brief_description":"Move to the previous change in capitalisation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordPartLeftExtend":[
			{
				"return_type":"void",
				"brief_description":"Move to the previous change in capitalisation extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordPartRight":[
			{
				"return_type":"void",
				"brief_description":"Move to the change next in capitalisation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordPartRightExtend":[
			{
				"return_type":"void",
				"brief_description":"Move to the next change in capitalisation extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordRight":[
			{
				"return_type":"void",
				"brief_description":"Move caret right one word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordRightEnd":[
			{
				"return_type":"void",
				"brief_description":"Move caret right one word, position cursor at end of word.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WordRightEndExtend":[
			{
				"return_type":"void",
				"brief_description":"Move caret right one word, position cursor at end of word, extending selection to new caret position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AppendTextRaw":[
			{
				"return_type":"void",
				"brief_description":"Append a string to the end of the document without changing the selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const char*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"length"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			}
		],
		"AddTextRaw":[
			{
				"return_type":"void",
				"brief_description":"Add text to the document at current position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const char*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"length"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			}
		],
		"ScrollToEnd":[
			{
				"return_type":"void",
				"brief_description":"Scroll to end of document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ScrollToStart":[
			{
				"return_type":"void",
				"brief_description":"Scroll to start of document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MarkerEnableHighlight":[
			{
				"return_type":"void",
				"brief_description":"Enable\/disable highlight for current folding bloc (smallest one that contains the caret)",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enabled"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MarkerDefineRGBAImage":[
			{
				"return_type":"void",
				"brief_description":"Define a marker from RGBA data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const unsigned char*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"markerNumber",
					"pixels"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AnnotationClearLine":[
			{
				"return_type":"void",
				"brief_description":"Clear annotations from the given line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"line"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoCompGetCaseInsensitiveBehaviour":[
			{
				"return_type":"int",
				"brief_description":"Get auto-completion case insensitive behaviour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompSetCaseInsensitiveBehaviour":[
			{
				"return_type":"void",
				"brief_description":"Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"behaviour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"BraceBadLightIndicator":[
			{
				"return_type":"void",
				"brief_description":"Use specified indicator to highlight non matching brace instead of changing its style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useBraceBadLightIndicator",
					"indicator"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"BraceHighlightIndicator":[
			{
				"return_type":"void",
				"brief_description":"Use specified indicator to highlight matching braces instead of changing their style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"useBraceHighlightIndicator",
					"indicator"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CallTipSetPosition":[
			{
				"return_type":"void",
				"brief_description":"Set position of calltip, above or below text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"above"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ChangeLexerState":[
			{
				"return_type":"int",
				"brief_description":"Indicate that the internal state of a lexer has changed over a range and therefore there may be a need to redraw.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"start",
					"end"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ContractedFoldNext":[
			{
				"return_type":"int",
				"brief_description":"Find the next line at or after lineStart that is a contracted fold header line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lineStart"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CountCharacters":[
			{
				"return_type":"int",
				"brief_description":"Count characters between two positions.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"startPos",
					"endPos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DelWordRightEnd":[
			{
				"return_type":"void",
				"brief_description":"Delete the word to the right of the caret, but not the trailing non-word characters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteRange":[
			{
				"return_type":"void",
				"brief_description":"Delete a range of text in the document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"deleteLength"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DescribeKeyWordSets":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve a '\n' separated list of descriptions of the keyword sets understood by the current lexer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DescribeProperty":[
			{
				"return_type":"wxString",
				"brief_description":"Describe a property.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DiscardEdits":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAllLinesVisible":[
			{
				"return_type":"bool",
				"brief_description":"Are all lines visible?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaretStyle":[
			{
				"return_type":"int",
				"brief_description":"Returns the current style of the caret.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurLine":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve the text of the line containing the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"linePos"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"GetCurLineRaw":[
			{
				"return_type":"wxCharBuffer",
				"brief_description":"Retrieve the text of the line containing the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"linePos"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"GetGapPosition":[
			{
				"return_type":"int",
				"brief_description":"Return a position which, to avoid performance costs, should not be within the range of a call to GetRangePointer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHotspotActiveBackground":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the back colour for active hotspots.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHotspotActiveForeground":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the fore colour for active hotspots.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHotspotActiveUnderline":[
			{
				"return_type":"bool",
				"brief_description":"Get whether underlining for active hotspots.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHotspotSingleLine":[
			{
				"return_type":"bool",
				"brief_description":"Get the HotspotSingleLine property.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIdentifier":[
			{
				"return_type":"int",
				"brief_description":"Get the identifier.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndicatorCurrent":[
			{
				"return_type":"int",
				"brief_description":"Get the current indicator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndicatorValue":[
			{
				"return_type":"int",
				"brief_description":"Get the current indicator value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInsertionPoint":[
			{
				"return_type":"long",
				"brief_description":"Returns the insertion point, or cursor, position.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLineLength":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineText":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMarginCursor":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the cursor shown in a margin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"margin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMarginOptions":[
			{
				"return_type":"int",
				"brief_description":"Get the margin options.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMultiPaste":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the effect of pasting when there are multiple selections.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNumberOfLines":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPositionCacheSize":[
			{
				"return_type":"int",
				"brief_description":"How many entries are allocated to the position cache?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPunctuationChars":[
			{
				"return_type":"wxString",
				"brief_description":"Get the set of characters making up punctuation characters.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScrollWidthTracking":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether the scroll width tracks wide lines.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelEOLFilled":[
			{
				"return_type":"bool",
				"brief_description":"Is the selection end of line filled?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"void",
				"brief_description":"Gets the current selection span.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long*",
					"long*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetTag":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve the value of a tag from a regular expression search.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tagNumber"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetTechnology":[
			{
				"return_type":"int",
				"brief_description":"Get the tech.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWhitespaceChars":[
			{
				"return_type":"wxString",
				"brief_description":"Get the set of characters making up whitespace for when moving or selecting by word.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWordChars":[
			{
				"return_type":"wxString",
				"brief_description":"Get the set of characters making up words for when moving or selecting by word.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IndicatorAllOnFor":[
			{
				"return_type":"int",
				"brief_description":"Are any indicators present at position?",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"position"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IndicatorClearRange":[
			{
				"return_type":"void",
				"brief_description":"Turn a indicator off over a range.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"position",
					"clearLength"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorEnd":[
			{
				"return_type":"int",
				"brief_description":"Where does a particular indicator end?",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indicator",
					"position"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorFillRange":[
			{
				"return_type":"void",
				"brief_description":"Turn a indicator on over a range.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"position",
					"fillLength"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorGetOutlineAlpha":[
			{
				"return_type":"int",
				"brief_description":"Get the alpha outline colour of the given indicator.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indicator"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IndicatorGetUnder":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether indicator drawn under or over text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indic"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IndicatorSetOutlineAlpha":[
			{
				"return_type":"void",
				"brief_description":"Set the alpha outline colour of the given indicator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indicator",
					"alpha"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorSetUnder":[
			{
				"return_type":"void",
				"brief_description":"Set an indicator to draw under text or over(default).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indic",
					"under"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorStart":[
			{
				"return_type":"int",
				"brief_description":"Where does a particular indicator start?",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indicator",
					"position"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IndicatorValueAt":[
			{
				"return_type":"int",
				"brief_description":"What value does a particular indicator have at at a position?",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indicator",
					"position"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsEditable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the controls contents may be edited by user (note that it always can be changed by the program).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsModified":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MarkDirty":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MarkerSetBackgroundSelected":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour used for a particular marker number when its folding block is selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"markerNumber",
					"back"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MoveSelectedLinesDown":[
			{
				"return_type":"void",
				"brief_description":"Move the selected lines down one line, shifting the line below before the selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MoveSelectedLinesUp":[
			{
				"return_type":"void",
				"brief_description":"Move the selected lines up one line, shifting the line above after the selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PropertyNames":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve a '\n' separated list of properties understood by the current lexer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PropertyType":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the type of a property.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RGBAImageSetHeight":[
			{
				"return_type":"void",
				"brief_description":"Set the height for future RGBA image data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RGBAImageSetWidth":[
			{
				"return_type":"void",
				"brief_description":"Set the width for future RGBA image data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RegisterRGBAImage":[
			{
				"return_type":"void",
				"brief_description":"Register an RGBA image for use in autocompletion lists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const unsigned char*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"type",
					"pixels"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Remove":[
			{
				"return_type":"void",
				"brief_description":"Removes the text starting at the first given position up to (but not including) the character at the last position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Replace":[
			{
				"return_type":"void",
				"brief_description":"Replaces the text starting at the first position up to (but not including) the character at the last position with the given text.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"from",
					"to",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SelectNone":[
			{
				"return_type":"void",
				"brief_description":"Deselects selected text in the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCaretStyle":[
			{
				"return_type":"void",
				"brief_description":"Set the style of the caret to be drawn.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"caretStyle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"WriteText":[
			{
				"return_type":"void",
				"brief_description":"Writes the text into the text control at the current insertion position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"XYToPosition":[
			{
				"return_type":"long",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"VerticalCentreCaret":[
			{
				"return_type":"void",
				"brief_description":"Centre current line in window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StyleSetWeight":[
			{
				"return_type":"void",
				"brief_description":"Set the weight of characters of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"weight"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleSetSizeFractional":[
			{
				"return_type":"void",
				"brief_description":"Set the size of characters of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"caseForce"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StyleGetBackground":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the background colour of a style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetBold":[
			{
				"return_type":"bool",
				"brief_description":"Get is a style bold or not.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetCase":[
			{
				"return_type":"int",
				"brief_description":"Get is a style mixed case, or to force upper or lower case.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetChangeable":[
			{
				"return_type":"bool",
				"brief_description":"Get is a style changeable or not (read only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetCharacterSet":[
			{
				"return_type":"int",
				"brief_description":"Get the character set of the font in a style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetEOLFilled":[
			{
				"return_type":"bool",
				"brief_description":"Get is a style to have its end of line filled or not.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetFaceName":[
			{
				"return_type":"wxString",
				"brief_description":"Get the font facename of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Get the font of a style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetForeground":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the foreground colour of a style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetHotSpot":[
			{
				"return_type":"bool",
				"brief_description":"Get is a style a hotspot or not.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetItalic":[
			{
				"return_type":"bool",
				"brief_description":"Get is a style italic or not.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetSize":[
			{
				"return_type":"int",
				"brief_description":"Get the size of characters of a style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetSizeFractional":[
			{
				"return_type":"int",
				"brief_description":"Get the size of characters of a style in points multiplied by 100.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetUnderline":[
			{
				"return_type":"bool",
				"brief_description":"Get is a style underlined or not.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetVisible":[
			{
				"return_type":"bool",
				"brief_description":"Get is a style visible or not.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"StyleGetWeight":[
			{
				"return_type":"int",
				"brief_description":"Get the weight of characters of a style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowPosition":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"const wxTextAttr&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"start",
					"end",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetMarginCursor":[
			{
				"return_type":"void",
				"brief_description":"Set the cursor shown when the mouse is inside a margin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"margin",
					"cursor"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMarginOptions":[
			{
				"return_type":"void",
				"brief_description":"Set the margin options.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"marginOptions"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIdentifier":[
			{
				"return_type":"void",
				"brief_description":"Set the identifier reported as idFrom in notification messages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"identifier"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIndicatorCurrent":[
			{
				"return_type":"void",
				"brief_description":"Set the indicator used for IndicatorFillRange and IndicatorClearRange.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indicator"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIndicatorValue":[
			{
				"return_type":"void",
				"brief_description":"Set the value used for IndicatorFillRange.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetInsertionPoint":[
			{
				"return_type":"void",
				"brief_description":"Sets the insertion point at the given position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEmptySelection":[
			{
				"return_type":"void",
				"brief_description":"Set caret to a position, while removing any existing selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEditable":[
			{
				"return_type":"void",
				"brief_description":"Makes the text item editable or read-only, overriding the wxTE_READONLY flag.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"editable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultStyle":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTextAttr&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetStyle":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxTextAttr&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"position",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetLastPosition":[
			{
				"return_type":"long",
				"brief_description":"Returns the zero based index of the last position in the text control, which is equal to the number of characters in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMultiPaste":[
			{
				"return_type":"void",
				"brief_description":"Change the effect of pasting when there are multiple selections.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"multiPaste"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPositionCacheSize":[
			{
				"return_type":"void",
				"brief_description":"Set number of entries in position cache.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPunctuationChars":[
			{
				"return_type":"void",
				"brief_description":"Set the set of characters making up punctuation characters Should be called after SetWordChars.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"characters"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetScrollWidthTracking":[
			{
				"return_type":"void",
				"brief_description":"Sets whether the maximum width line displayed is used to set scroll width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tracking"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelEOLFilled":[
			{
				"return_type":"void",
				"brief_description":"Set the selection to have its end of line filled or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filled"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTechnology":[
			{
				"return_type":"void",
				"brief_description":"Set the technology used.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"technology"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxStyledTextEvent":{
		"_implements":[
			"wxCommandEvent"
		],
		"wxStyledTextEvent":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0"
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxStyledTextEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetY":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetX":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWParam":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"t"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetModifiers":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"m"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetModificationType":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"t"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMessage":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMargin":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetListType":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLinesAdded":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"num"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLine":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetAlt":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetControl":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDragText":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFoldLevelNow":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFoldLevelPrev":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKey":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLParam":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLength":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLine":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLinesAdded":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetListType":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMargin":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMessage":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModificationType":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModifiers":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetShift":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWParam":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetX":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetY":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDragResult":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDragResult"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDragText":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFoldLevelNow":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFoldLevelPrev":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetKey":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"k"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLParam":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLength":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"len"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDragResult":[
			{
				"return_type":"wxDragResult",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxVersionInfo":{
		"ToString":[
			{
				"return_type":"wxString",
				"brief_description":"Get the string representation of this version object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasCopyright":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a copyright string has been specified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVersionString":[
			{
				"return_type":"wxString",
				"brief_description":"Get the string representation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the name of the object (library).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinor":[
			{
				"return_type":"int",
				"brief_description":"Get the minor version number.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMicro":[
			{
				"return_type":"int",
				"brief_description":"Get the micro version, or release number.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMajor":[
			{
				"return_type":"int",
				"brief_description":"Get the major version number.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDescription":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the description string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCopyright":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the copyright string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxVersionInfo":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"int",
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"major",
					"minor",
					"micro",
					"description",
					"copyright"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxString()",
					"0",
					"0",
					"0",
					"wxString()",
					"wxString()"
				]
			}
		],
		"HasDescription":[
			{
				"return_type":"bool",
				"brief_description":"Return true if a description string has been specified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxScrollBar":{
		"_implements":[
			"wxControl"
		],
		"wxScrollBar":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a scrollbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSB_HORIZONTAL",
					"wxDefaultValidator",
					"wxScrollBarNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetThumbPosition":[
			{
				"return_type":"void",
				"brief_description":"Sets the position of the scrollbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"viewStart"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetScrollbar":[
			{
				"return_type":"void",
				"brief_description":"Sets the scrollbar properties.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"position",
					"thumbSize",
					"range",
					"pageSize",
					"refresh"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"true"
				]
			}
		],
		"GetThumbSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the thumb or 'view' size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetThumbPosition":[
			{
				"return_type":"int",
				"brief_description":"Returns the current position of the scrollbar thumb.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the page size of the scrollbar.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRange":[
			{
				"return_type":"int",
				"brief_description":"Returns the length of the scrollbar.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Scrollbar creation function called by the scrollbar constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSB_HORIZONTAL",
					"wxDefaultValidator",
					"wxScrollBarNameStr"
				]
			}
		]
	},
	"wxStaticText":{
		"_implements":[
			"wxControl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creation function, for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxStaticTextNameStr"
				]
			}
		],
		"IsEllipsized":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the window styles for this control contains one of the wxST_ELLIPSIZE_START, wxST_ELLIPSIZE_MIDDLE or wxST_ELLIPSIZE_END styles.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Wrap":[
			{
				"return_type":"void",
				"brief_description":"This functions wraps the controls label so that each of its lines becomes at most width pixels wide if possible (the lines are broken at words boundaries so it might not be the case if words are too long).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxStaticText":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a text control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxStaticTextNameStr"
				]
			}
		]
	},
	"wxStatusBarPane":{
		"wxStatusBarPane":[
			{
				"return_type":"",
				"brief_description":"Constructs the pane with the given style and width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"width"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxSB_NORMAL",
					"0"
				]
			}
		],
		"GetText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text currently shown in this pane.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"int",
				"brief_description":"Returns the pane style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the pane width; it maybe negative, indicating a variable-width field.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxStaticLine":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the static line for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxLI_HORIZONTAL",
					"wxStaticLineNameStr"
				]
			}
		],
		"GetDefaultSize":[
			{
				"return_type":"int",
				"brief_description":"This static function returns the size which will be given to the smaller dimension of the static line, i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsVertical":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the line is vertical, false if horizontal.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxStaticLine":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a static line.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxLI_HORIZONTAL",
					"wxStaticLineNameStr"
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxStaticBoxSizer":{
		"_implements":[
			"wxBoxSizer"
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"Implements the calculation of a box sizer's minimal.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStaticBox":[
			{
				"return_type":"wxStaticBox*",
				"brief_description":"Returns the static box associated with the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"Implements the calculation of a box sizer's dimensions and then sets the size of its children (calling wxWindow::SetSize if the child is a window).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxStaticBoxSizer":[
			{
				"return_type":"",
				"brief_description":"This constructor uses an already existing static box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxStaticBox*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"box",
					"orient"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"This constructor creates a new static box with the given label and parent window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"orient",
					"parent",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		]
	},
	"wxStaticBox":{
		"_implements":[
			"wxControl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the static box for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxStaticBoxNameStr"
				]
			}
		],
		"wxStaticBox":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a static box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxStaticBoxNameStr"
				]
			}
		]
	},
	"wxStaticBitmap":{
		"_implements":[
			"wxControl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creation function, for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxStaticBitmapNameStr"
				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap currently used in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIcon":[
			{
				"return_type":"wxIcon",
				"brief_description":"Returns the icon currently used in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap label.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIcon":[
			{
				"return_type":"void",
				"brief_description":"Sets the label to the given icon.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxStaticBitmap":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a static bitmap control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxStaticBitmapNameStr"
				]
			}
		]
	},
	"wxAuiToolBarItem":{
		"wxAuiToolBarItem":[
			{
				"return_type":"",
				"brief_description":"Assigns the properties of the wxAuiToolBarItem \"c\" to this.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAuiToolBarItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Default Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWindow":[
			{
				"return_type":"void",
				"brief_description":"Assigns a window to the toolbar item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"w"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUserData":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"l"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSticky":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetState":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"new_state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSpacerPixels":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSizerItem":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizerItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetShortHelp":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetProportion":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"p"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLongHelp":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabel":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetKind":[
			{
				"return_type":"void",
				"brief_description":"Sets the wxAuiToolBarItem kind.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"new_kind"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets the toolbar item identifier.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"new_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHoverBitmap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHasDropDown":[
			{
				"return_type":"void",
				"brief_description":"Set whether this tool has a drop down button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDisabledBitmap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"l"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetActive":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSticky":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsActive":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasDropDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the toolbar item has an associated drop down button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the wxWindow* associated to the toolbar item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUserData":[
			{
				"return_type":"long",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetState":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSpacerPixels":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSizerItem":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetShortHelp":[
			{
				"return_type":"const wxString&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetProportion":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinSize":[
			{
				"return_type":"const wxSize&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLongHelp":[
			{
				"return_type":"const wxString&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabel":[
			{
				"return_type":"const wxString&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKind":[
			{
				"return_type":"int",
				"brief_description":"Returns the toolbar item kind.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"int",
				"brief_description":"Returns the toolbar item identifier.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHoverBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDisabledBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAlignment":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Assign":[
			{
				"return_type":"void",
				"brief_description":"Assigns the properties of the wxAuiToolBarItem \"c\" to this.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAuiToolBarItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxCheckBox":{
		"wxCheckBox":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a checkbox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxCheckBoxNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the checkbox to the given state.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Set3StateValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the checkbox to the given state.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCheckBoxState"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsChecked":[
			{
				"return_type":"bool",
				"brief_description":"This is just a maybe more readable synonym for GetValue(): just as the latter, it returns true if the checkbox is checked and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Is3rdStateAllowedForUser":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether or not the user can set the checkbox to the third state.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Is3State":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether or not the checkbox is a 3-state checkbox.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"bool",
				"brief_description":"Gets the state of a 2-state checkbox.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Get3StateValue":[
			{
				"return_type":"wxCheckBoxState",
				"brief_description":"Gets the state of a 3-state checkbox.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the checkbox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxCheckBoxNameStr"
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxWrapSizer":{
		"wxWrapSizer":[
			{
				"return_type":"",
				"brief_description":"Constructor for a wxWrapSizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"orient",
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxHORIZONTAL",
					"wxWRAPSIZER_DEFAULT_FLAGS"
				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"Implements the calculation of a box sizer's dimensions and then sets the size of its children (calling wxWindow::SetSize if the child is a window).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSpaceItem":[
			{
				"return_type":"bool",
				"brief_description":"Can be overridden in the derived classes to treat some normal items as spacers.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxSizerItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InformFirstDirection":[
			{
				"return_type":"bool",
				"brief_description":"Not used by an application.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"direction",
					"size",
					"availableOtherDir"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"Implements the calculation of a box sizer's minimal.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxBoxSizer"
		]
	},
	"wxBitmapButton":{
		"_implements":[
			"wxButton"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Button creation function for two-step creation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"bitmap",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxBU_AUTODRAW",
					"wxDefaultValidator",
					"wxButtonNameStr"
				]
			}
		],
		"wxBitmapButton":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"bitmap",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxBU_AUTODRAW",
					"wxDefaultValidator",
					"wxButtonNameStr"
				]
			}
		]
	},
	"wxTextEntry":{
		"WriteText":[
			{
				"return_type":"void",
				"brief_description":"Writes the text into the text control at the current insertion position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Undo":[
			{
				"return_type":"void",
				"brief_description":"If there is an undo facility and the last operation can be undone, undoes the last operation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the new text control value.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Selects the text starting at the first position up to (but not including) the character at the last position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMaxLength":[
			{
				"return_type":"void",
				"brief_description":"This function sets the maximum number of characters the user can enter into the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"len"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"bool",
				"brief_description":"Attempts to set the control margins.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"left",
					"top"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Attempts to set the control margins.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetInsertionPointEnd":[
			{
				"return_type":"void",
				"brief_description":"Sets the insertion point at the end of the text control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetInsertionPoint":[
			{
				"return_type":"void",
				"brief_description":"Sets the insertion point at the given position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHint":[
			{
				"return_type":"bool",
				"brief_description":"Sets a hint shown in an empty unfocused text control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"hint"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEditable":[
			{
				"return_type":"void",
				"brief_description":"Makes the text item editable or read-only, overriding the wxTE_READONLY flag.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"editable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectAll":[
			{
				"return_type":"void",
				"brief_description":"Selects all text in the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Replace":[
			{
				"return_type":"void",
				"brief_description":"Replaces the text starting at the first position up to (but not including) the character at the last position with the given text.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"from",
					"to",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Remove":[
			{
				"return_type":"void",
				"brief_description":"Removes the text starting at the first given position up to (but not including) the character at the last position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Redo":[
			{
				"return_type":"void",
				"brief_description":"If there is a redo facility and the last operation can be redone, redoes the last operation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Paste":[
			{
				"return_type":"void",
				"brief_description":"Pastes text from the clipboard to the text item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEditable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the controls contents may be edited by user (note that it always can be changed by the program).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the contents of the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStringSelection":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the text currently selected in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"void",
				"brief_description":"Gets the current selection span.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long*",
					"long*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRange":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string containing the text starting in the positions from and up to to in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetMargins":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the margins used by the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLastPosition":[
			{
				"return_type":"wxTextPos",
				"brief_description":"Returns the zero based index of the last position in the text control, which is equal to the number of characters in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInsertionPoint":[
			{
				"return_type":"long",
				"brief_description":"Returns the insertion point, or cursor, position.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHint":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the current hint string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Copy":[
			{
				"return_type":"void",
				"brief_description":"Copies the selected text to the clipboard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Clears the text in the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ChangeValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the new text control value.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanUndo":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is an undo facility available and the last operation can be undone.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanRedo":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is a redo facility available and the last operation can be redone.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanPaste":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the contents of the clipboard can be pasted into the text control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanCut":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the selection can be cut to the clipboard.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanCopy":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the selection can be copied to the clipboard.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompleteFileNames":[
			{
				"return_type":"bool",
				"brief_description":"Call this function to enable auto-completion of the text typed in a single-line text control using all valid file system paths.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoCompleteDirectories":[
			{
				"return_type":"bool",
				"brief_description":"Call this function to enable auto-completion of the text using the file system directories.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoComplete":[
			{
				"return_type":"bool",
				"brief_description":"Enable auto-completion using the provided completer object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTextCompleter*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"completer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Call this function to enable auto-completion of the text typed in a single-line text control using the given choices.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"choices"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AppendText":[
			{
				"return_type":"void",
				"brief_description":"Appends the text to the end of the text control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Cut":[
			{
				"return_type":"void",
				"brief_description":"Copies the selected text to the clipboard and removes it from the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SelectNone":[
			{
				"return_type":"void",
				"brief_description":"Deselects selected text in the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxTextCompleter":{
		"GetNext":[
			{
				"return_type":"wxString",
				"brief_description":"Called to retrieve the next completion.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Start":[
			{
				"return_type":"bool",
				"brief_description":"Function called to start iteration over the completions for the given prefix.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prefix"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxTextCtrl":{
		"_implements":[
			"wxTextEntry",
			"wxControl"
		],
		"wxTextCtrl":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a text control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxTextCtrlNameStr"
				]
			}
		],
		"XYToPosition":[
			{
				"return_type":"long",
				"brief_description":"Converts the given zero based column and line number to a position.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ShowPosition":[
			{
				"return_type":"void",
				"brief_description":"Makes the line containing the given position visible.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"bool",
				"brief_description":"Changes the style of the given range.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"const wxTextAttr&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"start",
					"end",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetModified":[
			{
				"return_type":"void",
				"brief_description":"Marks the control as being modified by the user or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"modified"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultStyle":[
			{
				"return_type":"bool",
				"brief_description":"Changes the default style to use for the new text which is going to be added to the control using WriteText() or AppendText().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTextAttr&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SaveFile":[
			{
				"return_type":"bool",
				"brief_description":"Saves the contents of the control in a text file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"fileType"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"wxTEXT_TYPE_ANY"
				]
			}
		],
		"PositionToXY":[
			{
				"return_type":"bool",
				"brief_description":"Converts given position to a zero-based column, line number pair.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long*",
					"long*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"PositionToCoords":[
			{
				"return_type":"wxPoint",
				"brief_description":"Converts given text position to client coordinates in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxmsw",
					"wxgtk"
				]
			}
		],
		"MarkDirty":[
			{
				"return_type":"void",
				"brief_description":"Mark text as modified (dirty).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads and displays the named file, if it exists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"fileType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxTEXT_TYPE_ANY"
				]
			}
		],
		"IsSingleLine":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this is a single line edit control and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsMultiLine":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this is a multi line edit control and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsModified":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the text has been modified by user.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNumberOfLines":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of lines in the text control buffer.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLineText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the contents of a given line in the text control, not including any trailing newline character(s).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lineNo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLineLength":[
			{
				"return_type":"int",
				"brief_description":"Gets the length of the specified line, not including any trailing newline character(s).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lineNo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EmulateKeyPress":[
			{
				"return_type":"bool",
				"brief_description":"This function inserts into the control the character which would have been inserted if the given key event had occurred in the text control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxKeyEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DiscardEdits":[
			{
				"return_type":"void",
				"brief_description":"Resets the internal modified flag as if the current changes had been saved.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the text control for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxTextCtrlNameStr"
				]
			}
		],
		"GetDefaultStyle":[
			{
				"return_type":"const wxTextAttr&",
				"brief_description":"Returns the style currently used for the new text.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"bool",
				"brief_description":"Returns the style at this position in the text control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxTextAttr&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"position",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnDropFiles":[
			{
				"return_type":"void",
				"brief_description":"This event handler function implements default drag and drop behaviour, which is to load the first dropped file into the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDropFilesEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxTextAttr":{
		"wxTextAttr":[
			{
				"return_type":"",
				"brief_description":"Constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTextAttr&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"attr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&",
					"const wxFont&",
					"wxTextAttrAlignment"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"colText",
					"colBack",
					"font",
					"alignment"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullColour",
					"wxNullFont",
					"wxTEXT_ALIGNMENT_DEFAULT"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the attributes for the given font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"font",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxTEXT_ATTR_FONT &~wxTEXT_ATTR_FONT_PIXEL_SIZE"
				]
			}
		],
		"SetURL":[
			{
				"return_type":"void",
				"brief_description":"Sets the URL for the content.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"url"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextEffects":[
			{
				"return_type":"void",
				"brief_description":"Sets the text effects, a bit list of styles.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"effects"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextEffectFlags":[
			{
				"return_type":"void",
				"brief_description":"Sets the text effect bits of interest.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the text foreground colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colText"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRightIndent":[
			{
				"return_type":"void",
				"brief_description":"Sets the right indent in tenths of a millimetre.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParagraphStyleName":[
			{
				"return_type":"void",
				"brief_description":"Sets the name of the paragraph style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParagraphSpacingBefore":[
			{
				"return_type":"void",
				"brief_description":"Sets the spacing before a paragraph, in tenths of a millimetre.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"spacing"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParagraphSpacingAfter":[
			{
				"return_type":"void",
				"brief_description":"Sets the spacing after a paragraph, in tenths of a millimetre.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"spacing"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOutlineLevel":[
			{
				"return_type":"void",
				"brief_description":"Specifies the outline level.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"level"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetListStyleName":[
			{
				"return_type":"void",
				"brief_description":"Sets the list style name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLineSpacing":[
			{
				"return_type":"void",
				"brief_description":"Sets the line spacing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"spacing"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLeftIndent":[
			{
				"return_type":"void",
				"brief_description":"Sets the left indent and left subindent in tenths of a millimetre.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"indent",
					"subIndent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"SetFontWeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the font weight.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontWeight"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fontWeight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontUnderlined":[
			{
				"return_type":"void",
				"brief_description":"Sets the font underlining.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"underlined"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontStyle":[
			{
				"return_type":"void",
				"brief_description":"Sets the font style (normal, italic or slanted).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontStyle"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fontStyle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the font size in points.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pointSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Apply":[
			{
				"return_type":"bool",
				"brief_description":"Applies the attributes in style to the original object, but not those attributes from style that are the same as those in compareWith (if passed).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTextAttr&",
					"const wxTextAttr*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"compareWith"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"GetAlignment":[
			{
				"return_type":"wxTextAttrAlignment",
				"brief_description":"Returns the alignment flags.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBackgroundColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the background colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBulletFont":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns a string containing the name of the font associated with the bullet symbol.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBulletName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the standard bullet name, applicable if the bullet style is wxTEXT_ATTR_BULLET_STYLE_STANDARD.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBulletNumber":[
			{
				"return_type":"int",
				"brief_description":"Returns the bullet number.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBulletStyle":[
			{
				"return_type":"int",
				"brief_description":"Returns the bullet style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBulletText":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the bullet text, which could be a symbol, or (for example) cached outline text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharacterStyleName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the name of the character style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"long",
				"brief_description":"Returns flags indicating which attributes are applicable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Creates and returns a font specified by the font attributes in the wxTextAttr object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontAttributes":[
			{
				"return_type":"bool",
				"brief_description":"Gets the font attributes from the given font, using only the attributes specified by flags.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"font",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxTEXT_ATTR_FONT"
				]
			}
		],
		"GetFontEncoding":[
			{
				"return_type":"wxFontEncoding",
				"brief_description":"Returns the font encoding.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontFaceName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the font face name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontFamily":[
			{
				"return_type":"wxFontFamily",
				"brief_description":"Returns the font family.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the font size in points.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontStyle":[
			{
				"return_type":"wxFontStyle",
				"brief_description":"Returns the font style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontUnderlined":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the font is underlined.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontWeight":[
			{
				"return_type":"wxFontWeight",
				"brief_description":"Returns the font weight.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLeftIndent":[
			{
				"return_type":"long",
				"brief_description":"Returns the left indent in tenths of a millimetre.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLeftSubIndent":[
			{
				"return_type":"long",
				"brief_description":"Returns the left sub-indent in tenths of a millimetre.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLineSpacing":[
			{
				"return_type":"int",
				"brief_description":"Returns the line spacing value, one of wxTextAttrLineSpacing values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetListStyleName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the name of the list style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOutlineLevel":[
			{
				"return_type":"int",
				"brief_description":"Returns the outline level.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParagraphSpacingAfter":[
			{
				"return_type":"int",
				"brief_description":"Returns the space in tenths of a millimeter after the paragraph.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParagraphSpacingBefore":[
			{
				"return_type":"int",
				"brief_description":"Returns the space in tenths of a millimeter before the paragraph.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParagraphStyleName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the name of the paragraph style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRightIndent":[
			{
				"return_type":"long",
				"brief_description":"Returns the right indent in tenths of a millimeter.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the text foreground colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextEffectFlags":[
			{
				"return_type":"int",
				"brief_description":"Returns the text effect bits of interest.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextEffects":[
			{
				"return_type":"int",
				"brief_description":"Returns the text effects, a bit list of styles.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetURL":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the URL for the content.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasAlignment":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies alignment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBackgroundColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a background colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBulletName":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a standard bullet name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBulletNumber":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a bullet number.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBulletStyle":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a bullet style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBulletText":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies bullet text (usually specifying a symbol).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasCharacterStyleName":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a character style name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFlag":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the flag is present in the attribute object's flag bitlist.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasFont":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies any font attributes.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFontEncoding":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies an encoding.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFontFaceName":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a font face name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFontFamily":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a font family.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFontItalic":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies italic style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFontSize":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a font point or pixel size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFontUnderlined":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies either underlining or no underlining.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFontWeight":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies font weight (bold, light or normal).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasLeftIndent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a left indent.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasLineSpacing":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies line spacing.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasListStyleName":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a list style name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasOutlineLevel":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies an outline level.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasPageBreak":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a page break before this paragraph.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasParagraphSpacingAfter":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies spacing after a paragraph.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasParagraphSpacingBefore":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies spacing before a paragraph.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasParagraphStyleName":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a paragraph style name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasRightIndent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a right indent.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasTabs":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies tab stops.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasTextColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a text foreground colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasTextEffects":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies text effects.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasURL":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the attribute object specifies a URL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsCharacterStyle":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the object represents a character style, that is, the flags specify a font or a text background or foreground colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDefault":[
			{
				"return_type":"bool",
				"brief_description":"Returns false if we have any attributes set, true otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsParagraphStyle":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the object represents a paragraph style, that is, the flags specify alignment, indentation, tabs, paragraph spacing, or bullet style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Merge":[
			{
				"return_type":"void",
				"brief_description":"Copies all defined\/valid properties from overlay to current object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxTextAttr&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"overlay"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxTextAttr",
				"brief_description":"Creates a new wxTextAttr which is a merge of base and overlay.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxTextAttr&",
					"const wxTextAttr&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"base",
					"overlay"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the paragraph alignment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTextAttrAlignment"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alignment"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the background colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colBack"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBulletFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the name of the font associated with the bullet symbol.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBulletName":[
			{
				"return_type":"void",
				"brief_description":"Sets the standard bullet name, applicable if the bullet style is wxTEXT_ATTR_BULLET_STYLE_STANDARD.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBulletNumber":[
			{
				"return_type":"void",
				"brief_description":"Sets the bullet number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBulletStyle":[
			{
				"return_type":"void",
				"brief_description":"Sets the bullet style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBulletText":[
			{
				"return_type":"void",
				"brief_description":"Sets the bullet text, which could be a symbol, or (for example) cached outline text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCharacterStyleName":[
			{
				"return_type":"void",
				"brief_description":"Sets the character style name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Sets the flags determining which styles are being specified.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontEncoding":[
			{
				"return_type":"void",
				"brief_description":"Sets the font encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontFaceName":[
			{
				"return_type":"void",
				"brief_description":"Sets the font face name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"faceName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontFamily":[
			{
				"return_type":"void",
				"brief_description":"Sets the font family.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontFamily"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"family"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPageBreak":[
			{
				"return_type":"void",
				"brief_description":"Specifies a page break before this paragraph.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageBreak"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		]
	},
	"wxTextEntryDialog":{
		"_implements":[
			"wxDialog"
		],
		"GetValue":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text that the user has entered if the user has pressed OK, or the original value if the user has pressed Cancel.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the default text value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning wxID_OK if the user pressed OK, and wxID_CANCEL otherwise.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxTextEntryDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"caption",
					"value",
					"style",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxGetTextFromUserPromptStr",
					"wxEmptyString",
					"wxTextEntryDialogStyle",
					"wxDefaultPosition"
				]
			}
		]
	},
	"wxComboBox":{
		"_implements":[
			"wxControl",
			"wxTextEntry",
			"wxItemContainer"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the combobox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"const wxString",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					true,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"n",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"(const wxString *) NULL",
					"0",
					"wxDefaultValidator",
					"wxComboBoxNameStr"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates the combobox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxComboBoxNameStr"
				]
			}
		],
		"Dismiss":[
			{
				"return_type":"void",
				"brief_description":"Hides the list box portion of the combo box.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindString":[
			{
				"return_type":"int",
				"brief_description":"Finds an item whose label matches the given string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"string",
					"caseSensitive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of items in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the item being selected right now.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInsertionPoint":[
			{
				"return_type":"long",
				"brief_description":"Same as wxTextEntry::GetInsertionPoint().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the selected item or wxNOT_FOUND if no item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"void",
				"brief_description":"Gets the current selection span.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long*",
					"long*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of the item with the given index.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetStringSelection":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the text currently selected in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsListEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the list of combobox choices is empty.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsTextEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the text of the combobox is empty.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Popup":[
			{
				"return_type":"void",
				"brief_description":"Shows the list box portion of the combo box.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection to the given item n or removes the selection entirely if n == wxNOT_FOUND.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Same as wxTextEntry::SetSelection().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the text for the combobox text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxComboBox":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a combobox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxComboBoxNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetString":[
			{
				"return_type":"void",
				"brief_description":"Changes the text of the specified combobox item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxItemContainer":{
		"Append":[
			{
				"return_type":"int",
				"brief_description":"Appends item into the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"int",
				"brief_description":"Appends several items at once into the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"items"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Delete":[
			{
				"return_type":"void",
				"brief_description":"Deletes an item from the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Insert":[
			{
				"return_type":"int",
				"brief_description":"Inserts item into the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"int",
				"brief_description":"Inserts several items at once into the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"items",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxItemContainerImmutable"
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Removes all items from the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Set":[
			{
				"return_type":"void",
				"brief_description":"Replaces the current control contents with the given items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"items"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxItemContainerImmutable":{
		"FindString":[
			{
				"return_type":"int",
				"brief_description":"Finds an item whose label matches the given string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"string",
					"caseSensitive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of the item with the given index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of items in the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the selected item or wxNOT_FOUND if no item is selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStringSelection":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of the selected item or an empty string if no item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStrings":[
			{
				"return_type":"wxArrayString",
				"brief_description":"Returns the array of the labels of all items in the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection to the given item n or removes the selection entirely if n == wxNOT_FOUND.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetString":[
			{
				"return_type":"void",
				"brief_description":"Sets the label for the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetStringSelection":[
			{
				"return_type":"bool",
				"brief_description":"Selects the item with the specified string in the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxBitmapComboBox":{
		"_implements":[
			"wxComboBox"
		],
		"Append":[
			{
				"return_type":"int",
				"brief_description":"Adds the item to the end of the combo box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullBitmap"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the combobox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxBitmapComboBoxNameStr"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates the combobox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"const wxString",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					true,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"n",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxBitmapComboBoxNameStr"
				]
			}
		],
		"GetBitmapSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of the bitmaps used in the combo box.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap of the item with the given index.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Insert":[
			{
				"return_type":"int",
				"brief_description":"Inserts the item into the list before pos.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxBitmap&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"bitmap",
					"pos"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetItemBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap for the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"bitmap"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxBitmapComboBox":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a combobox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					"wxDefaultValidator",
					"wxBitmapComboBoxNameStr"
				]
			}
		]
	},
	"wxAuiToolBarEvent":{
		"_implements":[
			"wxNotifyEvent"
		],
		"GetClickPoint":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the point where the user clicked with the mouse.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the wxAuiToolBarItem rectangle bounding the mouse click point.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolId":[
			{
				"return_type":"int",
				"brief_description":"Returns the wxAuiToolBarItem identifier.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDropDownClicked":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the drop down menu has been clicked.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxAuiToolBar":{
		"wxAuiToolBar":[
			{
				"return_type":"",
				"brief_description":"Default constructor, use Create() later.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creating and initializing the object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"position",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxAUI_TB_DEFAULT_STYLE"
				]
			}
		],
		"AddControl":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxControl*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"control",
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"AddLabel":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"label",
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString",
					"-1"
				]
			}
		],
		"AddSeparator":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddSpacer":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixels"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddStretchSpacer":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"proportion"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearTools":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteByIndex":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteTool":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableTool":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"state"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ToggleTool":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"state"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetWindowStyleFlag":[
			{
				"return_type":"void",
				"brief_description":"Sets the style of the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolTextOrientation":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolSticky":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"sticky"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolShortHelp":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"help_string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolSeparation":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"separation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolProportion":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"proportion"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolPacking":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"packing"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolLongHelp":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"help_string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolLabel":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolDropDown":[
			{
				"return_type":"void",
				"brief_description":"Set whether the specified toolbar item has a drop down button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"dropdown"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolBorderPadding":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"padding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolBitmapSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolBitmap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"bitmap"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetOverflowVisible":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"left",
					"right",
					"top",
					"bottom"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetGripperVisible":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visible"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"bool",
				"brief_description":"Sets the font for this window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Realize":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPaneValid":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxAuiPaneInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pane"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWindowStyleFlag":[
			{
				"return_type":"long",
				"brief_description":"Gets the window style that was passed to the constructor or Create() method.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolToggled":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolTextOrientation":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolSticky":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolShortHelp":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolSeparation":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindControl":[
			{
				"return_type":"wxControl*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindTool":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindToolByIndex":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindToolByPosition":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetArtProvider":[
			{
				"return_type":"wxAuiToolBarArt*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGripperVisible":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHintSize":[
			{
				"return_type":"wxSize",
				"brief_description":"get size of hint rectangle for a particular dock location",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dock_direction"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetOverflowVisible":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolBarFits":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolBitmapSize":[
			{
				"return_type":"wxSize",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolBorderPadding":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolCount":[
			{
				"return_type":"size_t",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolDropDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the specified toolbar item has an associated drop down button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolEnabled":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolFits":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolFitsByIndex":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolIndex":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolLabel":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolLongHelp":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolPacking":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolPos":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolProportion":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolRect":[
			{
				"return_type":"wxRect",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddTool":[
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxString&",
					"wxItemKind"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"label",
					"bitmap",
					"short_help_string",
					"kind"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString",
					"wxITEM_NORMAL"
				]
			},
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&",
					"wxItemKind",
					"const wxString&",
					"const wxString&",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"label",
					"bitmap",
					"disabled_bitmap",
					"kind",
					"short_help_string",
					"long_help_string",
					"client_data"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"wxAuiToolBarItem*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&",
					"const wxBitmap&",
					"bool",
					"wxObject*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"bitmap",
					"disabled_bitmap",
					"toggle",
					"client_data",
					"short_help_string",
					"long_help_string"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false",
					"NULL",
					"wxEmptyString",
					"wxEmptyString"
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxBannerWindow":{
		"wxBannerWindow":[
			{
				"return_type":"",
				"brief_description":"Default constructor, use Create() later.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Convenient constructor that should be used in the majority of cases.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDirection"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxLEFT"
				]
			},
			{
				"return_type":"",
				"brief_description":"Full constructor provided for consistency with the other classes only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"wxDirection",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid",
					"dir",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxLEFT",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxBannerWindowNameStr"
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Set the text to display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"title",
					"message"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxWindow"
		],
		"SetGradient":[
			{
				"return_type":"void",
				"brief_description":"Set the colours between which the gradient runs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"start",
					"end"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Provide the bitmap to use as background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Really create the banner window for the objects created using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"wxDirection",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid",
					"dir",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxLEFT",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxBannerWindowNameStr"
				]
			}
		]
	},
	"wxChoice":{
		"_implements":[
			"wxControlWithItems"
		],
		"wxChoice":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a choice.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxChoiceNameStr"
				]
			}
		],
		"SetString":[
			{
				"return_type":"void",
				"brief_description":"Sets the label for the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection to the given item n or removes the selection entirely if n == wxNOT_FOUND.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColumns":[
			{
				"return_type":"void",
				"brief_description":"Sets the number of columns in this choice item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"IsSorted":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of the item with the given index.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the selected item or wxNOT_FOUND if no item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentSelection":[
			{
				"return_type":"int",
				"brief_description":"Unlike wxControlWithItems::GetSelection() which only returns the accepted selection value, i.e.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of items in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumns":[
			{
				"return_type":"int",
				"brief_description":"Gets the number of columns in this choice item.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindString":[
			{
				"return_type":"int",
				"brief_description":"Finds an item whose label matches the given string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"string",
					"caseSensitive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the choice for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxChoiceNameStr"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates the choice for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"const wxString",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					true,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"n",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"NULL",
					"0",
					"wxDefaultValidator",
					"wxChoiceNameStr"
				]
			}
		]
	},
	"wxListEvent":{
		"_implements":[
			"wxNotifyEvent"
		],
		"GetCacheFrom":[
			{
				"return_type":"long",
				"brief_description":"For EVT_LIST_CACHE_HINT event only: return the first item which the list control advises us to cache.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCacheTo":[
			{
				"return_type":"long",
				"brief_description":"For EVT_LIST_CACHE_HINT event only: return the last item (inclusive) which the list control advises us to cache.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumn":[
			{
				"return_type":"int",
				"brief_description":"The column position: it is only used with COL events.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImage":[
			{
				"return_type":"int",
				"brief_description":"The image.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndex":[
			{
				"return_type":"long",
				"brief_description":"The item index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItem":[
			{
				"return_type":"const wxListItem&",
				"brief_description":"An item object, used by some events.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKeyCode":[
			{
				"return_type":"int",
				"brief_description":"Key code if the event is a keypress event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabel":[
			{
				"return_type":"const wxString&",
				"brief_description":"The (new) item label for EVT_LIST_END_LABEL_EDIT event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMask":[
			{
				"return_type":"long",
				"brief_description":"The mask.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPoint":[
			{
				"return_type":"wxPoint",
				"brief_description":"The position of the mouse pointer if the event is a drag event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"const wxString&",
				"brief_description":"The text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEditCancelled":[
			{
				"return_type":"bool",
				"brief_description":"This method only makes sense for EVT_LIST_END_LABEL_EDIT message and returns true if it the label editing has been cancelled by the user (GetLabel() returns an empty string in this case but it doesn't allow the application to distinguish between really cancelling the edit and the admittedly rare case when the user wants to rename it to an empty string).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxListEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		]
	},
	"wxListCtrl":{
		"wxListCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a list control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxLC_ICON",
					"wxDefaultValidator",
					"wxListCtrlNameStr"
				]
			}
		],
		"SetWindowStyleFlag":[
			{
				"return_type":"void",
				"brief_description":"Sets the whole window style, deleting all items.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the text colour of the list control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSingleStyle":[
			{
				"return_type":"void",
				"brief_description":"Adds or removes a single window style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"add"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetItemTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour for this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemText":[
			{
				"return_type":"void",
				"brief_description":"Sets the item text for this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemState":[
			{
				"return_type":"bool",
				"brief_description":"Sets the item state.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"state",
					"stateMask"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetItemPosition":[
			{
				"return_type":"bool",
				"brief_description":"Sets the position of the item, in icon or small icon view.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the item's font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxFont&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"font"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemData":[
			{
				"return_type":"bool",
				"brief_description":"Associates application-defined data with this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemCount":[
			{
				"return_type":"void",
				"brief_description":"This method can only be used with virtual list controls.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"count"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemColumnImage":[
			{
				"return_type":"bool",
				"brief_description":"Sets the image associated with the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"column",
					"image"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetItemBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the background colour for this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItem":[
			{
				"return_type":"long",
				"brief_description":"Sets an item string field at a particular column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"int",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"column",
					"label",
					"imageId"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"-1"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Sets the data of an item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxListItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the image list associated with the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"imageList",
					"which"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColumnWidth":[
			{
				"return_type":"bool",
				"brief_description":"Sets the column width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"width"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColumn":[
			{
				"return_type":"bool",
				"brief_description":"Sets information about this column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxListItem&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"bool",
				"brief_description":"Sets the background colour.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ScrollList":[
			{
				"return_type":"bool",
				"brief_description":"Scrolls the list control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dx",
					"dy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RefreshItems":[
			{
				"return_type":"void",
				"brief_description":"Redraws the items between itemFrom and itemTo.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"itemFrom",
					"itemTo"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnGetItemText":[
			{
				"return_type":"wxString",
				"brief_description":"This function must be overridden in the derived class for a control with wxLC_VIRTUAL style.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"column"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RefreshItem":[
			{
				"return_type":"void",
				"brief_description":"Redraws the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnGetItemImage":[
			{
				"return_type":"int",
				"brief_description":"This function must be overridden in the derived class for a control with wxLC_VIRTUAL style having an \"image list\" (see SetImageList(); if the control doesn't have an image list, it is not necessary to override it).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnGetItemColumnImage":[
			{
				"return_type":"int",
				"brief_description":"Override this function in the derived class for a control with wxLC_VIRTUAL and wxLC_REPORT styles in order to specify the image index for the given line and column.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"column"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnGetItemAttr":[
			{
				"return_type":"wxListItemAttr*",
				"brief_description":"This function may be overridden in the derived class for a control with wxLC_VIRTUAL style.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertItem":[
			{
				"return_type":"long",
				"brief_description":"Inserts an item, returning the index of the new item if successful, -1 otherwise.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxListItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"long",
				"brief_description":"Insert an string item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"long",
				"brief_description":"Insert an image item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"imageIndex"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"long",
				"brief_description":"Insert an image\/string item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"label",
					"imageIndex"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetViewRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the rectangle taken by all items in the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTopItem":[
			{
				"return_type":"long",
				"brief_description":"Gets the index of the topmost visible item when in list or report view.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Gets the text colour of the list control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSubItemRect":[
			{
				"return_type":"bool",
				"brief_description":"Returns the rectangle representing the size and position, in physical coordinates, of the given subitem, i.e.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"subItem",
					"rect",
					"code"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxLIST_RECT_BOUNDS"
				]
			}
		],
		"GetSelectedItemCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of selected items in the list control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Arrange":[
			{
				"return_type":"bool",
				"brief_description":"Arranges the items in icon or small icon view.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxLIST_ALIGN_DEFAULT"
				]
			}
		],
		"AssignImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the image list associated with the control and takes ownership of it (i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"imageList",
					"which"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ClearAll":[
			{
				"return_type":"void",
				"brief_description":"Deletes all items and all columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the list control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxLC_ICON",
					"wxDefaultValidator",
					"wxListCtrlNameStr"
				]
			}
		],
		"DeleteAllItems":[
			{
				"return_type":"bool",
				"brief_description":"Deletes all items in the list control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteColumn":[
			{
				"return_type":"bool",
				"brief_description":"Deletes a column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteItem":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EditLabel":[
			{
				"return_type":"wxTextCtrl*",
				"brief_description":"Starts editing the label of the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxClassInfo*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"textControlClass"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxCLASSINFO(wxTextCtrl)"
				]
			}
		],
		"EnsureVisible":[
			{
				"return_type":"bool",
				"brief_description":"Ensures this item is visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindItem":[
			{
				"return_type":"long",
				"brief_description":"Find an item whose label matches this string, starting from start or the beginning if start is -1.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"start",
					"str",
					"partial"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"long",
				"brief_description":"Find an item whose data matches this data, starting from start or the beginning if 'start' is -1.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxUIntPtr"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"start",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"long",
				"brief_description":"Find an item nearest this position in the specified direction, starting from start or the beginning if start is -1.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxPoint&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"start",
					"pt",
					"direction"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetColumn":[
			{
				"return_type":"bool",
				"brief_description":"Gets information about this column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxListItem&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetColumnCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of columns.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumnWidth":[
			{
				"return_type":"int",
				"brief_description":"Gets the column width (report view only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCountPerPage":[
			{
				"return_type":"int",
				"brief_description":"Gets the number of items that can fit vertically in the visible area of the list control (list or report view) or the total number of items in the list control (icon or small icon view).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEditControl":[
			{
				"return_type":"wxTextCtrl*",
				"brief_description":"Returns the edit control being currently used to edit a label.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImageList":[
			{
				"return_type":"wxImageList*",
				"brief_description":"Returns the specified image list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"which"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItem":[
			{
				"return_type":"bool",
				"brief_description":"Gets information about the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxListItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour for this item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of items in the list control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the item's font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemPosition":[
			{
				"return_type":"bool",
				"brief_description":"Returns the position of the item, in icon or small icon view.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetItemRect":[
			{
				"return_type":"bool",
				"brief_description":"Returns the rectangle representing the item's size and position, in physical coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"rect",
					"code"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxLIST_RECT_BOUNDS"
				]
			}
		],
		"GetItemSpacing":[
			{
				"return_type":"wxSize",
				"brief_description":"Retrieves the spacing between icons in pixels: horizontal spacing is returned as x component of the wxSize object and the vertical spacing as its y component.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemState":[
			{
				"return_type":"int",
				"brief_description":"Gets the item state.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"stateMask"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetItemText":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the item text for this item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"GetItemTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour for this item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetNextItem":[
			{
				"return_type":"long",
				"brief_description":"Searches for an item with the given geometry or state, starting from item but excluding the item itself.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"geometry",
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxLIST_NEXT_ALL",
					"wxLIST_STATE_DONTCARE"
				]
			}
		],
		"_implements":[
			"wxControl"
		],
		"InsertColumn":[
			{
				"return_type":"long",
				"brief_description":"For report view mode (only), inserts a column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxListItem&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"info"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"long",
				"brief_description":"For report view mode (only), inserts a column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxString&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"col",
					"heading",
					"format",
					"width"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxLIST_FORMAT_LEFT",
					"wxLIST_AUTOSIZE"
				]
			}
		]
	},
	"wxListItemAttr":{
		"GetBackgroundColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the currently set background color.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxListItemAttr":[
			{
				"return_type":"",
				"brief_description":"Default Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a wxListItemAttr with the specified foreground and background colors and font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&",
					"const wxFont&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"colText",
					"colBack",
					"font"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets a new text color.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Sets a new font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets a new background color.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasTextColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the currently set text color is valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFont":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the currently set font is valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBackgroundColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the currently set background color is valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the currently set text color.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"const wxFont&",
				"brief_description":"Returns the currently set font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxListItem":{
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Resets the item state to the default.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxListItem":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWidth":[
			{
				"return_type":"void",
				"brief_description":"Meaningful only for column headers in report mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the text colour for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colText"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Sets the text label for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStateMask":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmask that is used to determine which of the state flags are to be set.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stateMask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetState":[
			{
				"return_type":"void",
				"brief_description":"Sets the item state flags (note that the valid state flags are influenced by the value of the state mask, see wxListItem::SetStateMask).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMask":[
			{
				"return_type":"void",
				"brief_description":"Sets the mask of valid fields.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetImage":[
			{
				"return_type":"void",
				"brief_description":"Sets the zero-based index of the image associated with the item into the image list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"image"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets the zero-based item position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetData":[
			{
				"return_type":"void",
				"brief_description":"Sets client data for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColumn":[
			{
				"return_type":"void",
				"brief_description":"Sets the zero-based column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the background colour for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colBack"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlign":[
			{
				"return_type":"void",
				"brief_description":"Sets the alignment for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxListColumnFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"align"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Meaningful only for column headers in report mode.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the text colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the label\/header text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetState":[
			{
				"return_type":"long",
				"brief_description":"Returns a bit field representing the state of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMask":[
			{
				"return_type":"long",
				"brief_description":"Returns a bit mask indicating which fields of the structure are valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImage":[
			{
				"return_type":"int",
				"brief_description":"Returns the zero-based index of the image associated with the item into the image list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"long",
				"brief_description":"Returns the zero-based item position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAlign":[
			{
				"return_type":"wxListColumnFormat",
				"brief_description":"Returns the alignment for this item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the background colour for this item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumn":[
			{
				"return_type":"int",
				"brief_description":"Returns the zero-based column; meaningful only in report mode.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the font used to display the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxListbook":{
		"wxListbook":[
			{
				"return_type":"",
				"brief_description":"Constructs a listbook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetListView":[
			{
				"return_type":"wxListView*",
				"brief_description":"Returns the wxListView associated with the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxBookCtrlBase"
		]
	},
	"wxChildFocusEvent":{
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the direct child which receives the focus, or a (grand-)parent of the control receiving the focus.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxChildFocusEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxChoicebook":{
		"_implements":[
			"wxBookCtrlBase"
		],
		"GetChoiceCtrl":[
			{
				"return_type":"wxChoice*",
				"brief_description":"Returns the wxChoice associated with the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxChoicebook":[
			{
				"return_type":"",
				"brief_description":"Constructs a choicebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a choicebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxEmptyString"
				]
			}
		]
	},
	"wxRadioBox":{
		"_implements":[
			"wxControl",
			"wxItemContainerImmutable"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the radiobox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"const wxString",
					"int",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					true,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"n",
					"choices",
					"majorDimension",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"NULL",
					"0",
					"wxRA_SPECIFY_COLS",
					"wxDefaultValidator",
					"wxRadioBoxNameStr"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates the radiobox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"int",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"choices",
					"majorDimension",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxRA_SPECIFY_COLS",
					"wxDefaultValidator",
					"wxRadioBoxNameStr"
				]
			}
		],
		"Enable":[
			{
				"return_type":"bool",
				"brief_description":"Enables or disables an individual button in the radiobox.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"FindString":[
			{
				"return_type":"int",
				"brief_description":"Finds a button matching the given string, returning the position if found, or wxNOT_FOUND if not found.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"string",
					"bCase"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"GetColumnCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of columns in the radiobox.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of items in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemFromPoint":[
			{
				"return_type":"int",
				"brief_description":"Returns a radio box item under the point, a zero-based item index, or wxNOT_FOUND if no item is under the point.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemHelpText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the helptext associated with the specified item if any or wxEmptyString.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemToolTip":[
			{
				"return_type":"wxToolTip*",
				"brief_description":"Returns the tooltip associated with the specified item if any or NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRowCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of rows in the radiobox.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the selected item or wxNOT_FOUND if no item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the label of the item with the given index.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsItemEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is enabled or false if it was disabled using Enable(n, false).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsItemShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item is currently shown or false if it was hidden using Show(n, false).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemHelpText":[
			{
				"return_type":"void",
				"brief_description":"Sets the helptext for an item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"helptext"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemToolTip":[
			{
				"return_type":"void",
				"brief_description":"Sets the tooltip text for the specified item in the radio group.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection to the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetString":[
			{
				"return_type":"void",
				"brief_description":"Sets the label for the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Show":[
			{
				"return_type":"bool",
				"brief_description":"Shows or hides individual buttons.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"wxRadioBox":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a radiobox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"int",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"choices",
					"majorDimension",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxRA_SPECIFY_COLS",
					"wxDefaultValidator",
					"wxRadioBoxNameStr"
				]
			}
		]
	},
	"wxRadioButton":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the choice for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxRadioButtonNameStr"
				]
			}
		],
		"GetValue":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the radio button is checked, false otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the radio button to checked or unchecked status.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxRadioButton":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a radio button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxRadioButtonNameStr"
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxRearrangeCtrl":{
		"wxRearrangeCtrl":[
			{
				"return_type":"",
				"brief_description":"Constructor really creating the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayInt&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"order",
					"items",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxRearrangeListNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetList":[
			{
				"return_type":"wxRearrangeList*",
				"brief_description":"Return the listbox which is the main part of this control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Effectively creates the window for an object created using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayInt&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"order",
					"items",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxRearrangeListNameStr"
				]
			}
		]
	},
	"wxRearrangeDialog":{
		"AddExtraControls":[
			{
				"return_type":"void",
				"brief_description":"Customize the dialog by adding extra controls to it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Effectively creates the dialog for an object created using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"const wxArrayInt&",
					"const wxArrayString&",
					"const wxPoint&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"title",
					"order",
					"items",
					"pos",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxRearrangeDialogNameStr"
				]
			}
		],
		"GetList":[
			{
				"return_type":"wxRearrangeList*",
				"brief_description":"Return the list control used by the dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxRearrangeDialog":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creating the dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"const wxArrayInt&",
					"const wxArrayString&",
					"const wxPoint&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"title",
					"order",
					"items",
					"pos",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxRearrangeDialogNameStr"
				]
			}
		]
	},
	"wxRearrangeList":{
		"_implements":[
			"wxCheckListBox"
		],
		"CanMoveCurrentDown":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the currently selected item can be moved down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanMoveCurrentUp":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the currently selected item can be moved up.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Effectively creates the window for an object created using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayInt&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"order",
					"items",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxRearrangeListNameStr"
				]
			}
		],
		"MoveCurrentDown":[
			{
				"return_type":"bool",
				"brief_description":"Move the currently selected item one position below.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MoveCurrentUp":[
			{
				"return_type":"bool",
				"brief_description":"Move the currently selected item one position above.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxRearrangeList":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor really creating the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayInt&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"order",
					"items",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					"0",
					"wxDefaultValidator",
					"wxRearrangeListNameStr"
				]
			}
		]
	},
	"wxSlider":{
		"_implements":[
			"wxControl"
		],
		"wxSlider":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a slider.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"int",
					"int",
					"int",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"minValue",
					"maxValue",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSL_HORIZONTAL",
					"wxDefaultValidator",
					"wxSliderNameStr"
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the slider position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTickFreq":[
			{
				"return_type":"void",
				"brief_description":"Sets the tick mark frequency and position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"SetTick":[
			{
				"return_type":"void",
				"brief_description":"Sets a tick position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tickPos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"SetThumbLength":[
			{
				"return_type":"void",
				"brief_description":"Sets the slider thumb length.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"len"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"startPos",
					"endPos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum and maximum slider values.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"minValue",
					"maxValue"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPageSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the page size for the slider.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLineSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the line size for the slider.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lineSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetValue":[
			{
				"return_type":"int",
				"brief_description":"Gets the current slider value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTickFreq":[
			{
				"return_type":"int",
				"brief_description":"Returns the tick frequency.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"GetThumbLength":[
			{
				"return_type":"int",
				"brief_description":"Returns the thumb length.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"GetSelStart":[
			{
				"return_type":"int",
				"brief_description":"Returns the selection start point.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"GetSelEnd":[
			{
				"return_type":"int",
				"brief_description":"Returns the selection end point.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"ClearSel":[
			{
				"return_type":"void",
				"brief_description":"Clears the selection, for a slider with the wxSL_SELRANGE style.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"ClearTicks":[
			{
				"return_type":"void",
				"brief_description":"Clears the ticks.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Used for two-step slider construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"int",
					"int",
					"int",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"minValue",
					"maxValue",
					"point",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSL_HORIZONTAL",
					"wxDefaultValidator",
					"wxSliderNameStr"
				]
			}
		],
		"GetLineSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the line size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMax":[
			{
				"return_type":"int",
				"brief_description":"Gets the maximum slider value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMin":[
			{
				"return_type":"int",
				"brief_description":"Gets the minimum slider value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the page size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxSpinCtrl":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creation function called by the spin control constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"int",
					"int",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"min",
					"max",
					"initial",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_ARROW_KEYS",
					"0",
					"100",
					"0",
					"\"wxSpinCtrl\""
				]
			}
		],
		"GetMax":[
			{
				"return_type":"int",
				"brief_description":"Gets maximal allowable value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMin":[
			{
				"return_type":"int",
				"brief_description":"Gets minimal allowable value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"int",
				"brief_description":"Gets the value of the spin control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Sets range of allowable values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"minVal",
					"maxVal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Select the text in the text part of the control between positions from (inclusive) and to (exclusive).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the spin control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the value of the spin control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSpinCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a spin control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"int",
					"int",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"min",
					"max",
					"initial",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_ARROW_KEYS",
					"0",
					"100",
					"0",
					"\"wxSpinCtrl\""
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxSpinButton":{
		"_implements":[
			"wxControl"
		],
		"GetMin":[
			{
				"return_type":"int",
				"brief_description":"Returns the minimum permissible value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMax":[
			{
				"return_type":"int",
				"brief_description":"Returns the maximum permissible value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Scrollbar creation function called by the spin button constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_VERTICAL",
					"\"wxSpinButton\""
				]
			}
		],
		"GetValue":[
			{
				"return_type":"int",
				"brief_description":"Returns the current spin button value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Sets the range of the spin button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"min",
					"max"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the spin button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSpinButton":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a spin button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_VERTICAL",
					"\"spinButton\""
				]
			}
		]
	},
	"wxSpinEvent":{
		"GetPosition":[
			{
				"return_type":"int",
				"brief_description":"Retrieve the current spin button or control value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"Set the value associated with the event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSpinEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxSplitterEvent":{
		"_implements":[
			"wxNotifyEvent"
		],
		"GetSashPosition":[
			{
				"return_type":"int",
				"brief_description":"Returns the new sash position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindowBeingRemoved":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns a pointer to the window being removed when a splitter window is unsplit.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetX":[
			{
				"return_type":"int",
				"brief_description":"Returns the x coordinate of the double-click point.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetY":[
			{
				"return_type":"int",
				"brief_description":"Returns the y coordinate of the double-click point.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetSashPosition":[
			{
				"return_type":"void",
				"brief_description":"In the case of wxEVT_SPLITTER_SASH_POS_CHANGED events, sets the new sash position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSplitterEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"wxSplitterWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"eventType",
					"splitter"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"NULL"
				]
			}
		]
	},
	"wxSplashScreen":{
		"_implements":[
			"wxFrame"
		],
		"GetSplashStyle":[
			{
				"return_type":"long",
				"brief_description":"Returns the splash style (see wxSplashScreen() for details).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTimeout":[
			{
				"return_type":"int",
				"brief_description":"Returns the timeout in milliseconds.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxSplashScreen":[
			{
				"return_type":"",
				"brief_description":"Construct the splash screen passing a bitmap, a style, a timeout, a window id, optional position and size, and a window style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"long",
					"int",
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"splashStyle",
					"milliseconds",
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxBORDER_SIMPLE|wxFRAME_NO_TASKBAR|wxSTAY_ON_TOP"
				]
			}
		]
	},
	"wxSizeEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetRect":[
			{
				"return_type":"wxRect",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the entire size of the window generating the size change event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetRect":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRect"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSize"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSizeEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sz",
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		]
	},
	"wxGauge":{
		"_implements":[
			"wxControl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the gauge for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"int",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"range",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxGA_HORIZONTAL",
					"wxDefaultValidator",
					"wxGaugeNameStr"
				]
			}
		],
		"GetRange":[
			{
				"return_type":"int",
				"brief_description":"Returns the maximum position of the gauge.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"int",
				"brief_description":"Returns the current position of the gauge.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsVertical":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the gauge is vertical (has wxGA_VERTICAL style) and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Pulse":[
			{
				"return_type":"void",
				"brief_description":"Switch the gauge to indeterminate mode (if required) and makes the gauge move a bit to indicate the user that some progress has been made.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Sets the range (maximum value) of the gauge.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"range"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the position of the gauge.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGauge":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a gauge.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"int",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"range",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxGA_HORIZONTAL",
					"wxDefaultValidator",
					"wxGaugeNameStr"
				]
			}
		]
	},
	"wxHtmlWindow":{
		"_implements":[
			"wxScrolledWindow"
		],
		"AppendToPage":[
			{
				"return_type":"bool",
				"brief_description":"Appends HTML fragment to currently displayed text and refreshes the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"source"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetOpenedAnchor":[
			{
				"return_type":"wxString",
				"brief_description":"Returns anchor within currently opened page (see wxHtmlWindow::GetOpenedPage).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOpenedPage":[
			{
				"return_type":"wxString",
				"brief_description":"Returns full location of the opened page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOpenedPageTitle":[
			{
				"return_type":"wxString",
				"brief_description":"Returns title of the opened page or wxEmptyString if the current page does not contain <TITLE> tag.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRelatedFrame":[
			{
				"return_type":"wxFrame*",
				"brief_description":"Returns the related frame.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HistoryBack":[
			{
				"return_type":"bool",
				"brief_description":"Moves back to the previous page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HistoryCanBack":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if it is possible to go back in the history i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HistoryCanForward":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if it is possible to go forward in the history i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HistoryClear":[
			{
				"return_type":"void",
				"brief_description":"Clears history.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HistoryForward":[
			{
				"return_type":"bool",
				"brief_description":"Moves to next page in history.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadPage":[
			{
				"return_type":"bool",
				"brief_description":"Unlike SetPage() this function first loads the HTML page from location and then displays it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads an HTML page from a file and displays it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnCellClicked":[
			{
				"return_type":"bool",
				"brief_description":"This method is called when a mouse button is clicked inside wxHtmlWindow.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxHtmlCell*",
					"wxCoord",
					"wxCoord",
					"const wxMouseEvent&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"cell",
					"x",
					"y",
					"event"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"OnCellMouseHover":[
			{
				"return_type":"void",
				"brief_description":"This method is called when a mouse moves over an HTML cell.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxHtmlCell*",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"cell",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnLinkClicked":[
			{
				"return_type":"void",
				"brief_description":"Called when user clicks on hypertext link.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHtmlLinkInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"link"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnSetTitle":[
			{
				"return_type":"void",
				"brief_description":"Called on parsing <TITLE> tag.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnOpeningURL":[
			{
				"return_type":"wxHtmlOpeningStatus",
				"brief_description":"Called when an URL is being opened (either when the user clicks on a link or an image is loaded).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlURLType",
					"const wxString&",
					"wxString*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"url",
					"redirect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SelectAll":[
			{
				"return_type":"void",
				"brief_description":"Selects all text in the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SelectLine":[
			{
				"return_type":"void",
				"brief_description":"Selects the line of text that pos points at.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectWord":[
			{
				"return_type":"void",
				"brief_description":"Selects the word at position pos.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectionToText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the current selection as plain text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetBorders":[
			{
				"return_type":"void",
				"brief_description":"This function sets the space between border of window and HTML contents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"b"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPage":[
			{
				"return_type":"bool",
				"brief_description":"Sets the source of a page and displays it, for example:",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"source"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRelatedFrame":[
			{
				"return_type":"void",
				"brief_description":"Sets the frame in which page title will be displayed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFrame*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"frame",
					"format"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRelatedStatusBar":[
			{
				"return_type":"void",
				"brief_description":"After calling SetRelatedFrame(), this sets statusbar slot where messages will be displayed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the associated statusbar where messages will be displayed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxStatusBar*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"statusbar",
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"SetStandardFonts":[
			{
				"return_type":"void",
				"brief_description":"Sets default font sizes and\/or default font size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"size",
					"normal_face",
					"fixed_face"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"wxEmptyString",
					"wxEmptyString"
				]
			}
		],
		"ToText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns content of currently displayed page as plain text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WriteCustomization":[
			{
				"return_type":"void",
				"brief_description":"Saves custom settings into wxConfig.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*",
					"wxString"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cfg",
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"wxHtmlWindow":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxHW_DEFAULT_STYLE",
					"\"htmlWindow\""
				]
			}
		],
		"GetInternalRepresentation":[
			{
				"return_type":"wxHtmlContainerCell*",
				"brief_description":"Returns pointer to the top-level container.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddFilter":[
			{
				"return_type":"void",
				"brief_description":"Adds input filter to the static list of available filters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxHtmlFilter*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFonts":[
			{
				"return_type":"void",
				"brief_description":"This function sets font sizes and faces.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"normal_face",
					"fixed_face",
					"sizes"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		]
	},
	"wxHtmlContainerCell":{
		"wxHtmlContainerCell":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlContainerCell*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWidthFloat":[
			{
				"return_type":"void",
				"brief_description":"Sets floating width adjustment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHtmlTag&",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tag",
					"pixel_scale"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"1.0"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets floating width adjustment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"w",
					"units"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMinHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets minimal height of the container.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"h",
					"align"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxHTML_ALIGN_TOP"
				]
			}
		],
		"SetIndent":[
			{
				"return_type":"void",
				"brief_description":"Sets the indentation (free space between borders of container and subcells).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"i",
					"what",
					"units"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxHTML_UNITS_PIXELS"
				]
			}
		],
		"SetBorder":[
			{
				"return_type":"void",
				"brief_description":"Sets the border (frame) colours.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"clr1",
					"clr2",
					"border"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"1"
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the background colour for this container.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlignVer":[
			{
				"return_type":"void",
				"brief_description":"Sets the container's vertical alignment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"al"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlignHor":[
			{
				"return_type":"void",
				"brief_description":"Sets the container's horizontal alignment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"al"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlign":[
			{
				"return_type":"void",
				"brief_description":"Sets the container's alignment (both horizontal and vertical) according to the values stored in tag.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHtmlTag&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertCell":[
			{
				"return_type":"void",
				"brief_description":"Inserts a new cell into the container.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlCell*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cell"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetIndentUnits":[
			{
				"return_type":"int",
				"brief_description":"Returns the units of indentation for ind where ind is one of the wxHTML_INDENT_* constants.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ind"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetIndent":[
			{
				"return_type":"int",
				"brief_description":"Returns the indentation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ind"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the background colour of the container or wxNullColour if no background colour is set.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAlignVer":[
			{
				"return_type":"int",
				"brief_description":"Returns container's vertical alignment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAlignHor":[
			{
				"return_type":"int",
				"brief_description":"Returns container's horizontal alignment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxHtmlCell"
		]
	},
	"wxHtmlCell":{
		"_implements":[
			"wxObject"
		],
		"GetDescent":[
			{
				"return_type":"int",
				"brief_description":"Returns descent value of the cell (m_Descent member).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFirstChild":[
			{
				"return_type":"wxHtmlCell*",
				"brief_description":"Returns pointer to the first cell in the list.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns height of the cell (m_Height member).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns unique cell identifier if there is any, the empty string otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLink":[
			{
				"return_type":"wxHtmlLinkInfo*",
				"brief_description":"Returns hypertext link if associated with this cell or NULL otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0"
				]
			}
		],
		"GetMouseCursor":[
			{
				"return_type":"wxCursor",
				"brief_description":"Returns cursor to show when mouse pointer is over the cell.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlWindowInterface*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetNext":[
			{
				"return_type":"wxHtmlCell*",
				"brief_description":"Returns pointer to the next cell in list (see htmlcell.h if you're interested in details).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParent":[
			{
				"return_type":"wxHtmlContainerCell*",
				"brief_description":"Returns pointer to parent container.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosX":[
			{
				"return_type":"int",
				"brief_description":"Returns X position within parent (the value is relative to parent's upper left corner).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosY":[
			{
				"return_type":"int",
				"brief_description":"Returns Y position within parent (the value is relative to parent's upper left corner).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns width of the cell (m_Width member).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Layout":[
			{
				"return_type":"void",
				"brief_description":"Layouts the cell.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"w"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets unique cell identifier.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLink":[
			{
				"return_type":"void",
				"brief_description":"Sets the hypertext link associated with this cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHtmlLinkInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"link"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNext":[
			{
				"return_type":"void",
				"brief_description":"Sets the next cell in the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlCell*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cell"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParent":[
			{
				"return_type":"void",
				"brief_description":"Sets parent container of this cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlContainerCell*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"p"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPos":[
			{
				"return_type":"void",
				"brief_description":"Sets the cell's position within parent container.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxHtmlCell":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Find":[
			{
				"return_type":"const wxHtmlCell*",
				"brief_description":"Returns pointer to itself if this cell matches condition (or if any of the cells following in the list matches), NULL otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const void*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"condition",
					"param"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxHtmlCellEvent":{
		"GetCell":[
			{
				"return_type":"wxHtmlCell*",
				"brief_description":"Returns the wxHtmlCellEvent associated with the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLinkClicked":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if SetLinkClicked(true) has previously been called; false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPoint":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the wxPoint associated with the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetLinkClicked":[
			{
				"return_type":"void",
				"brief_description":"Call this function with linkclicked set to true if the cell which has been clicked contained a link or false otherwise (which is the default).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"linkclicked"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlCellEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"wxHtmlCell*",
					"const wxPoint&",
					"const wxMouseEvent&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"id",
					"cell",
					"point",
					"ev"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxHtmlColourCell":{
		"wxHtmlColourCell":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"clr",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxHTML_CLR_FOREGROUND"
				]
			}
		],
		"_implements":[
			"wxHtmlCell"
		]
	},
	"wxHtmlEasyPrinting":{
		"GetName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the current name being used for preview frames and setup dialogs.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageSetupData":[
			{
				"return_type":"wxPageSetupDialogData*",
				"brief_description":"Returns a pointer to wxPageSetupDialogData instance used by this class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParentWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Gets the parent window for dialogs.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintData":[
			{
				"return_type":"wxPrintData*",
				"brief_description":"Returns pointer to wxPrintData instance used by this class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PageSetup":[
			{
				"return_type":"void",
				"brief_description":"Display page setup dialog and allows the user to modify settings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PreviewFile":[
			{
				"return_type":"bool",
				"brief_description":"Preview HTML file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"htmlfile"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PreviewText":[
			{
				"return_type":"bool",
				"brief_description":"Preview HTML text (not file!).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"htmltext",
					"basepath"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"PrintFile":[
			{
				"return_type":"bool",
				"brief_description":"Print HTML file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"htmlfile"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrintText":[
			{
				"return_type":"bool",
				"brief_description":"Print HTML text (not file!).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"htmltext",
					"basepath"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"SetFooter":[
			{
				"return_type":"void",
				"brief_description":"Set page footer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"footer",
					"pg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPAGE_ALL"
				]
			}
		],
		"SetHeader":[
			{
				"return_type":"void",
				"brief_description":"Set page header.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"header",
					"pg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPAGE_ALL"
				]
			}
		],
		"wxHtmlEasyPrinting":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"parentWindow"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"Printing\"",
					"NULL"
				]
			}
		],
		"SetStandardFonts":[
			{
				"return_type":"void",
				"brief_description":"Sets default font sizes and\/or default font size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"size",
					"normal_face",
					"fixed_face"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"wxEmptyString",
					"wxEmptyString"
				]
			}
		],
		"SetParentWindow":[
			{
				"return_type":"void",
				"brief_description":"Sets the parent window for dialogs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Sets the name used for preview frames and setup dialogs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		],
		"SetFonts":[
			{
				"return_type":"void",
				"brief_description":"Sets fonts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"normal_face",
					"fixed_face",
					"sizes"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		]
	},
	"wxHtmlLinkEvent":{
		"GetLinkInfo":[
			{
				"return_type":"const wxHtmlLinkInfo&",
				"brief_description":"Returns the wxHtmlLinkInfo which contains info about the cell clicked and the hyperlink it contains.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxHtmlLinkEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxHtmlLinkInfo&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"linkinfo"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxHtmlLinkInfo":{
		"GetEvent":[
			{
				"return_type":"const wxMouseEvent*",
				"brief_description":"Return pointer to event that generated OnLinkClicked() event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHref":[
			{
				"return_type":"wxString",
				"brief_description":"Return HREF value of the <A> tag.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHtmlCell":[
			{
				"return_type":"const wxHtmlCell*",
				"brief_description":"Return pointer to the cell that was clicked.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTarget":[
			{
				"return_type":"wxString",
				"brief_description":"Return TARGET value of the <A> tag (this value is used to specify in which frame should be the page pointed by GetHref() Href opened).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxHtmlLinkInfo":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct hypertext link from HREF (aka URL) and TARGET (name of target frame).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"href",
					"target"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxMouseEvent":{
		"_implements":[
			"wxEvent",
			"wxMouseState"
		],
		"Aux1DClick":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event was a first extra button double click.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Aux1Down":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the first extra button mouse button changed to down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Aux1Up":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the first extra button mouse button changed to up.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Aux2DClick":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event was a second extra button double click.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Aux2Down":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the second extra button mouse button changed to down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Aux2Up":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the second extra button mouse button changed to up.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Button":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event was generated by the specified button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMouseButton"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"but"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ButtonDClick":[
			{
				"return_type":"bool",
				"brief_description":"If the argument is omitted, this returns true if the event was a mouse double click event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMouseButton"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"but"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxMOUSE_BTN_ANY"
				]
			}
		],
		"ButtonDown":[
			{
				"return_type":"bool",
				"brief_description":"If the argument is omitted, this returns true if the event was a mouse button down event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMouseButton"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"but"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxMOUSE_BTN_ANY"
				]
			}
		],
		"ButtonUp":[
			{
				"return_type":"bool",
				"brief_description":"If the argument is omitted, this returns true if the event was a mouse button up event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMouseButton"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"but"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxMOUSE_BTN_ANY"
				]
			}
		],
		"Dragging":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this was a dragging event (motion while a button is depressed).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Entering":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the mouse was entering the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetButton":[
			{
				"return_type":"int",
				"brief_description":"Returns the mouse button which generated this event or wxMOUSE_BTN_NONE if no button is involved (for mouse move, enter or leave event, for example).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClickCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of mouse clicks for this event: 1 for a simple click, 2 for a double-click, 3 for a triple-click and so on.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLinesPerAction":[
			{
				"return_type":"int",
				"brief_description":"Returns the configured number of lines (or whatever) to be scrolled per wheel action.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLogicalPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the logical mouse position in pixels (i.e. translated according to the translation set for the DC, which usually indicates that the window has been scrolled).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDC&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWheelDelta":[
			{
				"return_type":"int",
				"brief_description":"Get wheel delta, normally 120.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWheelRotation":[
			{
				"return_type":"int",
				"brief_description":"Get wheel rotation, positive or negative indicates direction of rotation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsButton":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event was a mouse button event (not necessarily a button down event - that may be tested using ButtonDown()).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPageScroll":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the system has been setup to do page scrolling with the mouse wheel instead of line scrolling.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Leaving":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the mouse was leaving the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LeftDClick":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event was a left double click.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LeftDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the left mouse button changed to down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LeftUp":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the left mouse button changed to up.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MetaDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Meta key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MiddleDClick":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event was a middle double click.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MiddleDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the middle mouse button changed to down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MiddleUp":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the middle mouse button changed to up.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Moving":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this was a motion event and no mouse buttons were pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RightDClick":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the event was a right double click.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RightDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the right mouse button changed to down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RightUp":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the right mouse button changed to up.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxMouseEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mouseEventType"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL"
				]
			}
		],
		"GetWheelAxis":[
			{
				"return_type":"wxMouseWheelAxis",
				"brief_description":"Gets the axis the wheel operation concerns.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxMouseState":{
		"Aux1IsDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the first extra button mouse button is currently down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Aux2IsDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the second extra button mouse button is currently down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the physical mouse position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetX":[
			{
				"return_type":"wxCoord",
				"brief_description":"Returns X coordinate of the physical mouse event position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetY":[
			{
				"return_type":"wxCoord",
				"brief_description":"Returns Y coordinate of the physical mouse event position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LeftIsDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the left mouse button is currently down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MiddleIsDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the middle mouse button is currently down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RightIsDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the right mouse button is currently down.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAux1Down":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAux2Down":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLeftDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMiddleDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPoint"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRightDown":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"down"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetState":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxMouseState&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetX":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetY":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxMouseState":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxKeyboardState"
		]
	},
	"wxMoveEvent":{
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the position of the window generating the move change event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRect":[
			{
				"return_type":"wxRect",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRect":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxMoveEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxMouseCaptureLostEvent":{
		"_implements":[
			"wxEvent"
		],
		"wxMouseCaptureLostEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"windowId"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"_platforms":[
			"wxmsw"
		]
	},
	"wxMouseCaptureChangedEvent":{
		"GetCapturedWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the window that gained the capture, or NULL if it was a non-wxWidgets window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxMouseCaptureChangedEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"windowId",
					"gainedCapture"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"NULL"
				]
			}
		],
		"_implements":[
			"wxEvent"
		],
		"_platforms":[
			"wxmsw"
		]
	},
	"wxMouseEventsManager":{
		"_implements":[
			"wxEvtHandler"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Finishes initialization of the object created using default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MouseClickBegin":[
			{
				"return_type":"void",
				"brief_description":"May be overridden to update the state of an item when it is pressed.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MouseClickCancelled":[
			{
				"return_type":"void",
				"brief_description":"Must be overridden to reset the item appearance changed by MouseClickBegin().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MouseClicked":[
			{
				"return_type":"bool",
				"brief_description":"Must be overridden to react to mouse clicks.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MouseDragBegin":[
			{
				"return_type":"bool",
				"brief_description":"Must be overridden to allow or deny dragging of the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MouseDragCancelled":[
			{
				"return_type":"void",
				"brief_description":"Must be overridden to handle cancellation of mouse dragging.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MouseDragEnd":[
			{
				"return_type":"void",
				"brief_description":"Must be overridden to handle item drop.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MouseDragging":[
			{
				"return_type":"void",
				"brief_description":"Must be overridden to provide feed back while an item is being dragged.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"MouseHitTest":[
			{
				"return_type":"int",
				"brief_description":"Must be overridden to return the item at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxMouseEventsManager":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creates the manager for the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxMessageDialog":{
		"_implements":[
			"wxDialog"
		],
		"GetCancelLabel":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCaption":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEffectiveIcon":[
			{
				"return_type":"long",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtendedMessage":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHelpLabel":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMessage":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMessageDialogStyle":[
			{
				"return_type":"long",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNoLabel":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOKLabel":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetYesLabel":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasCustomLabels":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetExtendedMessage":[
			{
				"return_type":"void",
				"brief_description":"Sets the extended message for the dialog: this message is usually an extension of the short message specified in the constructor or set with SetMessage().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extendedMessage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxMessageDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor specifying the message box properties.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"caption",
					"style",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxMessageBoxCaptionStr",
					"wxOK|wxCENTRE",
					"wxDefaultPosition"
				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning one of wxID_OK, wxID_CANCEL, wxID_YES, wxID_NO or wxID_HELP.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetYesNoLabels":[
			{
				"return_type":"bool",
				"brief_description":"Overrides the default labels of the Yes and No buttons.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const ButtonLabel&",
					"const ButtonLabel&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"yes",
					"no"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetYesNoCancelLabels":[
			{
				"return_type":"bool",
				"brief_description":"Overrides the default labels of the Yes, No and Cancel buttons.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const ButtonLabel&",
					"const ButtonLabel&",
					"const ButtonLabel&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"yes",
					"no",
					"cancel"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetOKLabel":[
			{
				"return_type":"bool",
				"brief_description":"Overrides the default label of the OK button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const ButtonLabel&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ok"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOKCancelLabels":[
			{
				"return_type":"bool",
				"brief_description":"Overrides the default labels of the OK and Cancel buttons.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const ButtonLabel&",
					"const ButtonLabel&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"ok",
					"cancel"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMessage":[
			{
				"return_type":"void",
				"brief_description":"Sets the message shown by the dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"message"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHelpLabel":[
			{
				"return_type":"bool",
				"brief_description":"Sets the label for the Help button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const ButtonLabel&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"help"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxHtmlListBox":{
		"wxHtmlListBox":[
			{
				"return_type":"",
				"brief_description":"Default constructor, you must call Create() later.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Normal constructor which calls Create() internally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxHtmlListBoxNameStr"
				]
			}
		],
		"OnLinkClicked":[
			{
				"return_type":"void",
				"brief_description":"Called when the user clicks on hypertext link.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"size_t",
					"const wxHtmlLinkInfo&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"link"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetSelectedTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"This virtual function may be overridden to customize the appearance of the selected cells.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colFg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectedTextBgColour":[
			{
				"return_type":"wxColour",
				"brief_description":"This virtual function may be overridden to change the appearance of the background of the selected cells in the same way as GetSelectedTextColour().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colBg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnGetItemMarkup":[
			{
				"return_type":"wxString",
				"brief_description":"This function may be overridden to decorate HTML returned by OnGetItem().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnGetItem":[
			{
				"return_type":"wxString",
				"brief_description":"This method must be implemented in the derived class and should return the body (i.e.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the control and optionally sets the initial number of items in it (it may also be set or changed later with wxVListBox::SetItemCount).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxHtmlListBoxNameStr"
				]
			}
		],
		"_implements":[
			"wxVListBox"
		]
	},
	"wxVListBox":{
		"wxVListBox":[
			{
				"return_type":"",
				"brief_description":"Normal constructor which calls Create() internally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxVListBoxNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor, you must call Create() later.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Toggle":[
			{
				"return_type":"void",
				"brief_description":"Toggles the state of the specified item, i.e. selects it if it was unselected and deselects it if it was selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectionBackground":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour to be used for the selected cells background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Set the selection to the specified item, if it is -1 the selection is unset.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"void",
				"brief_description":"Set the margins: horizontal margin is the distance between the window border and the item contents while vertical margin is half of the distance between items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the margins: horizontal margin is the distance between the window border and the item contents while vertical margin is half of the distance between items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemCount":[
			{
				"return_type":"void",
				"brief_description":"Set the number of items to be shown in the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"count"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectRange":[
			{
				"return_type":"bool",
				"brief_description":"Selects all items in the specified range which may be given in any order.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SelectAll":[
			{
				"return_type":"bool",
				"brief_description":"Selects all the items in the listbox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Select":[
			{
				"return_type":"bool",
				"brief_description":"Selects or deselects the specified item which must be valid (i.e. not equal to wxNOT_FOUND).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"select"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"OnMeasureItem":[
			{
				"return_type":"wxCoord",
				"brief_description":"The derived class must implement this method to return the height of the specified item (in pixels).",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnDrawSeparator":[
			{
				"return_type":"void",
				"brief_description":"This method may be used to draw separators between the lines.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxDC&",
					"wxRect&",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"rect",
					"n"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnDrawItem":[
			{
				"return_type":"void",
				"brief_description":"The derived class must implement this function to actually draw the item with the given index on the provided DC.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxDC&",
					"const wxRect&",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"rect",
					"n"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnDrawBackground":[
			{
				"return_type":"void",
				"brief_description":"This method is used to draw the item's background and, maybe, a border around it.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxDC&",
					"const wxRect&",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"rect",
					"n"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"IsSelected":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this item is selected, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsCurrent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this item is the current one, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasMultipleSelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the listbox was created with wxLB_MULTIPLE style and so supports multiple selection or false if it is a single selection listbox.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionBackground":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the background colour used for the selected cells.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Get the currently selected item or wxNOT_FOUND if there is no selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of the items currently selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Deletes all items from the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxVListBoxNameStr"
				]
			}
		],
		"DeselectAll":[
			{
				"return_type":"bool",
				"brief_description":"Deselects all the items in the listbox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFirstSelected":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the first selected item in the listbox or wxNOT_FOUND if no items are currently selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cookie"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemCount":[
			{
				"return_type":"size_t",
				"brief_description":"Get the number of items in the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the rectangle occupied by this item in physical coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMargins":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the margins used by the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNextSelected":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the next selected item or wxNOT_FOUND if there are no more.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cookie"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxVScrolledWindow"
		]
	},
	"wxHtmlTag":{
		"GetAllParams":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a string containing all parameters.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBeginPos":[
			{
				"return_type":"int",
				"brief_description":"Returns beginning position of the text between this tag and paired ending tag.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"GetEndPos1":[
			{
				"return_type":"int",
				"brief_description":"Returns ending position of the text between this tag and paired ending tag.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"GetEndPos2":[
			{
				"return_type":"int",
				"brief_description":"Returns ending position 2 of the text between this tag and paired ending tag.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns tag's name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParam":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the value of the parameter.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"par",
					"with_quotes"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"GetParamAsColour":[
			{
				"return_type":"bool",
				"brief_description":"Interprets tag parameter par as colour specification and saves its value into wxColour variable pointed by clr.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxColour*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"par",
					"clr"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"HasEnding":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this tag is paired with ending tag, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasParam":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the tag has a parameter of the given name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"par"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ParseAsColour":[
			{
				"return_type":"bool",
				"brief_description":"Parses the given string as an HTML colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxColour*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"clr"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ScanParam":[
			{
				"return_type":"int",
				"brief_description":"This method scans the given parameter.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wchar_t*",
					"void*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"par",
					"format",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"int",
				"brief_description":"This method scans the given parameter.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const char*",
					"void*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"par",
					"format",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetParamAsInt":[
			{
				"return_type":"bool",
				"brief_description":"Interprets tag parameter par as an integer and saves its value into int variable pointed by value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"par",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxHyperlinkCtrl":{
		"_implements":[
			"wxControl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the hyperlink control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"url",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxHL_DEFAULT_STYLE",
					"wxHyperlinkCtrlNameStr"
				]
			}
		],
		"GetHoverColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used to print the label of the hyperlink when the mouse is over the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNormalColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used to print the label when the link has never been clicked before (i.e.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetURL":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the URL associated with the hyperlink.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVisited":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the hyperlink has already been clicked by the user at least one time.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVisitedColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used to print the label when the mouse is not over the control and the link has already been clicked before (i.e.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetHoverColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour used to print the label of the hyperlink when the mouse is over the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNormalColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour used to print the label when the link has never been clicked before (i.e.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetURL":[
			{
				"return_type":"void",
				"brief_description":"Sets the URL associated with the hyperlink.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"url"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVisited":[
			{
				"return_type":"void",
				"brief_description":"Marks the hyperlink as visited (see wxHyperlinkCtrl::SetVisitedColour).",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"visited"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetVisitedColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour used to print the label when the mouse is not over the control and the link has already been clicked before (i.e.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHyperlinkCtrl":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"url",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxHL_DEFAULT_STYLE",
					"wxHyperlinkCtrlNameStr"
				]
			}
		]
	},
	"wxHyperlinkEvent":{
		"_implements":[
			"wxCommandEvent"
		],
		"GetURL":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the URL of the hyperlink where the user has just clicked.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetURL":[
			{
				"return_type":"void",
				"brief_description":"Sets the URL associated with the event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"url"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHyperlinkEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"generator",
					"id",
					"url"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		]
	},
	"wxCursor":{
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if cursor data is present.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxCursor":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a cursor from a wxImage.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxImage&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"image"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor, uses reference counting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxCursor&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cursor"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a cursor by passing a string resource name or filename.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxBitmapType",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"cursorName",
					"type",
					"hotSpotX",
					"hotSpotY"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxCURSOR_DEFAULT_TYPE",
					"0",
					"0"
				]
			}
		],
		"_implements":[
			"wxGDIObject"
		]
	},
	"wxToggleButton":{
		"_implements":[
			"wxAnyButton"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the toggle button for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"val",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxCheckBoxNameStr"
				]
			}
		],
		"GetValue":[
			{
				"return_type":"bool",
				"brief_description":"Gets the state of the toggle button.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the toggle button to the given state.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxToggleButton":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a toggle button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"val",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxCheckBoxNameStr"
				]
			}
		]
	},
	"wxTimer":{
		"_implements":[
			"wxEvtHandler"
		],
		"GetId":[
			{
				"return_type":"int",
				"brief_description":"Returns the ID of the events generated by this timer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInterval":[
			{
				"return_type":"int",
				"brief_description":"Returns the current interval for the timer (in milliseconds).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOwner":[
			{
				"return_type":"wxEvtHandler*",
				"brief_description":"Returns the current owner of the timer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOneShot":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the timer is one shot, i.e. if it will stop after firing the first notification automatically.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsRunning":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the timer is running, false if it is stopped.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Notify":[
			{
				"return_type":"void",
				"brief_description":"This member should be overridden by the user if the default constructor was used and SetOwner() wasn't called.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetOwner":[
			{
				"return_type":"void",
				"brief_description":"Associates the timer with the given owner object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"owner",
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			}
		],
		"Start":[
			{
				"return_type":"bool",
				"brief_description":"(Re)starts the timer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"milliseconds",
					"oneShot"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"wxTIMER_CONTINUOUS"
				]
			}
		],
		"Stop":[
			{
				"return_type":"void",
				"brief_description":"Stops the timer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxTimer":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a timer and associates it with owner.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"owner",
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			}
		]
	},
	"wxTimerEvent":{
		"GetInterval":[
			{
				"return_type":"int",
				"brief_description":"Returns the interval of the timer which generated this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxThreadEvent":{
		"Clone":[
			{
				"return_type":"wxEvent*",
				"brief_description":"Clones this event making sure that all internal members which use COW (only m_commandString for now; see Reference Counting) are unshared (see wxObject::UnShare).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtraLong":[
			{
				"return_type":"long",
				"brief_description":"Returns extra information integer value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEventCategory":[
			{
				"return_type":"wxEventCategory",
				"brief_description":"Returns wxEVT_CATEGORY_THREAD.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInt":[
			{
				"return_type":"int",
				"brief_description":"Returns stored integer value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns stored string value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetInt":[
			{
				"return_type":"void",
				"brief_description":"Sets the integer value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"intCommand"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtraLong":[
			{
				"return_type":"void",
				"brief_description":"Sets the extra information value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extraLong"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetString":[
			{
				"return_type":"void",
				"brief_description":"Sets the string value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxThreadEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"eventType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_THREAD",
					"wxID_ANY"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxSearchCtrl":{
		"_implements":[
			"wxTextCtrl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxSearchCtrlNameStr"
				]
			}
		],
		"GetDescriptiveText":[
			{
				"return_type":"wxString",
				"brief_description":"Return the text displayed when there is not yet any user input.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Returns a pointer to the search control's menu object or NULL if there is no menu attached.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsCancelButtonVisible":[
			{
				"return_type":"bool",
				"brief_description":"Returns the cancel button's visibility state.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSearchButtonVisible":[
			{
				"return_type":"bool",
				"brief_description":"Returns the search button visibility value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDescriptiveText":[
			{
				"return_type":"void",
				"brief_description":"Set the text to be displayed in the search control when the user has not yet typed anything in it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMenu":[
			{
				"return_type":"void",
				"brief_description":"Sets the search control's menu object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowCancelButton":[
			{
				"return_type":"void",
				"brief_description":"Shows or hides the cancel button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowSearchButton":[
			{
				"return_type":"void",
				"brief_description":"Sets the search button visibility value on the search control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSearchCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a text control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxSearchCtrlNameStr"
				]
			}
		]
	},
	"wxColourPickerEvent":{
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Retrieve the colour the user has just selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Set the colour associated with the event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxColourPickerEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*",
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"generator",
					"id",
					"colour"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxColourPickerCtrl":{
		"_implements":[
			"wxPickerBase"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates a colour picker with the given arguments.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxColour&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"colour",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"*wxBLACK",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCLRP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxColourPickerCtrlNameStr"
				]
			}
		],
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the currently selected colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the currently selected colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the currently selected colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxColourPickerCtrl":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxColour&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"colour",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"*wxBLACK",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCLRP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxColourPickerCtrlNameStr"
				]
			}
		]
	},
	"wxFontPickerCtrl":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates this widget with given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxFont&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"font",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullFont",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxFNTP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxFontPickerCtrlNameStr"
				]
			}
		],
		"GetMaxPointSize":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the maximum point size value allowed for the user-chosen font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the currently selected font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMaxPointSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the maximum point size value allowed for the user-chosen font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"max"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectedFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the currently selected font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFontPickerCtrl":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxFont&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"font",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullFont",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxFNTP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxFontPickerCtrlNameStr"
				]
			}
		],
		"_implements":[
			"wxPickerBase"
		]
	},
	"wxFontPickerEvent":{
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Retrieve the font the user has just selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Set the font associated with the event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"f"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFontPickerEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*",
					"int",
					"const wxFont&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"generator",
					"id",
					"font"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxFilePickerCtrl":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates this widget with the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"path",
					"message",
					"wildcard",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxFileSelectorPromptStr",
					"wxFileSelectorDefaultWildcardStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxFLP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxFilePickerCtrlNameStr"
				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the absolute path of the currently selected file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFileName":[
			{
				"return_type":"void",
				"brief_description":"This method does the same thing as SetPath() but takes a wxFileName object instead of a string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Sets the absolute path of the currently selected file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFilePickerCtrl":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"path",
					"message",
					"wildcard",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxFileSelectorPromptStr",
					"wxFileSelectorDefaultWildcardStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxFLP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxFilePickerCtrlNameStr"
				]
			}
		],
		"_implements":[
			"wxPickerBase"
		],
		"GetFileName":[
			{
				"return_type":"wxFileName",
				"brief_description":"Similar to GetPath() but returns the path of the currently selected file as a wxFileName object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxFindReplaceDialog":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the dialog; use wxWindow::Show to show it on screen.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxFindReplaceData*",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data",
					"title",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"GetData":[
			{
				"return_type":"const wxFindReplaceData*",
				"brief_description":"Get the wxFindReplaceData object used by this dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFindReplaceDialog":[
			{
				"return_type":"",
				"brief_description":"After using default constructor Create() must be called.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxFindReplaceData*",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data",
					"title",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxDialog"
		]
	},
	"wxFindReplaceData":{
		"GetFindString":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the string to find.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetReplaceString":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the replacement string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"int",
				"brief_description":"Get the combination of wxFindReplaceFlags values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFindString":[
			{
				"return_type":"void",
				"brief_description":"Set the string to find (used as initial value by the dialog).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"str"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Set the flags to use to initialize the controls of the dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint32"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetReplaceString":[
			{
				"return_type":"void",
				"brief_description":"Set the replacement string (used as initial value by the dialog).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"str"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFindReplaceData":[
			{
				"return_type":"",
				"brief_description":"Constructor initializes the flags to default value (0).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint32"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxDirPickerCtrl":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the widgets with the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"path",
					"message",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDirSelectorPromptStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDIRP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxDirPickerCtrlNameStr"
				]
			}
		],
		"GetDirName":[
			{
				"return_type":"wxFileName",
				"brief_description":"Returns the absolute path of the currently selected directory as a wxFileName object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the absolute path of the currently selected directory.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDirName":[
			{
				"return_type":"void",
				"brief_description":"Just like SetPath() but this function takes a wxFileName object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dirname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Sets the absolute path of the currently selected directory (the default converter uses current locale's charset).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dirname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDirPickerCtrl":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"path",
					"message",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDirSelectorPromptStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDIRP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxDirPickerCtrlNameStr"
				]
			}
		],
		"_implements":[
			"wxPickerBase"
		]
	},
	"wxDirDialog":{
		"GetMessage":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the message that will be displayed on the dialog.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the default or user-selected path.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMessage":[
			{
				"return_type":"void",
				"brief_description":"Sets the message that will be displayed on the dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"message"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Sets the default path.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning wxID_OK if the user pressed OK, and wxID_CANCEL otherwise.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDirDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxPoint&",
					"const wxSize&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"defaultPath",
					"style",
					"pos",
					"size",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDirSelectorPromptStr",
					"wxEmptyString",
					"wxDD_DEFAULT_STYLE",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDirDialogNameStr"
				]
			}
		],
		"_implements":[
			"wxDialog"
		]
	},
	"wxSpinDoubleEvent":{
		"wxSpinDoubleEvent":[
			{
				"return_type":"",
				"brief_description":"The copy constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSpinDoubleEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"The constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"winid",
					"value"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"0"
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Set the value associated with the event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetValue":[
			{
				"return_type":"double",
				"brief_description":"Returns the value associated with this spin control event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxSpinCtrlDouble":{
		"_implements":[
			"wxControl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creation function called by the spin control constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"double",
					"double",
					"double",
					"double",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"min",
					"max",
					"initial",
					"inc",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_ARROW_KEYS",
					"0",
					"100",
					"0",
					"1",
					"\"wxSpinCtrlDouble\""
				]
			}
		],
		"GetDigits":[
			{
				"return_type":"unsigned int",
				"brief_description":"Gets the number of digits in the display.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIncrement":[
			{
				"return_type":"double",
				"brief_description":"Gets the increment value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMax":[
			{
				"return_type":"double",
				"brief_description":"Gets maximal allowable value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMin":[
			{
				"return_type":"double",
				"brief_description":"Gets minimal allowable value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"double",
				"brief_description":"Gets the value of the spin control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDigits":[
			{
				"return_type":"void",
				"brief_description":"Sets the number of digits in the display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"digits"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIncrement":[
			{
				"return_type":"void",
				"brief_description":"Sets the increment value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"inc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Sets range of allowable values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"minVal",
					"maxVal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the spin control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the value of the spin control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSpinCtrlDouble":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a spin control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"double",
					"double",
					"double",
					"double",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"min",
					"max",
					"initial",
					"inc",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1",
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxSP_ARROW_KEYS",
					"0",
					"100",
					"0",
					"1",
					"wxT(\"wxSpinCtrlDouble\")"
				]
			}
		]
	},
	"wxGenericDirCtrl":{
		"_implements":[
			"wxControl"
		],
		"CollapsePath":[
			{
				"return_type":"bool",
				"brief_description":"Collapse the given path.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CollapseTree":[
			{
				"return_type":"void",
				"brief_description":"Collapses the entire tree.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create function for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"dir",
					"pos",
					"size",
					"style",
					"filter",
					"defaultFilter",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDirDialogDefaultFolderStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDIRCTRL_3D_INTERNAL",
					"wxEmptyString",
					"0",
					"wxTreeCtrlNameStr"
				]
			}
		],
		"ExpandPath":[
			{
				"return_type":"bool",
				"brief_description":"Tries to expand as much of the given path as possible, so that the filename or directory is visible in the tree control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDefaultPath":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the default path.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilePath":[
			{
				"return_type":"wxString",
				"brief_description":"Gets selected filename path only (else empty string).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilePaths":[
			{
				"return_type":"void",
				"brief_description":"Fills the array paths with the currently selected filepaths.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"paths"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFilter":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the filter string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilterIndex":[
			{
				"return_type":"int",
				"brief_description":"Returns the current filter index (zero-based).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilterListCtrl":[
			{
				"return_type":"wxDirFilterListCtrl*",
				"brief_description":"Returns a pointer to the filter list control (if present).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the currently-selected directory or filename.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPaths":[
			{
				"return_type":"void",
				"brief_description":"Fills the array paths with the selected directories and filenames.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"paths"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRootId":[
			{
				"return_type":"wxTreeItemId",
				"brief_description":"Returns the root id for the tree control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTreeCtrl":[
			{
				"return_type":"wxTreeCtrl*",
				"brief_description":"Returns a pointer to the tree control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Init":[
			{
				"return_type":"void",
				"brief_description":"Initializes variables.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ReCreateTree":[
			{
				"return_type":"void",
				"brief_description":"Collapse and expand the tree, thus re-creating it from scratch.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SelectPath":[
			{
				"return_type":"void",
				"brief_description":"Selects the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"path",
					"select"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SelectPaths":[
			{
				"return_type":"void",
				"brief_description":"Selects only the specified paths, clearing any previous selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"paths"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultPath":[
			{
				"return_type":"void",
				"brief_description":"Sets the default path.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilter":[
			{
				"return_type":"void",
				"brief_description":"Sets the filter string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilterIndex":[
			{
				"return_type":"void",
				"brief_description":"Sets the current filter index (zero-based).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Sets the current path.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowHidden":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UnselectAll":[
			{
				"return_type":"void",
				"brief_description":"Removes the selection from all currently selected items.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxGenericDirCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Main constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"dir",
					"pos",
					"size",
					"style",
					"filter",
					"defaultFilter",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDirDialogDefaultFolderStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDIRCTRL_3D_INTERNAL",
					"wxEmptyString",
					"0",
					"wxTreeCtrlNameStr"
				]
			}
		]
	},
	"wxFileName":{
		"AppendDir":[
			{
				"return_type":"bool",
				"brief_description":"Appends a directory component to the path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertDir":[
			{
				"return_type":"bool",
				"brief_description":"Inserts a directory component before the zero-based position in the directory list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"before",
					"dir"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Assign":[
			{
				"return_type":"void",
				"brief_description":"Creates the file name from another filename object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filepath"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Creates the file name from a full file name with a path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"fullpath",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Creates the file name from volume, path, name and extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"bool",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"volume",
					"path",
					"name",
					"ext",
					"hasExt",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Creates the file name from volume, path, name and extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"volume",
					"path",
					"name",
					"ext",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Creates the file name from file path and file name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"path",
					"name",
					"format"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Creates the file name from path, name and extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"path",
					"name",
					"ext",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"wxFileName":[
			{
				"return_type":"",
				"brief_description":"Copy constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a full filename.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"fullpath",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor a directory name and file name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"path",
					"name",
					"format"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor from a directory name, base file name and extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"path",
					"name",
					"ext",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor from a volume name, a directory name, base file name and extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"volume",
					"path",
					"name",
					"ext",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"Touch":[
			{
				"return_type":"bool",
				"brief_description":"Sets the access and modification times to the current moment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StripExtension":[
			{
				"return_type":"wxString",
				"brief_description":"Strip the file extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fullname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SplitVolume":[
			{
				"return_type":"void",
				"brief_description":"Splits the given fullpath into the volume part (which may be empty) and the pure path part, not containing any volume.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*",
					"wxString*",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"fullpath",
					"volume",
					"path",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"SplitPath":[
			{
				"return_type":"void",
				"brief_description":"This function splits a full file name into components: the volume (with the first version) path (including the volume in the second version), the base name and the extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*",
					"wxString*",
					"wxString*",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"fullpath",
					"path",
					"name",
					"ext",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxPATH_NATIVE"
				]
			},
			{
				"return_type":"void",
				"brief_description":"This function splits a full file name into components: the volume (with the first version) path (including the volume in the second version), the base name and the extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*",
					"wxString*",
					"wxString*",
					"wxString*",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"fullpath",
					"volume",
					"path",
					"name",
					"ext",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"This function splits a full file name into components: the volume (with the first version) path (including the volume in the second version), the base name and the extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*",
					"wxString*",
					"wxString*",
					"wxString*",
					"bool*",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"fullpath",
					"volume",
					"path",
					"name",
					"ext",
					"hasExt",
					"format"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"NULL",
					"wxPATH_NATIVE"
				]
			}
		],
		"SetVolume":[
			{
				"return_type":"void",
				"brief_description":"Sets the volume specifier.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"volume"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTimes":[
			{
				"return_type":"bool",
				"brief_description":"Sets the file creation and last access\/modification times (any of the pointers may be NULL).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime*",
					"const wxDateTime*",
					"const wxDateTime*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dtAccess",
					"dtMod",
					"dtCreate"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Sets the path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"path",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Sets the name part (without extension).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFullName":[
			{
				"return_type":"void",
				"brief_description":"The full name is the file name and extension (but without the path).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fullname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExt":[
			{
				"return_type":"void",
				"brief_description":"Sets the extension of the file name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ext"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEmptyExt":[
			{
				"return_type":"void",
				"brief_description":"Sets the extension of the file name to be an empty extension.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCwd":[
			{
				"return_type":"bool",
				"brief_description":"Changes the current working directory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cwd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Changes the current working directory.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SameAs":[
			{
				"return_type":"bool",
				"brief_description":"Compares the filename using the rules of this platform.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filepath",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"Rmdir":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the specified directory from the file system.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dir",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Deletes the specified directory from the file system.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"ReplaceHomeDir":[
			{
				"return_type":"bool",
				"brief_description":"Replaces, if present in the path, the home directory for the given user (see wxGetHomeDir) with a tilde (~).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"ReplaceEnvVariable":[
			{
				"return_type":"bool",
				"brief_description":"If the path contains the value of the environment variable named envname then this function replaces it with the string obtained from wxString::Format(replacementFmtString, value_of_envname_variable).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"envname",
					"replacementFmtString",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"$%s\"",
					"wxPATH_NATIVE"
				]
			}
		],
		"RemoveLastDir":[
			{
				"return_type":"void",
				"brief_description":"Removes last directory component from the path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RemoveDir":[
			{
				"return_type":"void",
				"brief_description":"Removes the specified directory component from the path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrependDir":[
			{
				"return_type":"void",
				"brief_description":"Prepends a directory to the file path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AssignCwd":[
			{
				"return_type":"void",
				"brief_description":"Makes this object refer to the current working directory on the specified volume (or current volume if volume is empty).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"volume"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		],
		"AssignDir":[
			{
				"return_type":"void",
				"brief_description":"Sets this file name object to the given directory name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dir",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"AssignHomeDir":[
			{
				"return_type":"void",
				"brief_description":"Sets this file name object to the home directory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AssignTempFileName":[
			{
				"return_type":"void",
				"brief_description":"The function calls CreateTempFileName() to create a temporary file and sets this object to the name of the file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prefix"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"The function calls CreateTempFileName() to create a temporary file name and open fileTemp with it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxFile*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"prefix",
					"fileTemp"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"The function calls CreateTempFileName() to create a temporary file name and open fileTemp with it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxFFile*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"prefix",
					"fileTemp"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Reset all components to default, uninitialized state.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearExt":[
			{
				"return_type":"void",
				"brief_description":"Removes the extension from the file name resulting in a file name with no trailing dot.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateTempFileName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a temporary file name starting with the given prefix.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxFile*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"prefix",
					"fileTemp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			},
			{
				"return_type":"wxString",
				"brief_description":"This is the same as CreateTempFileName(const wxString &prefix, wxFile *fileTemp) but takes a wxFFile parameter instead of wxFile.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxFFile*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"prefix",
					"fileTemp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"DirExists":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the directory with this name exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the directory with name dir exists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DirName":[
			{
				"return_type":"wxFileName",
				"brief_description":"Returns the object corresponding to the directory with the given name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dir",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"FileExists":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the file with this name exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the file with name file exists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FileName":[
			{
				"return_type":"wxFileName",
				"brief_description":"Returns the file name object corresponding to the given file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"file",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"GetCwd":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieves the value of the current working directory on the specified volume.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"volume"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		],
		"GetDirCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of directories in the file name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDirs":[
			{
				"return_type":"const wxArrayString&",
				"brief_description":"Returns the directories in string array form.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExt":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the file name extension.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetForbiddenChars":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the characters that can't be used in filenames and directory names for the specified format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetFormat":[
			{
				"return_type":"wxPathFormat",
				"brief_description":"Returns the canonical path format for this platform.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetFullName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the full name (including extension but excluding directories).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFullPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the full path with name and extension.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetHomeDir":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the home directory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHumanReadableSize":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the representation of the file size in a human-readable form.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"wxSizeConvention"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"failmsg",
					"precision",
					"conv"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"_(\"Not available\")",
					"1",
					"wxSIZE_CONV_TRADITIONAL"
				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the representation of the file size in a human-readable form.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxULongLong&",
					"const wxString&",
					"int",
					"wxSizeConvention"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bytes",
					"nullsize",
					"precision",
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"_(\"Not available\")",
					"1",
					"wxSIZE_CONV_TRADITIONAL"
				]
			}
		],
		"GetLongPath":[
			{
				"return_type":"wxString",
				"brief_description":"Return the long form of the path (returns identity on non-Windows platforms).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the name part of the filename (without extension).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModificationTime":[
			{
				"return_type":"wxDateTime",
				"brief_description":"Returns the last time the file was last modified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the path part of the filename (without the name or extension).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"flags",
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_GET_VOLUME",
					"wxPATH_NATIVE"
				]
			}
		],
		"GetPathSeparator":[
			{
				"return_type":"wxUniChar",
				"brief_description":"Returns the usually used path separator for this format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetPathSeparators":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string containing all the path separators for this format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetPathTerminators":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string of characters which may terminate the path part.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetPathWithSep":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the path with the trailing separator, useful for appending the name to the given path.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetShortPath":[
			{
				"return_type":"wxString",
				"brief_description":"Return the short form of the path (returns identity on non-Windows platforms).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTempDir":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the directory used for temporary files.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVolumeSeparator":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string separating the volume from the path for this format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"GetVolume":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string containing the volume for this file name, empty if it doesn't have one or if the file system doesn't support volumes at all (for example, Unix).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasExt":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if an extension is present.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasName":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a name is present.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasVolume":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a volume specifier is present.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAbsolute":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this filename is absolute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"IsCaseSensitive":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the file names of this type are case-sensitive.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"IsDir":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this object represents a directory, false otherwise (i.e.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDirReadable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the directory component of this instance is an existing directory and this process has read permissions on it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given dir is an existing directory and this process has read permissions on it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsDirWritable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the directory component of this instance is an existing directory and this process has write permissions on it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given dir is an existing directory and this process has write permissions on it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsFileExecutable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a file with this name exists and if this process has execute permissions on it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if a file with this name exists and if this process has execute permissions on it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsFileReadable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a file with this name exists and if this process has read permissions on it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if a file with this name exists and if this process has read permissions on it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsFileWritable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a file with this name exists and if this process has write permissions on it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if a file with this name exists and if this process has write permissions on it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsMSWUniqueVolumeNamePath":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the volume part of the path is a unique volume name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"path",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the filename is valid, false if it is not initialized yet.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPathSeparator":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the char is a path separator for this format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxChar",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"ch",
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPATH_NATIVE"
				]
			}
		],
		"IsRelative":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this filename is not absolute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPathFormat"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NATIVE"
				]
			}
		],
		"MakeAbsolute":[
			{
				"return_type":"bool",
				"brief_description":"Make the file name absolute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cwd",
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"wxPATH_NATIVE"
				]
			}
		],
		"MakeRelativeTo":[
			{
				"return_type":"bool",
				"brief_description":"This function tries to put this file name in a form relative to pathBase.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pathBase",
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"wxPATH_NATIVE"
				]
			}
		],
		"Mkdir":[
			{
				"return_type":"bool",
				"brief_description":"Creates a directory.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"perm",
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxS_DIR_DEFAULT",
					"0"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates a directory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dir",
					"perm",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxS_DIR_DEFAULT",
					"0"
				]
			}
		],
		"Normalize":[
			{
				"return_type":"bool",
				"brief_description":"Normalize the path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"wxPathFormat"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"flags",
					"cwd",
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxPATH_NORM_ALL",
					"wxEmptyString",
					"wxPATH_NATIVE"
				]
			}
		]
	},
	"wxGridSizeEvent":{
		"AltDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Alt key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ControlDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Control key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Position in pixels at which the event occurred.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRowOrCol":[
			{
				"return_type":"int",
				"brief_description":"Row or column at that was resized.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MetaDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Meta key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShiftDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Shift key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxGridSizeEvent":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for initializing all event attributes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxEventType",
					"wxObject*",
					"int",
					"int",
					"int",
					"const wxKeyboardState&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"type",
					"obj",
					"rowOrCol",
					"x",
					"y",
					"kbd"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"-1",
					"-1",
					"-1",
					"wxKeyboardState()"
				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxGridSizer":{
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"This method is abstract and has to be overwritten by any derived class.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCols":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of columns that has been specified for the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEffectiveColsCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of columns currently used by the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEffectiveRowsCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of rows currently used by the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHGap":[
			{
				"return_type":"int",
				"brief_description":"Returns the horizontal gap (in pixels) between cells in the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRows":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of rows that has been specified for the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVGap":[
			{
				"return_type":"int",
				"brief_description":"Returns the vertical gap (in pixels) between the cells in the sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"This method is abstract and has to be overwritten by any derived class.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCols":[
			{
				"return_type":"void",
				"brief_description":"Sets the number of columns in the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cols"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHGap":[
			{
				"return_type":"void",
				"brief_description":"Sets the horizontal gap (in pixels) between cells in the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"gap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRows":[
			{
				"return_type":"void",
				"brief_description":"Sets the number of rows in the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rows"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVGap":[
			{
				"return_type":"void",
				"brief_description":"Sets the vertical gap (in pixels) between the cells in the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"gap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridSizer":[
			{
				"return_type":"",
				"brief_description":"wxGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"cols",
					"vgap",
					"hgap"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"wxGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cols",
					"gap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxSize(0, 0)"
				]
			},
			{
				"return_type":"",
				"brief_description":"wxGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"rows",
					"cols",
					"vgap",
					"hgap"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"wxGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"rows",
					"cols",
					"gap"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxSizer"
		]
	},
	"wxFlexGridSizer":{
		"_implements":[
			"wxGridSizer"
		],
		"AddGrowableCol":[
			{
				"return_type":"void",
				"brief_description":"Specifies that column idx (starting from zero) should be grown if there is extra space available to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"idx",
					"proportion"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"AddGrowableRow":[
			{
				"return_type":"void",
				"brief_description":"Specifies that row idx (starting from zero) should be grown if there is extra space available to the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"idx",
					"proportion"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"This method is abstract and has to be overwritten by any derived class.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlexibleDirection":[
			{
				"return_type":"int",
				"brief_description":"Returns a wxOrientation value that specifies whether the sizer flexibly resizes its columns, rows, or both (default).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNonFlexibleGrowMode":[
			{
				"return_type":"wxFlexSizerGrowMode",
				"brief_description":"Returns the value that specifies how the sizer grows in the \"non-flexible\" direction if there is one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsColGrowable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if column idx is growable.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsRowGrowable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if row idx is growable.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"This method is abstract and has to be overwritten by any derived class.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RemoveGrowableCol":[
			{
				"return_type":"void",
				"brief_description":"Specifies that the idx column index is no longer growable.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveGrowableRow":[
			{
				"return_type":"void",
				"brief_description":"Specifies that the idx row index is no longer growable.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlexibleDirection":[
			{
				"return_type":"void",
				"brief_description":"Specifies whether the sizer should flexibly resize its columns, rows, or both.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNonFlexibleGrowMode":[
			{
				"return_type":"void",
				"brief_description":"Specifies how the sizer should grow in the non-flexible direction if there is one (so SetFlexibleDirection() must have been called previously).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFlexSizerGrowMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFlexGridSizer":[
			{
				"return_type":"",
				"brief_description":"wxFlexGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"cols",
					"vgap",
					"hgap"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"wxFlexGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cols",
					"gap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxSize(0, 0)"
				]
			},
			{
				"return_type":"",
				"brief_description":"wxFlexGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"rows",
					"cols",
					"vgap",
					"hgap"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"wxFlexGridSizer constructors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"rows",
					"cols",
					"gap"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		]
	},
	"wxGridBagSizer":{
		"_implements":[
			"wxFlexGridSizer"
		],
		"Add":[
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Adds the given item to the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxGBPosition&",
					"const wxGBSpan&",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"pos",
					"span",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultSpan",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Adds the given item to the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxGBPosition&",
					"const wxGBSpan&",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"pos",
					"span",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultSpan",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Adds a spacer to the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxGBPosition&",
					"const wxGBSpan&",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"pos",
					"span",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultSpan",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"wxSizerItem*",
				"brief_description":"Adds the given item to the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGBSizerItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"Called when the managed size of the sizer is needed or when layout needs done.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CheckForIntersection":[
			{
				"return_type":"bool",
				"brief_description":"Look at all items and see if any intersect (or would overlap) the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGBSizerItem*",
					"wxGBSizerItem*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"excludeItem"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Look at all items and see if any intersect (or would overlap) the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBPosition&",
					"const wxGBSpan&",
					"wxGBSizerItem*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"span",
					"excludeItem"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"FindItem":[
			{
				"return_type":"wxGBSizerItem*",
				"brief_description":"Find the sizer item for the given window or subsizer, returns NULL if not found.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxGBSizerItem*",
				"brief_description":"Find the sizer item for the given window or subsizer, returns NULL if not found.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindItemAtPoint":[
			{
				"return_type":"wxGBSizerItem*",
				"brief_description":"Return the sizer item located at the point given in pt, or NULL if there is no item at that point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindItemAtPosition":[
			{
				"return_type":"wxGBSizerItem*",
				"brief_description":"Return the sizer item for the given grid cell, or NULL if there is no item at that position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBPosition&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindItemWithData":[
			{
				"return_type":"wxGBSizerItem*",
				"brief_description":"Return the sizer item that has a matching user data (it only compares pointer values) or NULL if not found.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"userData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCellSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the size of the specified cell, including hgap and vgap.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetEmptyCellSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the size used for cells in the grid with no item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemPosition":[
			{
				"return_type":"wxGBPosition",
				"brief_description":"Get the grid position of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxGBPosition",
				"brief_description":"Get the grid position of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxGBPosition",
				"brief_description":"Get the grid position of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemSpan":[
			{
				"return_type":"wxGBSpan",
				"brief_description":"Get the row\/col spanning of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxGBSpan",
				"brief_description":"Get the row\/col spanning of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxGBSpan",
				"brief_description":"Get the row\/col spanning of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"Called when the managed size of the sizer is needed or when layout needs done.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetEmptyCellSize":[
			{
				"return_type":"void",
				"brief_description":"Set the size used for cells in the grid with no item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sz"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemPosition":[
			{
				"return_type":"bool",
				"brief_description":"Set the grid position of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxGBPosition&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set the grid position of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxGBPosition&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set the grid position of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxGBPosition&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemSpan":[
			{
				"return_type":"bool",
				"brief_description":"Set the row\/col spanning of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxGBSpan&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"span"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set the row\/col spanning of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxGBSpan&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"span"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set the row\/col spanning of the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxGBSpan&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"span"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxGridBagSizer":[
			{
				"return_type":"",
				"brief_description":"Constructor, with optional parameters to specify the gap between the rows and columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"vgap",
					"hgap"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0"
				]
			}
		]
	},
	"wxStdDialogButtonSizer":{
		"_implements":[
			"wxBoxSizer"
		],
		"AddButton":[
			{
				"return_type":"void",
				"brief_description":"Adds a button to the wxStdDialogButtonSizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxButton*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"button"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CalcMin":[
			{
				"return_type":"wxSize",
				"brief_description":"Implements the calculation of a box sizer's minimal.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Realize":[
			{
				"return_type":"void",
				"brief_description":"Rearranges the buttons and applies proper spacing between buttons to make them match the platform or toolkit's interface guidelines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RecalcSizes":[
			{
				"return_type":"void",
				"brief_description":"Implements the calculation of a box sizer's dimensions and then sets the size of its children (calling wxWindow::SetSize if the child is a window).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAffirmativeButton":[
			{
				"return_type":"void",
				"brief_description":"Sets the affirmative button for the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxButton*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"button"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCancelButton":[
			{
				"return_type":"void",
				"brief_description":"Sets the cancel button for the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxButton*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"button"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNegativeButton":[
			{
				"return_type":"void",
				"brief_description":"Sets the negative button for the sizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxButton*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"button"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxStdDialogButtonSizer":[
			{
				"return_type":"",
				"brief_description":"Constructor for a wxStdDialogButtonSizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxScrollEvent":{
		"wxScrollEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"id",
					"pos",
					"orientation"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"0",
					"0"
				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOrientation":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPosition":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of the scrollbar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrientation":[
			{
				"return_type":"int",
				"brief_description":"Returns wxHORIZONTAL or wxVERTICAL, depending on the orientation of the scrollbar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxScrollWinEvent":{
		"wxScrollWinEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"pos",
					"orientation"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"0"
				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOrientation":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPosition":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of the scrollbar for the thumb track and release events.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrientation":[
			{
				"return_type":"int",
				"brief_description":"Returns wxHORIZONTAL or wxVERTICAL, depending on the orientation of the scrollbar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxNotebook":{
		"_implements":[
			"wxBookCtrlBase"
		],
		"ChangeSelection":[
			{
				"return_type":"int",
				"brief_description":"Changes the selection to the given page, returning the previous selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates a notebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxNotebookNameStr"
				]
			}
		],
		"GetPageImage":[
			{
				"return_type":"int",
				"brief_description":"Returns the image index for the given page.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nPage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPageText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string for the given page.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"nPage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRowCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of rows in the notebook control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the currently selected page, or wxNOT_FOUND if none was selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetThemeBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"If running under Windows and themes are enabled for the application, this function returns a suitable colour for painting the background of a notebook page, and can be passed to SetBackgroundColour().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertPage":[
			{
				"return_type":"bool",
				"brief_description":"Inserts a new page at the specified position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"index",
					"page",
					"text",
					"select",
					"imageId"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false",
					"NO_IMAGE"
				]
			}
		],
		"OnSelChange":[
			{
				"return_type":"void",
				"brief_description":"An event handler function, called when the page selection is changed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBookCtrlEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPadding":[
			{
				"return_type":"void",
				"brief_description":"Sets the amount of space around each page's icon and label, in pixels.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"padding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPageImage":[
			{
				"return_type":"bool",
				"brief_description":"Sets the image index for the given page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"page",
					"image"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPageText":[
			{
				"return_type":"bool",
				"brief_description":"Sets the text for the given page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"page",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"int",
				"brief_description":"Sets the selection to the given page, returning the previous selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxNotebook":[
			{
				"return_type":"",
				"brief_description":"Constructs a notebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a notebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxNotebookNameStr"
				]
			}
		]
	},
	"wxDialog":{
		"_implements":[
			"wxTopLevelWindow"
		],
		"AddMainButtonId":[
			{
				"return_type":"void",
				"brief_description":"Adds an identifier to be regarded as a main button for the non-scrolling area of a dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Centre":[
			{
				"return_type":"void",
				"brief_description":"Centres the dialog box on the display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Used for two-step dialog box construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_DIALOG_STYLE",
					"wxDialogNameStr"
				]
			}
		],
		"CreateButtonSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"Creates a sizer with standard buttons.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CreateSeparatedButtonSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"Creates a sizer with standard buttons using CreateButtonSizer() separated from the rest of the dialog contents by a horizontal wxStaticLine.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CreateSeparatedSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"Returns the sizer containing the given one with a separating wxStaticLine if necessarily.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CreateStdDialogButtonSizer":[
			{
				"return_type":"wxStdDialogButtonSizer*",
				"brief_description":"Creates a wxStdDialogButtonSizer with standard buttons.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EndModal":[
			{
				"return_type":"void",
				"brief_description":"Ends a modal dialog, passing a value to be returned from the ShowModal() invocation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"retCode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetAffirmativeId":[
			{
				"return_type":"int",
				"brief_description":"Gets the identifier of the button which works like standard OK button in this dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetContentWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Override this to return a window containing the main content of the dialog.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEscapeId":[
			{
				"return_type":"int",
				"brief_description":"Gets the identifier of the button to map presses of ESC button to.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetReturnCode":[
			{
				"return_type":"int",
				"brief_description":"Gets the return code for this window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Iconize":[
			{
				"return_type":"void",
				"brief_description":"Iconizes or restores the dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"iconize"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"IsIconized":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the dialog box is iconized.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsMainButtonId":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if id is in the array of identifiers to be regarded as the main buttons for the non-scrolling area of a dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxmsw"
				]
			}
		],
		"IsModal":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the dialog box is modal, false otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAffirmativeId":[
			{
				"return_type":"void",
				"brief_description":"Sets the identifier to be used as OK button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_DIALOG_STYLE",
					"wxDialogNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowWindowModal":[
			{
				"return_type":"void",
				"brief_description":"Shows a dialog modal to the parent top level window only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows an application-modal dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Show":[
			{
				"return_type":"bool",
				"brief_description":"Hides or shows the dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"SetReturnCode":[
			{
				"return_type":"void",
				"brief_description":"Sets the return code for this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"retCode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLayoutAdaptationMode":[
			{
				"return_type":"void",
				"brief_description":"Sets the adaptation mode, overriding the global adaptation flag.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDialogLayoutAdaptationMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLayoutAdaptationLevel":[
			{
				"return_type":"void",
				"brief_description":"Sets the aggressiveness of search for buttons and sizers to be in the non-scrolling part of a layout-adapted dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"level"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIcons":[
			{
				"return_type":"void",
				"brief_description":"Sets the icons for this dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIconBundle&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icons"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIcon":[
			{
				"return_type":"void",
				"brief_description":"Sets the icon for this dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEscapeId":[
			{
				"return_type":"void",
				"brief_description":"Sets the identifier of the button which should work like the standard \"Cancel\" button in this dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLayoutAdaptationDone":[
			{
				"return_type":"void",
				"brief_description":"Marks the dialog as having been adapted, usually by making it scrollable to work with a small display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"done"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLayoutAdaptationDone":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the dialog has been adapted, usually by making it scrollable to work with a small display.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLayoutAdaptationLevel":[
			{
				"return_type":"int",
				"brief_description":"Gets a value representing the aggressiveness of search for buttons and sizers to be in the non-scrolling part of a layout-adapted dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnableLayoutAdaptation":[
			{
				"return_type":"void",
				"brief_description":"A static function enabling or disabling layout adaptation for all dialogs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DoLayoutAdaptation":[
			{
				"return_type":"bool",
				"brief_description":"Performs layout adaptation, usually if the dialog is too large to fit on the display.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanDoLayoutAdaptation":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this dialog can and should perform layout adaptation using DoLayoutAdaptation(), usually if the dialog is too large to fit on the display.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsLayoutAdaptationEnabled":[
			{
				"return_type":"bool",
				"brief_description":"A static function returning true if layout adaptation is enabled for all dialogs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxSysColourChangedEvent":{
		"wxSysColourChangedEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxSymbolPickerDialog":{
		"_implements":[
			"wxDialog"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creation: see the constructor for details about the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"symbol",
					"initialFont",
					"normalTextFont",
					"parent",
					"id",
					"caption",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxID_ANY",
					"wxGetTranslation(\"Symbols\")",
					"wxDefaultPosition",
					"wxSize(400, 300)",
					"wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxCLOSE_BOX"
				]
			}
		],
		"GetFontName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the font name (the font reflected in the font list).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFromUnicode":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the dialog is showing the full range of Unicode characters.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNormalTextFontName":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the font name used for displaying symbols in the absence of a selected font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSymbol":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the current or initial symbol as a string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSymbolChar":[
			{
				"return_type":"int",
				"brief_description":"Gets the selected symbol character as an integer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasSelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a symbol is selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFontName":[
			{
				"return_type":"void",
				"brief_description":"Sets the initial\/selected font name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFromUnicode":[
			{
				"return_type":"void",
				"brief_description":"Sets the internal flag indicating that the full Unicode range should be displayed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNormalTextFontName":[
			{
				"return_type":"void",
				"brief_description":"Sets the name of the font to be used in the absence of a selected font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSymbol":[
			{
				"return_type":"void",
				"brief_description":"Sets the symbol as a one or zero character string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUnicodeMode":[
			{
				"return_type":"void",
				"brief_description":"Sets Unicode display mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"unicodeMode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UseNormalFont":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the has specified normal text - that is, there is no selected font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxSymbolPickerDialog":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"symbol",
					"initialFont",
					"normalTextFont",
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxID_ANY",
					"_(\"Symbols\")",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxCLOSE_BOX"
				]
			}
		]
	},
	"wxGBPosition":{
		"GetCol":[
			{
				"return_type":"int",
				"brief_description":"Get the current column value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRow":[
			{
				"return_type":"int",
				"brief_description":"Get the current row value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCol":[
			{
				"return_type":"void",
				"brief_description":"Set a new column value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRow":[
			{
				"return_type":"void",
				"brief_description":"Set a new row value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGBPosition":[
			{
				"return_type":"",
				"brief_description":"Default constructor, setting the row and column to (0,0).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a new wxGBPosition, setting the row and column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"operator==":[
			{
				"return_type":"bool",
				"brief_description":"Compare equality of two wxGBPositions.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBPosition&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"p"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator!=":[
			{
				"return_type":"bool",
				"brief_description":"Compare inequality of two wxGBPositions.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBPosition&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"p"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxGBSpan":{
		"GetColspan":[
			{
				"return_type":"int",
				"brief_description":"Get the current colspan value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRowspan":[
			{
				"return_type":"int",
				"brief_description":"Get the current rowspan value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColspan":[
			{
				"return_type":"void",
				"brief_description":"Set a new colspan value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colspan"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRowspan":[
			{
				"return_type":"void",
				"brief_description":"Set a new rowspan value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rowspan"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGBSpan":[
			{
				"return_type":"",
				"brief_description":"Default constructor, setting the rowspan and colspan to (1,1) meaning that the item occupies one cell in each direction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a new wxGBSpan, setting the rowspan and colspan.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"rowspan",
					"colspan"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxGBSizerItem":{
		"_implements":[
			"wxSizerItem"
		],
		"wxGBSizerItem":[
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a spacer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxGBPosition&",
					"const wxGBSpan&",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"pos",
					"span",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultSpan",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxGBPosition&",
					"const wxGBSpan&",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"pos",
					"span",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultSpan",
					"0",
					"0",
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a sizer item for tracking a subsizer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*",
					"const wxGBPosition&",
					"const wxGBSpan&",
					"int",
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"sizer",
					"pos",
					"span",
					"flag",
					"border",
					"userData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultSpan",
					"0",
					"0",
					"NULL"
				]
			}
		],
		"SetSpan":[
			{
				"return_type":"bool",
				"brief_description":"If the item is already a member of a sizer then first ensure that there is no other item that would intersect with this one with its new spanning size, then set the new spanning.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBSpan&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"span"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPos":[
			{
				"return_type":"bool",
				"brief_description":"If the item is already a member of a sizer then first ensure that there is no other item that would intersect with this one at the new position, then set the new position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBPosition&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetGBSizer":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridBagSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Intersects":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given pos\/span would intersect with this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBPosition&",
					"const wxGBSpan&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"span"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if this item and the other item intersect.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGBSizerItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"other"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSpan":[
			{
				"return_type":"void",
				"brief_description":"Get the row and column spanning of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int&",
					"int&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"rowspan",
					"colspan"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxGBSpan",
				"brief_description":"Get the row and column spanning of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPos":[
			{
				"return_type":"void",
				"brief_description":"Get the grid position of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int&",
					"int&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxGBPosition",
				"brief_description":"Get the grid position of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGBSizer":[
			{
				"return_type":"wxGridBagSizer*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEndPos":[
			{
				"return_type":"void",
				"brief_description":"Get the row and column of the endpoint of this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int&",
					"int&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxPopupWindow":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create method for two-step creation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBORDER_NONE"
				]
			}
		],
		"Position":[
			{
				"return_type":"void",
				"brief_description":"Move the popup window to the right position, i.e. such that it is entirely visible.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"ptOrigin",
					"sizePopup"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxPopupWindow":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBORDER_NONE"
				]
			}
		],
		"_implements":[
			"wxNonOwnedWindow"
		]
	},
	"wxMDIChildFrame":{
		"wxMDIChildFrame":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMDIParentFrame*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE",
					"wxFrameNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Restore":[
			{
				"return_type":"void",
				"brief_description":"Restores this MDI child frame (unmaximizes).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Maximize":[
			{
				"return_type":"void",
				"brief_description":"Maximizes this MDI child frame.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"maximize"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"IsAlwaysMaximized":[
			{
				"return_type":"bool",
				"brief_description":"Returns true for MDI children in TDI implementations.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMDIParent":[
			{
				"return_type":"wxMDIParentFrame*",
				"brief_description":"Returns the MDI parent frame containing this child.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Used in two-step frame construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMDIParentFrame*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE",
					"wxFrameNameStr"
				]
			}
		],
		"Activate":[
			{
				"return_type":"void",
				"brief_description":"Activates this MDI child frame.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxFrame"
		]
	},
	"wxMDIClientWindow":{
		"wxMDIClientWindow":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateClient":[
			{
				"return_type":"bool",
				"brief_description":"Called by wxMDIParentFrame immediately after creating the client window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMDIParentFrame*",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"_implements":[
			"wxWindow"
		]
	},
	"wxMDIParentFrame":{
		"_implements":[
			"wxFrame"
		],
		"ActivateNext":[
			{
				"return_type":"void",
				"brief_description":"Activates the MDI child following the currently active one.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ActivatePrevious":[
			{
				"return_type":"void",
				"brief_description":"Activates the MDI child preceding the currently active one.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ArrangeIcons":[
			{
				"return_type":"void",
				"brief_description":"Arranges any iconized (minimized) MDI child windows.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Cascade":[
			{
				"return_type":"void",
				"brief_description":"Arranges the MDI child windows in a cascade.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Used in two-step frame construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE|wxVSCROLL|wxHSCROLL",
					"wxFrameNameStr"
				]
			}
		],
		"GetActiveChild":[
			{
				"return_type":"wxMDIChildFrame*",
				"brief_description":"Returns a pointer to the active MDI child, if there is one.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClientWindow":[
			{
				"return_type":"wxMDIClientWindowBase*",
				"brief_description":"Returns a pointer to the client window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindowMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Returns the current MDI Window menu.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsTDI":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the MDI implementation is tab-based.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnCreateClient":[
			{
				"return_type":"wxMDIClientWindow*",
				"brief_description":"Override this to return a different kind of client window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWindowMenu":[
			{
				"return_type":"void",
				"brief_description":"Replace the current MDI Window menu.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Tile":[
			{
				"return_type":"void",
				"brief_description":"Tiles the MDI child windows either horizontally or vertically depending on whether orient is wxHORIZONTAL or wxVERTICAL.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOrientation"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxHORIZONTAL"
				]
			}
		],
		"wxMDIParentFrame":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE|wxVSCROLL|wxHSCROLL",
					"wxFrameNameStr"
				]
			}
		]
	},
	"wxMiniFrame":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Used in two-step frame construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCAPTION|wxRESIZE_BORDER",
					"wxFrameNameStr"
				]
			}
		],
		"wxMiniFrame":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCAPTION|wxRESIZE_BORDER",
					"wxFrameNameStr"
				]
			}
		],
		"_implements":[
			"wxFrame"
		]
	},
	"wxPropertySheetDialog":{
		"_implements":[
			"wxDialog"
		],
		"AddBookCtrl":[
			{
				"return_type":"void",
				"brief_description":"Override this if you wish to add the book control in a way different from the standard way (for example, using different spacing).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSizer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Call this from your own Create function, before adding buttons and pages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_DIALOG_STYLE",
					"wxDialogNameStr"
				]
			}
		],
		"CreateBookCtrl":[
			{
				"return_type":"wxBookCtrlBase*",
				"brief_description":"Override this if you wish to create a different kind of book control; by default, the value passed to SetSheetStyle() is used to determine the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateButtons":[
			{
				"return_type":"void",
				"brief_description":"Call this to create the buttons for the dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxOK|wxCANCEL"
				]
			}
		],
		"GetBookCtrl":[
			{
				"return_type":"wxBookCtrlBase*",
				"brief_description":"Returns the book control that will contain your settings pages.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInnerSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"Returns the inner sizer that contains the book control and button sizer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSheetStyle":[
			{
				"return_type":"long",
				"brief_description":"Returns the sheet style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LayoutDialog":[
			{
				"return_type":"void",
				"brief_description":"Call this to lay out the dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"centreFlags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxBOTH"
				]
			}
		],
		"SetBookCtrl":[
			{
				"return_type":"void",
				"brief_description":"Sets the book control used for the dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBookCtrlBase*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bookCtrl"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSheetStyle":[
			{
				"return_type":"void",
				"brief_description":"You can customize the look and feel of the dialog by setting the sheet style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPropertySheetDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_DIALOG_STYLE",
					"wxDialogNameStr"
				]
			}
		]
	},
	"wxWizard":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the wizard dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxPoint&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"bitmap",
					"pos",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxNullBitmap",
					"wxDefaultPosition",
					"wxDEFAULT_DIALOG_STYLE"
				]
			}
		],
		"FitToPage":[
			{
				"return_type":"void",
				"brief_description":"This method is obsolete, use GetPageAreaSizer() instead.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxWizardPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"firstPage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"Returns the bitmap used for the wizard.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapBackgroundColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the colour that should be used to fill the area not taken up by the wizard or page bitmap, if a non-zero bitmap placement flag has been set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapPlacement":[
			{
				"return_type":"int",
				"brief_description":"Returns the flags indicating how the wizard or page bitmap should be expanded and positioned to fit the page height.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentPage":[
			{
				"return_type":"wxWizardPage*",
				"brief_description":"Get the current page while the wizard is running.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinimumBitmapWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the minimum width for the bitmap that will be constructed to contain the actual wizard or page bitmap if a non-zero bitmap placement flag has been set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size available for the pages.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasNextPage":[
			{
				"return_type":"bool",
				"brief_description":"Return true if this page is not the last one in the wizard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWizardPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasPrevPage":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this page is not the last one in the wizard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWizardPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RunWizard":[
			{
				"return_type":"bool",
				"brief_description":"Executes the wizard starting from the given page, returning true if it was successfully finished or false if user cancelled it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWizardPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"firstPage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap used for the wizard.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmapBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour that should be used to fill the area not taken up by the wizard or page bitmap, if a non-zero bitmap placement flag has been set.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmapPlacement":[
			{
				"return_type":"void",
				"brief_description":"Sets the flags indicating how the wizard or page bitmap should be expanded and positioned to fit the page height.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"placement"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBorder":[
			{
				"return_type":"void",
				"brief_description":"Sets width of border around page area.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"border"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinimumBitmapWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum width for the bitmap that will be constructed to contain the actual wizard or page bitmap if a non-zero bitmap placement flag has been set.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPageSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimal size to be made available for the wizard pages.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizePage"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxWizard":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor which really creates the wizard  if you use this constructor, you shouldn't call Create().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxPoint&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"bitmap",
					"pos",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxNullBitmap",
					"wxDefaultPosition",
					"wxDEFAULT_DIALOG_STYLE"
				]
			}
		],
		"_implements":[
			"wxDialog"
		],
		"GetPageAreaSizer":[
			{
				"return_type":"wxSizer*",
				"brief_description":"Returns pointer to page area sizer.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxWizardEvent":{
		"GetDirection":[
			{
				"return_type":"bool",
				"brief_description":"Return the direction in which the page is changing: for EVT_WIZARD_PAGE_CHANGING, return true if we're going forward or false otherwise and for EVT_WIZARD_PAGE_CHANGED return true if we came from the previous page and false if we returned from the next one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxWizardEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"bool",
					"wxWizardPage*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"id",
					"direction",
					"page"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"wxID_ANY",
					"true",
					"0"
				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		],
		"GetPage":[
			{
				"return_type":"wxWizardPage*",
				"brief_description":"Returns the wxWizardPage which was active when this event was generated.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxWizardPage":{
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"This method is called by wxWizard to get the bitmap to display alongside the page.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrev":[
			{
				"return_type":"wxWizardPage*",
				"brief_description":"Get the page which should be shown when the user chooses the \"Back\" button: if NULL is returned, this button will be disabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxWizardPage":[
			{
				"return_type":"",
				"brief_description":"Constructor accepts an optional bitmap which will be used for this page instead of the default one for this wizard (note that all bitmaps used should be of the same size).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWizard*",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullBitmap"
				]
			}
		],
		"_implements":[
			"wxPanel"
		],
		"GetNext":[
			{
				"return_type":"wxWizardPage*",
				"brief_description":"Get the page which should be shown when the user chooses the \"Next\" button: if NULL is returned, this button will be disabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxWizardPageSimple":{
		"_implements":[
			"wxWizardPage"
		],
		"Chain":[
			{
				"return_type":"void",
				"brief_description":"A convenience function to make the pages follow each other.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxWizardPageSimple*",
					"wxWizardPageSimple*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"first",
					"second"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPrev":[
			{
				"return_type":"void",
				"brief_description":"Sets the previous page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWizardPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prev"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxWizardPageSimple":[
			{
				"return_type":"",
				"brief_description":"Constructor takes the previous and next pages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWizard*",
					"wxWizardPage*",
					"wxWizardPage*",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"prev",
					"next",
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL",
					"NULL",
					"wxNullBitmap"
				]
			}
		],
		"SetNext":[
			{
				"return_type":"void",
				"brief_description":"Sets the next page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWizardPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"next"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxWindowModalDialogEvent":{
		"Clone":[
			{
				"return_type":"wxEvent*",
				"brief_description":"Clone the event.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDialog":[
			{
				"return_type":"wxDialog*",
				"brief_description":"Return the corresponding dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetReturnCode":[
			{
				"return_type":"int",
				"brief_description":"Return the dialog's return code.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxWindowModalDialogEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxTreeListItem":{
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the item is valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxTreeListItem":[
			{
				"return_type":"",
				"brief_description":"Only the default constructor is publicly accessible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxTreebook":{
		"_implements":[
			"wxBookCtrlBase"
		],
		"AddPage":[
			{
				"return_type":"bool",
				"brief_description":"Adds a new page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"page",
					"text",
					"bSelect",
					"imageId"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false",
					"wxNOT_FOUND"
				]
			}
		],
		"AddSubPage":[
			{
				"return_type":"bool",
				"brief_description":"Adds a new child-page to the last top-level page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"page",
					"text",
					"bSelect",
					"imageId"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false",
					"wxNOT_FOUND"
				]
			}
		],
		"CollapseNode":[
			{
				"return_type":"bool",
				"brief_description":"Shortcut for ExpandNode( pageId, false ).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates a treebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxBK_DEFAULT",
					"wxEmptyString"
				]
			}
		],
		"DeletePage":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the page at the specified position and all its children.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pagePos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ExpandNode":[
			{
				"return_type":"bool",
				"brief_description":"Expands (collapses) the pageId node.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pageId",
					"expand"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"GetPageParent":[
			{
				"return_type":"int",
				"brief_description":"Returns the parent page of the given one or wxNOT_FOUND if this is a top-level page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the currently selected page, or wxNOT_FOUND if none was selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertPage":[
			{
				"return_type":"bool",
				"brief_description":"Inserts a new page just before the page indicated by pagePos.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pagePos",
					"page",
					"text",
					"bSelect",
					"imageId"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false",
					"wxNOT_FOUND"
				]
			}
		],
		"InsertSubPage":[
			{
				"return_type":"bool",
				"brief_description":"Inserts a sub page under the specified page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxWindow*",
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pagePos",
					"page",
					"text",
					"bSelect",
					"imageId"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"false",
					"wxNOT_FOUND"
				]
			}
		],
		"IsNodeExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the page represented by pageId is expanded.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxTreebook":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an empty wxTreebook.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxBK_DEFAULT",
					"wxEmptyString"
				]
			}
		]
	},
	"wxTreeListCtrl":{
		"_implements":[
			"wxWindow"
		],
		"wxTreeListCtrl":[
			{
				"return_type":"",
				"brief_description":"Full constructing, creating the object and its window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTL_DEFAULT_STYLE",
					"wxTreeListCtrlNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor, call Create() later.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WidthFor":[
			{
				"return_type":"int",
				"brief_description":"Get the width appropriate for showing the given text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UpdateItemParentStateRecursively":[
			{
				"return_type":"void",
				"brief_description":"Update the state of the parent item to reflect the checked state of its children.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UnselectAll":[
			{
				"return_type":"void",
				"brief_description":"Deselect all the control items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Unselect":[
			{
				"return_type":"void",
				"brief_description":"Deselect the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UncheckItem":[
			{
				"return_type":"void",
				"brief_description":"Uncheck the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSortColumn":[
			{
				"return_type":"void",
				"brief_description":"Sorting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"ascendingOrder"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetItemText":[
			{
				"return_type":"void",
				"brief_description":"Set the text of the first column of the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the text of the specified column of the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"unsigned",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"col",
					"text"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetItemImage":[
			{
				"return_type":"void",
				"brief_description":"Set the images for the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"closed",
					"opened"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NO_IMAGE"
				]
			}
		],
		"SetItemData":[
			{
				"return_type":"void",
				"brief_description":"Set the data associated with the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemComparator":[
			{
				"return_type":"void",
				"brief_description":"Set the object to use for comparing the items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItemComparator*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"comparator"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the image list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColumnWidth":[
			{
				"return_type":"void",
				"brief_description":"Change the width of the given column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"width"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SelectAll":[
			{
				"return_type":"void",
				"brief_description":"Select all the control items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Select":[
			{
				"return_type":"void",
				"brief_description":"Select the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrependItem":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Same as InsertItem() with wxTLI_FIRST.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"const wxString&",
					"int",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"imageClosed",
					"imageOpened",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NO_IMAGE",
					"NO_IMAGE",
					"NULL"
				]
			}
		],
		"IsSelected":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the item is selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Return whether the given item is expanded.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertItem":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Insert a new item into the tree.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"wxTreeListItem",
					"const wxString&",
					"int",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"previous",
					"text",
					"imageClosed",
					"imageOpened",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"NO_IMAGE",
					"NO_IMAGE",
					"NULL"
				]
			}
		],
		"GetView":[
			{
				"return_type":"wxWindow*",
				"brief_description":"View window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSortColumn":[
			{
				"return_type":"bool",
				"brief_description":"Return the column currently used for sorting, if any.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned*",
					"bool*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"ascendingOrder"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"GetSelections":[
			{
				"return_type":"unsigned",
				"brief_description":"Fill in the provided array with all the selected items.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItems&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selections"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelection":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Selection methods.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRootItem":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Methods for the tree navigation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNextSibling":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Return the next sibling of the given item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetNextItem":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Get item after the given one in the depth-first tree-traversal order.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemText":[
			{
				"return_type":"const wxString&",
				"brief_description":"Items attributes.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"unsigned"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"GetItemParent":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Return the parent of the given item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFirstItem":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Return the first item in the tree.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFirstChild":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Return the first child of the given item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDataView":[
			{
				"return_type":"wxDataViewCtrl*",
				"brief_description":"Return the view part of this control as wxDataViewCtrl.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumnWidth":[
			{
				"return_type":"int",
				"brief_description":"Get the current width of the given column in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColumnCount":[
			{
				"return_type":"unsigned",
				"brief_description":"Return the total number of columns.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCheckedState":[
			{
				"return_type":"wxCheckBoxState",
				"brief_description":"Return the checked state of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Expand":[
			{
				"return_type":"void",
				"brief_description":"Expanding and collapsing tree branches.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteItem":[
			{
				"return_type":"void",
				"brief_description":"Delete the specified item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteColumn":[
			{
				"return_type":"bool",
				"brief_description":"Delete the column with the given index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteAllItems":[
			{
				"return_type":"void",
				"brief_description":"Delete all tree items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create the control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTL_DEFAULT_STYLE",
					"wxTreeListCtrlNameStr"
				]
			}
		],
		"Collapse":[
			{
				"return_type":"void",
				"brief_description":"Collapse the given tree branch.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearColumns":[
			{
				"return_type":"void",
				"brief_description":"Delete all columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CheckItemRecursively":[
			{
				"return_type":"void",
				"brief_description":"Change the checked state of the given item and all its children.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"wxCheckBoxState"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxCHK_CHECKED"
				]
			}
		],
		"CheckItem":[
			{
				"return_type":"void",
				"brief_description":"Checkbox handling.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"wxCheckBoxState"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxCHK_CHECKED"
				]
			}
		],
		"AssignImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the image list and gives its ownership to the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AreAllChildrenInState":[
			{
				"return_type":"bool",
				"brief_description":"Return true if all children of the given item are in the specified state.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"wxCheckBoxState"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"state"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AppendItem":[
			{
				"return_type":"wxTreeListItem",
				"brief_description":"Adding and removing items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTreeListItem",
					"const wxString&",
					"int",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"imageClosed",
					"imageOpened",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NO_IMAGE",
					"NO_IMAGE",
					"NULL"
				]
			}
		],
		"AppendColumn":[
			{
				"return_type":"int",
				"brief_description":"Column methods.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"title",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxCOL_WIDTH_AUTOSIZE",
					"wxALIGN_LEFT",
					"wxCOL_RESIZABLE"
				]
			}
		]
	},
	"wxSound":{
		"_implements":[
			"wxObject"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Constructs a wave object from a file or resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"fileName",
					"isResource"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the object contains a successfully loaded file or resource, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPlaying":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a sound is played at the moment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxgtk",
					"wxosx"
				]
			}
		],
		"Play":[
			{
				"return_type":"bool",
				"brief_description":"Plays the sound file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxSOUND_ASYNC"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Plays the sound file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxSOUND_ASYNC"
				]
			}
		],
		"Stop":[
			{
				"return_type":"void",
				"brief_description":"If a sound is played, this function stops it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxSound":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a wave object from a file or, under Windows, from a Windows resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"fileName",
					"isResource"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a wave object from in-memory data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const void*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"size",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxSimpleHtmlListBox":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the HTML listbox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"const wxString",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					true,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"n",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"NULL",
					"wxHLB_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxSimpleHtmlListBoxNameStr"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates the HTML listbox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxHLB_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxSimpleHtmlListBoxNameStr"
				]
			}
		],
		"wxSimpleHtmlListBox":[
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing the HTML list box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"const wxArrayString&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"choices",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"wxHLB_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxSimpleHtmlListBoxNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor, you must call Create() later.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxHtmlListBox",
			"wxItemContainer"
		]
	},
	"wxFileSystem":{
		"wxFileSystem":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"URLToFileName":[
			{
				"return_type":"wxFileName",
				"brief_description":"Converts URL into a well-formed filename.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"url"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OpenFile":[
			{
				"return_type":"wxFSFile*",
				"brief_description":"Opens the file and returns a pointer to a wxFSFile object or NULL if failed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"location",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFS_READ"
				]
			}
		],
		"HasHandlerForPath":[
			{
				"return_type":"bool",
				"brief_description":"This static function returns true if there is a registered handler which can open the given location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the actual path (set by wxFileSystem::ChangePathTo).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindNext":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the next filename that matches the parameters passed to FindFirst().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindFirst":[
			{
				"return_type":"wxString",
				"brief_description":"Works like wxFindFirstFile().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"wildcard",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"FindFileInPath":[
			{
				"return_type":"bool",
				"brief_description":"Looks for the file with the given name file in a colon or semi-colon (depending on the current platform) separated list of directories in path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pStr",
					"path",
					"file"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"FileNameToURL":[
			{
				"return_type":"wxString",
				"brief_description":"Converts a wxFileName into an URL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ChangePathTo":[
			{
				"return_type":"void",
				"brief_description":"Sets the current location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"location",
					"is_dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"AddHandler":[
			{
				"return_type":"void",
				"brief_description":"This static function adds new handler into the list of handlers (see wxFileSystemHandler) which provide access to virtual FS.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxFileSystemHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxFileSystemHandler":{
		"_implements":[
			"wxObject"
		],
		"CanOpen":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the handler is able to open this file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindFirst":[
			{
				"return_type":"wxString",
				"brief_description":"Works like wxFindFirstFile().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"wildcard",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"FindNext":[
			{
				"return_type":"wxString",
				"brief_description":"Returns next filename that matches parameters passed to wxFileSystem::FindFirst.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAnchor":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the anchor if present in the location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLeftLocation":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the left location string extracted from location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMimeTypeFromExt":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the MIME type based on extension of location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetProtocol":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the protocol string extracted from location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRightLocation":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the right location string extracted from location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"location"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OpenFile":[
			{
				"return_type":"wxFSFile*",
				"brief_description":"Opens the file and returns wxFSFile pointer or NULL if failed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileSystem&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"fs",
					"location"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxFileSystemHandler":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxNativeFontInfo":{
		"wxNativeFontInfo":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxNativeFontInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FromString":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FromUserString":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetEncoding":[
			{
				"return_type":"wxFontEncoding",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFaceName":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFamily":[
			{
				"return_type":"wxFontFamily",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPointSize":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"wxFontStyle",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUnderlined":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWeight":[
			{
				"return_type":"wxFontWeight",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Init":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InitFromFont":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEncoding":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFaceName":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"facename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"facenames"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFamily":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontFamily"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"family"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPointSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pointsize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontStyle"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUnderlined":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"underlined"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWeight":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontWeight"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"weight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ToString":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToUserString":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxDateEvent":{
		"GetDate":[
			{
				"return_type":"const wxDateTime&",
				"brief_description":"Returns the date.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDate":[
			{
				"return_type":"void",
				"brief_description":"Sets the date carried by the event, normally only used by the library internally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"date"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxBitmapToggleButton":{
		"_implements":[
			"wxToggleButton"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create method for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"val",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxCheckBoxNameStr"
				]
			}
		],
		"GetValue":[
			{
				"return_type":"bool",
				"brief_description":"Gets the state of the toggle button.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the toggle button to the given state.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxBitmapToggleButton":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a toggle button with the bitmap label.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"val",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxCheckBoxNameStr"
				]
			}
		]
	},
	"wxCalendarDateAttr":{
		"wxCalendarDateAttr":[
			{
				"return_type":"",
				"brief_description":"Constructor using default properties except the given border.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCalendarDateBorder",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"border",
					"colBorder"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullColour"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for specifying all wxCalendarDateAttr properties.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&",
					"const wxColour&",
					"const wxFont&",
					"wxCalendarDateBorder"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"colText",
					"colBack",
					"colBorder",
					"font",
					"border"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxNullColour",
					"wxNullColour",
					"wxNullColour",
					"wxNullFont",
					"wxCAL_BORDER_NONE"
				]
			}
		],
		"SetTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the text (foreground) colour to use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colText"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHoliday":[
			{
				"return_type":"void",
				"brief_description":"If holiday is true, this calendar day will be displayed as a holiday.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"holiday"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font to use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBorderColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the border colour to use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBorder":[
			{
				"return_type":"void",
				"brief_description":"Sets the border to use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCalendarDateBorder"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"border"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the text background colour to use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colBack"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsHoliday":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this calendar day is displayed as a holiday.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasTextColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a non-default text foreground colour is set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFont":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a non-default font is set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBorderColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a non-default border colour is set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBorder":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a non-default (i.e. any) border is set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBackgroundColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a non-default text background colour is set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the text colour set for the calendar date.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMark":[
			{
				"return_type":"const wxCalendarDateAttr&",
				"brief_description":"Used (internally) by the generic wxCalendarCtrl::Mark().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"const wxFont&",
				"brief_description":"Returns the font set for the calendar date.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBorderColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the border colour set for the calendar date.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBorder":[
			{
				"return_type":"wxCalendarDateBorder",
				"brief_description":"Returns the border set for the calendar date.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBackgroundColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the background colour set for the calendar date.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMark":[
			{
				"return_type":"void",
				"brief_description":"Set the attributes that will be used to Mark() days on the generic wxCalendarCtrl.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxCalendarDateAttr&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"m"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxCalendarCtrl":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxDateTime&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"date",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultDateTime",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCAL_SHOW_HOLIDAYS",
					"wxCalendarNameStr"
				]
			}
		],
		"EnableHolidayDisplay":[
			{
				"return_type":"void",
				"brief_description":"This function should be used instead of changing wxCAL_SHOW_HOLIDAYS style bit directly.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"display"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EnableMonthChange":[
			{
				"return_type":"bool",
				"brief_description":"This function should be used instead of changing wxCAL_NO_MONTH_CHANGE style bit.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"GetAttr":[
			{
				"return_type":"wxCalendarDateAttr*",
				"brief_description":"Returns the attribute for the given date (should be in the range 1...31).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"day"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDate":[
			{
				"return_type":"wxDateTime",
				"brief_description":"Gets the currently selected date.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDateRange":[
			{
				"return_type":"bool",
				"brief_description":"Returns the limits currently being used.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDateTime*",
					"wxDateTime*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"lowerdate",
					"upperdate"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetHeaderColourBg":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Gets the background colour of the header part of the calendar window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHeaderColourFg":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Gets the foreground colour of the header part of the calendar window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHighlightColourBg":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Gets the background highlight colour.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHighlightColourFg":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Gets the foreground highlight colour.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHolidayColourBg":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Return the background colour currently used for holiday highlighting.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHolidayColourFg":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Return the foreground colour currently used for holiday highlighting.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HitTest":[
			{
				"return_type":"wxCalendarHitTestResult",
				"brief_description":"Returns one of wxCalendarHitTestResult constants and fills either date or wd pointer with the corresponding value depending on the hit test code.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"wxDateTime*",
					"wxDateTime::WeekDay*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"date",
					"wd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL",
					"NULL"
				]
			}
		],
		"Mark":[
			{
				"return_type":"void",
				"brief_description":"Mark or unmark the day.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"day",
					"mark"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ResetAttr":[
			{
				"return_type":"void",
				"brief_description":"Clears any attributes associated with the given day (in the range 1...31).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"day"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAttr":[
			{
				"return_type":"void",
				"brief_description":"Associates the attribute with the specified date (in the range 1...31).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxCalendarDateAttr*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"day",
					"attr"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetDate":[
			{
				"return_type":"bool",
				"brief_description":"Sets the current date.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"date"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDateRange":[
			{
				"return_type":"bool",
				"brief_description":"Restrict the dates that can be selected in the control to the specified range.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime&",
					"const wxDateTime&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"lowerdate",
					"upperdate"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxDefaultDateTime",
					"wxDefaultDateTime"
				]
			}
		],
		"SetHeaderColours":[
			{
				"return_type":"void",
				"brief_description":"Set the colours used for painting the weekdays at the top of the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"colFg",
					"colBg"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetHighlightColours":[
			{
				"return_type":"void",
				"brief_description":"Set the colours to be used for highlighting the currently selected date.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"colFg",
					"colBg"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetHoliday":[
			{
				"return_type":"void",
				"brief_description":"Marks the specified day as being a holiday in the current month.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"day"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHolidayColours":[
			{
				"return_type":"void",
				"brief_description":"Sets the colours to be used for the holidays highlighting.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"colFg",
					"colBg"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxCalendarCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Does the same as Create() method.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxDateTime&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"date",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultDateTime",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCAL_SHOW_HOLIDAYS",
					"wxCalendarNameStr"
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxMask":{
		"_implements":[
			"wxObject"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Constructs a mask from a bitmap and a palette index that indicates the background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Constructs a mask from a monochrome bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Constructs a mask from a bitmap and a colour that indicates the background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"colour"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxMask":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a mask from a bitmap and a palette index that indicates the background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a mask from a monochrome bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a mask from a bitmap and a colour that indicates the background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"colour"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxToolTip":{
		"wxToolTip":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTip":[
			{
				"return_type":"void",
				"brief_description":"Set the tooltip text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetReshow":[
			{
				"return_type":"void",
				"brief_description":"Set the delay between subsequent tooltips to appear.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"msecs"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDelay":[
			{
				"return_type":"void",
				"brief_description":"Set the delay after which the tooltip appears.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"msecs"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAutoPop":[
			{
				"return_type":"void",
				"brief_description":"Set the delay after which the tooltip disappears or how long a tooltip remains visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"msecs"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Get the associated window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTip":[
			{
				"return_type":"wxString",
				"brief_description":"Get the tooltip text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Enable":[
			{
				"return_type":"void",
				"brief_description":"Enable or disable tooltips globally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxCaret":{
		"wxCaret":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a caret with the given size (in pixels) and associates it with the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Show":[
			{
				"return_type":"void",
				"brief_description":"Shows or hides the caret.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetSize":[
			{
				"return_type":"void",
				"brief_description":"Changes the size of the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Changes the size of the caret.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetBlinkTime":[
			{
				"return_type":"void",
				"brief_description":"Sets the blink time for all the carets.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"milliseconds"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Move":[
			{
				"return_type":"void",
				"brief_description":"Move the caret to given position (in logical coordinates).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Move the caret to given position (in logical coordinates).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsVisible":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the caret is visible and false if it is permanently hidden (if it is blinking and not shown currently but will be after the next blink, this method still returns true).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the caret was created successfully.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Hide":[
			{
				"return_type":"void",
				"brief_description":"Hides the caret, same as Show(false).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Get the window the caret is associated with.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the caret size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"void",
				"brief_description":"Get the caret size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetBlinkTime":[
			{
				"return_type":"int",
				"brief_description":"Returns the blink time which is measured in milliseconds and is the time elapsed between 2 inversions of the caret (blink time of the caret is the same for all carets, so this functions is static).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Get the caret position (in pixels).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"void",
				"brief_description":"Get the caret position (in pixels).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxRegion":{
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Clears the current region.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGDIObject"
		],
		"Contains":[
			{
				"return_type":"wxRegionContain",
				"brief_description":"Returns a value indicating whether the given point is contained within the region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxRegionContain",
				"brief_description":"Returns a value indicating whether the given point is contained within the region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxRegionContain",
				"brief_description":"Returns a value indicating whether the given rectangle is contained within the region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"wxRegionContain",
				"brief_description":"Returns a value indicating whether the given rectangle is contained within the region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ConvertToBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Convert the region to a black and white bitmap with the white pixels being inside the region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBox":[
			{
				"return_type":"void",
				"brief_description":"Returns the outer bounds of the region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord&",
					"wxCoord&",
					"wxCoord&",
					"wxCoord&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"wxRect",
				"brief_description":"Returns the outer bounds of the region.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Intersect":[
			{
				"return_type":"bool",
				"brief_description":"Finds the intersection of this region and another, rectangular region, specified using position and size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the intersection of this region and another, rectangular region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the intersection of this region and another region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the region is empty, false otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEqual":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the region is equal to, i.e. covers the same area as, another one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Offset":[
			{
				"return_type":"bool",
				"brief_description":"Moves the region by the specified offsets in horizontal and vertical directions.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Moves the region by the specified offsets in horizontal and vertical directions.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Subtract":[
			{
				"return_type":"bool",
				"brief_description":"Subtracts a rectangular region from this region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Subtracts a region from this region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Union":[
			{
				"return_type":"bool",
				"brief_description":"Finds the union of this region and another, rectangular region, specified using position and size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the union of this region and another, rectangular region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the union of this region and another region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the union of this region and the non-transparent pixels of a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the union of this region and the non-transparent pixels of a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"const wxColour&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"bmp",
					"transColour",
					"tolerance"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0"
				]
			}
		],
		"Xor":[
			{
				"return_type":"bool",
				"brief_description":"Finds the Xor of this region and another, rectangular region, specified using position and size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the Xor of this region and another, rectangular region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Finds the Xor of this region and another region.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxRegion":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a rectangular region with the given position and size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a rectangular region from the top left point and the bottom right point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"topLeft",
					"bottomRight"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a rectangular region a wxRect object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor, uses Reference Counting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRegion&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"region"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a region corresponding to the polygon made of n points in the provided array.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxPoint*",
					"wxPolygonFillMode"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"n",
					"points",
					"fillStyle"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxODDEVEN_RULE"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a region using a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a region using the non-transparent pixels of a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"const wxColour&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"bmp",
					"transColour",
					"tolerance"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0"
				]
			}
		]
	},
	"wxPoint2DDouble":{
		"wxPoint2DDouble":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDouble",
					"wxDouble"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DDouble&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVectorLength":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDouble"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"length"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVectorAngle":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDouble"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"degrees"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Normalize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVectorLength":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVectorAngle":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDotProduct":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DDouble&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"vec"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDistanceSquare":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DDouble&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDistance":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DDouble&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCrossProduct":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DDouble&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"vec"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFloor":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInt32*",
					"wxInt32*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRounded":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInt32*",
					"wxInt32*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxPoint2DInt":{
		"GetCrossProduct":[
			{
				"return_type":"wxInt32",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"vec"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDistance":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDistanceSquare":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDotProduct":[
			{
				"return_type":"wxInt32",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"vec"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetVectorAngle":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVectorLength":[
			{
				"return_type":"wxDouble",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Normalize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetVectorAngle":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDouble"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"degrees"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVectorLength":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDouble"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"length"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPoint2DInt":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInt32",
					"wxInt32"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint2DInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFloor":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInt32*",
					"wxInt32*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRounded":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInt32*",
					"wxInt32*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxPopupTransientWindow":{
		"Dismiss":[
			{
				"return_type":"void",
				"brief_description":"Hide the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Popup":[
			{
				"return_type":"void",
				"brief_description":"Popup the window (this will show it too).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"focus"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"ProcessLeftDown":[
			{
				"return_type":"bool",
				"brief_description":"Called when a mouse is pressed while the popup is shown.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMouseEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPopupTransientWindow":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBORDER_NONE"
				]
			}
		],
		"_implements":[
			"wxPopupWindow"
		]
	},
	"wxProcessEvent":{
		"GetExitCode":[
			{
				"return_type":"int",
				"brief_description":"Returns the exist status.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPid":[
			{
				"return_type":"int",
				"brief_description":"Returns the process id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxProcessEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"pid",
					"exitcode"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0",
					"0"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxProgressDialog":{
		"_implements":[
			"wxDialog",
			"wxGenericProgressDialog"
		],
		"wxProgressDialog":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"int",
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"title",
					"message",
					"maximum",
					"parent",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"100",
					"NULL",
					"wxPD_APP_MODAL|wxPD_AUTO_HIDE"
				]
			}
		]
	},
	"wxGraphicsMatrix":{
		"_implements":[
			"wxGraphicsObject"
		]
	},
	"wxGraphicsRenderer":{
		"_implements":[
			"wxObject"
		]
	},
	"wxWindowDC":{
		"wxWindowDC":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxDC"
		]
	},
	"wxWindowCreateEvent":{
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Return the window being created.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxWindowCreateEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxWindowDestroyEvent":{
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Return the window being destroyed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxWindowDestroyEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxGraphicsGradientStop":{
		"GetColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Return the stop colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"float",
				"brief_description":"Return the stop position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Change the stop colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"Change the stop position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"float"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGraphicsGradientStop":[
			{
				"return_type":"",
				"brief_description":"Creates a stop with the given colour and position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxColour",
					"float"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"pos"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxTransparentColour",
					"0."
				]
			}
		]
	},
	"wxGraphicsGradientStops":{
		"Add":[
			{
				"return_type":"void",
				"brief_description":"Add a new stop.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGraphicsGradientStop&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stop"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Add a new stop.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxColour",
					"float"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of stops.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEndColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the end colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStartColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the start colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Item":[
			{
				"return_type":"wxGraphicsGradientStop",
				"brief_description":"Returns the stop at the given index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEndColour":[
			{
				"return_type":"void",
				"brief_description":"Set the end colour to col.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxColour"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStartColour":[
			{
				"return_type":"void",
				"brief_description":"Set the start colour to col.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxColour"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGraphicsGradientStops":[
			{
				"return_type":"",
				"brief_description":"Initializes the gradient stops with the given boundary colours.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxColour",
					"wxColour"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"startCol",
					"endCol"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxTransparentColour",
					"wxTransparentColour"
				]
			}
		]
	},
	"wxEventFilter":{
		"FilterEvent":[
			{
				"return_type":"int",
				"brief_description":"Override this method to implement event pre-processing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxEventFilter":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxEventBlocker":{
		"Block":[
			{
				"return_type":"void",
				"brief_description":"Adds to the list of event types which should be blocked the given eventType.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"eventType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxEventBlocker":[
			{
				"return_type":"",
				"brief_description":"Constructs the blocker for the given window and for the given event type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxEventType"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"win",
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			}
		],
		"_implements":[
			"wxEvtHandler"
		]
	},
	"wxEraseEvent":{
		"GetDC":[
			{
				"return_type":"wxDC*",
				"brief_description":"Returns the device context associated with the erase event to draw on.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxEraseEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxDC*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"dc"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"NULL"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxEventLoopActivator":{
		"wxEventLoopActivator":[
			{
				"return_type":"",
				"brief_description":"Makes the loop passed as the parameter currently active.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventLoopBase*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"loop"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxEventLoopBase":{
		"Dispatch":[
			{
				"return_type":"bool",
				"brief_description":"Dispatches the next event in the windowing system event queue.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DispatchTimeout":[
			{
				"return_type":"int",
				"brief_description":"Dispatch an event but not wait longer than the specified timeout for it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"timeout"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetActive":[
			{
				"return_type":"wxEventLoopBase*",
				"brief_description":"Return the currently active (running) event loop.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEventAllowedInsideYield":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given event category is allowed inside a YieldFor() call (i.e.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventCategory"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cat"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsMain":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this is the main loop executed by wxApp::OnRun().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Use this to check whether the event loop was successfully created before using it.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsRunning":[
			{
				"return_type":"bool",
				"brief_description":"Return true if this event loop is currently running.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsYielding":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if called from inside Yield() or from inside YieldFor().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnExit":[
			{
				"return_type":"void",
				"brief_description":"This function is called before the event loop terminates, whether this happens normally (because of Exit() call) or abnormally (because of an exception thrown from inside the loop).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Pending":[
			{
				"return_type":"bool",
				"brief_description":"Return true if any events are available.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ProcessIdle":[
			{
				"return_type":"bool",
				"brief_description":"This virtual function is called when the application becomes idle and normally just sends wxIdleEvent to all interested parties.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Run":[
			{
				"return_type":"int",
				"brief_description":"Start the event loop, return the exit code when it is finished.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Exit":[
			{
				"return_type":"void",
				"brief_description":"Exit the currently running loop with the given exit code.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rc"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"SetActive":[
			{
				"return_type":"void",
				"brief_description":"Set currently active (running) event loop.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxEventLoopBase*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"loop"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"WakeUp":[
			{
				"return_type":"void",
				"brief_description":"Called by wxWidgets to wake up the event loop even if it is currently blocked inside Dispatch().",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WakeUpIdle":[
			{
				"return_type":"void",
				"brief_description":"Makes sure that idle events are sent again.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Yield":[
			{
				"return_type":"bool",
				"brief_description":"Yields control to pending messages in the windowing system.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"onlyIfNeeded"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"YieldFor":[
			{
				"return_type":"bool",
				"brief_description":"Works like Yield() with onlyIfNeeded == true, except that it allows the caller to specify a mask of the wxEventCategory values which indicates which events should be processed and which should instead be \"delayed\" (i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"eventsToProcess"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxPickerBase":{
		"_implements":[
			"wxControl"
		],
		"GetInternalMargin":[
			{
				"return_type":"int",
				"brief_description":"Returns the margin (in pixel) between the picker and the text control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPickerCtrl":[
			{
				"return_type":"wxControl*",
				"brief_description":"Returns the native implementation of the real picker control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPickerCtrlProportion":[
			{
				"return_type":"int",
				"brief_description":"Returns the proportion value of the picker.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextCtrl":[
			{
				"return_type":"wxTextCtrl*",
				"brief_description":"Returns a pointer to the text control handled by this window or NULL if the wxPB_USE_TEXTCTRL style was not specified when this control was created.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextCtrlProportion":[
			{
				"return_type":"int",
				"brief_description":"Returns the proportion value of the text control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasTextCtrl":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this window has a valid text control (i.e. if the wxPB_USE_TEXTCTRL style was given when creating this control).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPickerCtrlGrowable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the picker control is growable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsTextCtrlGrowable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the text control is growable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetInternalMargin":[
			{
				"return_type":"void",
				"brief_description":"Sets the margin (in pixel) between the picker and the text control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"margin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPickerCtrlGrowable":[
			{
				"return_type":"void",
				"brief_description":"Sets the picker control as growable when grow is true.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"grow"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetPickerCtrlProportion":[
			{
				"return_type":"void",
				"brief_description":"Sets the proportion value of the picker.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prop"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextCtrlGrowable":[
			{
				"return_type":"void",
				"brief_description":"Sets the text control as growable when grow is true.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"grow"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetTextCtrlProportion":[
			{
				"return_type":"void",
				"brief_description":"Sets the proportion value of the text control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prop"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxGridEvent":{
		"AltDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Alt key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ControlDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Control key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCol":[
			{
				"return_type":"int",
				"brief_description":"Column at which the event occurred.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Position in pixels at which the event occurred.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRow":[
			{
				"return_type":"int",
				"brief_description":"Row at which the event occurred.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MetaDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Meta key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Selecting":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the user is selecting grid cells, or false if deselecting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShiftDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Shift key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxGridEvent":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for initializing all event attributes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxEventType",
					"wxObject*",
					"int",
					"int",
					"int",
					"int",
					"bool",
					"const wxKeyboardState&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"type",
					"obj",
					"row",
					"col",
					"x",
					"y",
					"sel",
					"kbd"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"-1",
					"-1",
					"-1",
					"-1",
					"true",
					"wxKeyboardState()"
				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxUpdateUIEvent":{
		"CanUpdate":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if it is appropriate to update (send UI update events to) this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Check":[
			{
				"return_type":"void",
				"brief_description":"Check or uncheck the UI element.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"check"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Enable":[
			{
				"return_type":"void",
				"brief_description":"Enable or disable the UI element.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the UI element should be enabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetChecked":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the UI element should be checked.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMode":[
			{
				"return_type":"wxUpdateUIMode",
				"brief_description":"Static function returning a value specifying how wxWidgets will send update events: to all windows, or only to those which specify that they will process the events.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSetChecked":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the application has called Check().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSetEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the application has called Enable().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSetShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the application has called Show().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSetText":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the application has called SetText().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the UI element should be shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text that should be set for the UI element.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUpdateInterval":[
			{
				"return_type":"long",
				"brief_description":"Returns the current interval between updates in milliseconds.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ResetUpdateTime":[
			{
				"return_type":"void",
				"brief_description":"Used internally to reset the last-updated time to the current time.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetMode":[
			{
				"return_type":"void",
				"brief_description":"Specify how wxWidgets will send update events: to all windows, or only to those which specify that they will process the events.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxUpdateUIMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Sets the text for this UI element.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUpdateInterval":[
			{
				"return_type":"void",
				"brief_description":"Sets the interval between updates in milliseconds.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"updateInterval"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Show":[
			{
				"return_type":"void",
				"brief_description":"Show or hide the UI element.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxUpdateUIEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"commandId"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxHelpEvent":{
		"GetOrigin":[
			{
				"return_type":"wxHelpEvent::Origin",
				"brief_description":"Returns the origin of the help event which is one of the wxHelpEvent::Origin values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"const wxPoint&",
				"brief_description":"Returns the left-click position of the mouse, in screen coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetOrigin":[
			{
				"return_type":"void",
				"brief_description":"Set the help event origin, only used internally by wxWidgets normally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHelpEvent::Origin"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"origin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"Sets the left-click position of the mouse, in screen coordinates.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHelpEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"wxWindowID",
					"const wxPoint&",
					"wxHelpEvent::Origin"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"winid",
					"pt",
					"origin"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"wxDefaultPosition",
					"Origin_Unknown"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxLayoutConstraints":{
		"_implements":[
			"wxObject"
		],
		"AreSatisfied":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxLayoutConstraints":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SatisfyConstraints":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"win",
					"noChanges"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxDropTarget":{
		"OnLeave":[
			{
				"return_type":"void",
				"brief_description":"Called when the mouse leaves the drop target.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDropTarget":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"SetDataObject":[
			{
				"return_type":"void",
				"brief_description":"Sets the data wxDataObject associated with the drop target and deletes any previously associated data object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnDragOver":[
			{
				"return_type":"wxDragResult",
				"brief_description":"Called when the mouse is being dragged over the drop target.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxDragResult"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"defResult"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnEnter":[
			{
				"return_type":"wxDragResult",
				"brief_description":"Called when the mouse enters the drop target.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxDragResult"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"defResult"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetData":[
			{
				"return_type":"bool",
				"brief_description":"This method may only be called from within OnData().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnData":[
			{
				"return_type":"wxDragResult",
				"brief_description":"Called after OnDrop() returns true.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"wxDragResult"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"defResult"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnDrop":[
			{
				"return_type":"bool",
				"brief_description":"Called when the user drops a data object on the target.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxObject":{
		"wxObject":[
			{
				"return_type":"",
				"brief_description":"Copy ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxObject&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"other"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Default ctor; initializes to NULL the internal reference data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UnShare":[
			{
				"return_type":"void",
				"brief_description":"This is the same of AllocExclusive() but this method is public.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UnRef":[
			{
				"return_type":"void",
				"brief_description":"Decrements the reference count in the associated data, and if it is zero, deletes the data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSameAs":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this object has the same data pointer as obj.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxObject&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"obj"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Ref":[
			{
				"return_type":"void",
				"brief_description":"Makes this object refer to the data in clone.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxObject&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clone"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AllocExclusive":[
			{
				"return_type":"void",
				"brief_description":"Ensure that this object's data is not shared with any other object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClassInfo":[
			{
				"return_type":"wxClassInfo*",
				"brief_description":"This virtual function is redefined for every class that requires run-time type information, when using the wxDECLARE_CLASS macro (or similar).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsKindOf":[
			{
				"return_type":"bool",
				"brief_description":"Determines whether this class is a subclass of (or the same class as) the given class.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxClassInfo*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator delete":[
			{
				"return_type":"void",
				"brief_description":"The delete operator is defined for debugging versions of the library only, when the identifier WXDEBUG is defined.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"buf"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator new":[
			{
				"return_type":"void*",
				"brief_description":"The new operator is defined for debugging versions of the library only, when the identifier WXDEBUG is defined.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"size",
					"filename",
					"lineNum"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL",
					"0"
				]
			}
		]
	},
	"wxFFile":{
		"wxFFile":[
			{
				"return_type":"",
				"brief_description":"Opens a file with the given mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"r\""
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Opens a file with the given file pointer, which has already been opened.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"FILE*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Write":[
			{
				"return_type":"bool",
				"brief_description":"Writes the contents of the string to the file, returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxConvAuto()"
				]
			},
			{
				"return_type":"size_t",
				"brief_description":"Writes the specified number of bytes from a buffer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"count"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Tell":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Returns the current position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SeekEnd":[
			{
				"return_type":"bool",
				"brief_description":"Moves the file pointer to the specified number of bytes before the end of the file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileOffset"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ofs"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"Seek":[
			{
				"return_type":"bool",
				"brief_description":"Seeks to the specified position and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileOffset",
					"wxSeekMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"ofs",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFromStart"
				]
			}
		],
		"ReadAll":[
			{
				"return_type":"bool",
				"brief_description":"Reads the entire contents of the file into a string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxConvAuto()"
				]
			}
		],
		"Read":[
			{
				"return_type":"size_t",
				"brief_description":"Reads the specified number of bytes into a buffer, returning the actual number read.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"count"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Open":[
			{
				"return_type":"bool",
				"brief_description":"Opens the file, returning true if successful.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"r\""
				]
			}
		],
		"Length":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Returns the length of the file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOpened":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the file is opened.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKind":[
			{
				"return_type":"wxFileKind",
				"brief_description":"Returns the type of the file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Flush":[
			{
				"return_type":"bool",
				"brief_description":"Flushes the file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Error":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if an error has occurred on this file, similar to the standard ferror() function.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Eof":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if an attempt has been made to read past the end of the file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Close":[
			{
				"return_type":"bool",
				"brief_description":"Closes the file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Attach":[
			{
				"return_type":"void",
				"brief_description":"Attaches an existing file pointer to the wxFFile object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"FILE*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"fp",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"Detach":[
			{
				"return_type":"FILE*",
				"brief_description":"Get back a file pointer from wxFFile object  the caller is responsible for closing the file if this descriptor is opened.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"fp":[
			{
				"return_type":"FILE*",
				"brief_description":"Returns the file pointer associated with the file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxFSFile":{
		"_implements":[
			"wxObject"
		],
		"wxFSFile":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream*",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"wxDateTime"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"stream",
					"location",
					"mimetype",
					"anchor",
					"modif"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"GetStream":[
			{
				"return_type":"wxInputStream*",
				"brief_description":"Returns pointer to the stream.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModificationTime":[
			{
				"return_type":"wxDateTime",
				"brief_description":"Returns time when this file was modified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMimeType":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the MIME type of the content of this file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLocation":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns full location of the file, including path and protocol.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAnchor":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns anchor (if present).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DetachStream":[
			{
				"return_type":"wxInputStream*",
				"brief_description":"Detaches the stream from the wxFSFile object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxInputStream":{
		"wxInputStream":[
			{
				"return_type":"",
				"brief_description":"Creates a dummy input stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Ungetch":[
			{
				"return_type":"bool",
				"brief_description":"This function acts like the previous one except that it takes only one character: it is sometimes shorter to use than the generic function.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"char"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"size_t",
				"brief_description":"This function is only useful in read mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"TellI":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Returns the current stream position or wxInvalidOffset if it's not available (e.g.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SeekI":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Changes the stream current position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileOffset",
					"wxSeekMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFromStart"
				]
			}
		],
		"Read":[
			{
				"return_type":"wxInputStream&",
				"brief_description":"Reads data from the input queue and stores it in the specified output stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOutputStream&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stream_out"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxInputStream&",
				"brief_description":"Reads the specified amount of bytes and stores the data in buffer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Peek":[
			{
				"return_type":"char",
				"brief_description":"Returns the first character in the input queue without removing it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnSysRead":[
			{
				"return_type":"size_t",
				"brief_description":"Internal function.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"bufsize"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"LastRead":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the last number of bytes read.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetC":[
			{
				"return_type":"int",
				"brief_description":"Returns the first character in the input queue and removes it, blocking until it appears if necessary.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Eof":[
			{
				"return_type":"bool",
				"brief_description":"Returns true after an attempt has been made to read past the end of the stream.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanRead":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if some data is available in the stream right now, so that calling Read() wouldn't block.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxStreamBase"
		]
	},
	"wxStreamBase":{
		"wxStreamBase":[
			{
				"return_type":"",
				"brief_description":"Creates a dummy stream object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Reset":[
			{
				"return_type":"void",
				"brief_description":"Resets the stream state.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxStreamError"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"error"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxSTREAM_NO_ERROR"
				]
			}
		],
		"IsSeekable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the stream supports seeking to arbitrary offsets.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if no error occurred on the stream.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"size_t",
				"brief_description":"This function returns the size of the stream.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLength":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Returns the length of the stream in bytes.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLastError":[
			{
				"return_type":"wxStreamError",
				"brief_description":"This function returns the last error.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnSysSeek":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Internal function.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxFileOffset",
					"wxSeekMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"mode"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnSysTell":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Internal function.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"operator!":[
			{
				"return_type":"bool",
				"brief_description":"Returns the opposite of IsOk().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxThread":{
		"wxThread":[
			{
				"return_type":"",
				"brief_description":"This constructor creates a new detached (default) or joinable C++ thread object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxThreadKind"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"kind"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxTHREAD_DETACHED"
				]
			}
		],
		"Yield":[
			{
				"return_type":"void",
				"brief_description":"Give the rest of the thread's time-slice to the system allowing the other threads to run.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"This":[
			{
				"return_type":"wxThread*",
				"brief_description":"Return the thread object for the calling thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TestDestroy":[
			{
				"return_type":"bool",
				"brief_description":"This function should be called periodically by the thread to ensure that calls to Pause() and Delete() will work.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetPriority":[
			{
				"return_type":"void",
				"brief_description":"Sets the priority of the thread, between 0 (lowest) and 100 (highest).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"priority"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Sleep":[
			{
				"return_type":"void",
				"brief_description":"Pauses the thread execution for the given amount of time.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"milliseconds"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetConcurrency":[
			{
				"return_type":"bool",
				"brief_description":"Sets the thread concurrency level for this process.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"level"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCPUCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of system CPUs or -1 if the value is unknown.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentId":[
			{
				"return_type":"wxThreadIdType",
				"brief_description":"Returns the platform specific thread ID of the current thread as a long.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"wxThreadIdType",
				"brief_description":"Gets the thread identifier: this is a platform dependent number that uniquely identifies the thread throughout the system during its existence (i.e. the thread identifiers may be reused).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKind":[
			{
				"return_type":"wxThreadKind",
				"brief_description":"Returns the thread kind as it was given in the ctor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMainId":[
			{
				"return_type":"wxThreadIdType",
				"brief_description":"Returns the thread ID of the main thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPriority":[
			{
				"return_type":"unsigned int",
				"brief_description":"Gets the priority of the thread, between 0 (lowest) and 100 (highest).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAlive":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the thread is alive (i.e. started and not terminating).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDetached":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the thread is of the detached kind, false if it is a joinable one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsMain":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the calling thread is the main application thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPaused":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the thread is paused.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsRunning":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the thread is running.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Kill":[
			{
				"return_type":"wxThreadError",
				"brief_description":"Immediately terminates the target thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Pause":[
			{
				"return_type":"wxThreadError",
				"brief_description":"Suspends the thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Resume":[
			{
				"return_type":"wxThreadError",
				"brief_description":"Resumes a thread suspended by the call to Pause().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Run":[
			{
				"return_type":"wxThreadError",
				"brief_description":"Starts the thread execution.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"wxThreadError",
				"brief_description":"Creates a new thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stackSize"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"Delete":[
			{
				"return_type":"wxThreadError",
				"brief_description":"Calling Delete() gracefully terminates a detached thread, either when the thread calls TestDestroy() or when it finishes processing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void**",
					"wxThreadWait"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"rc",
					"waitMode"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL",
					"wxTHREAD_WAIT_BLOCK"
				]
			}
		],
		"Entry":[
			{
				"return_type":"void*",
				"brief_description":"This is the entry point of the thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Exit":[
			{
				"return_type":"void",
				"brief_description":"This is a protected function of the wxThread class and thus can only be called from a derived class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"void*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"exitcode"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"Wait":[
			{
				"return_type":"void*",
				"brief_description":"Waits for a joinable thread to terminate and returns the value the thread returned from Entry() or \"(ExitCode)-1\" on error.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxThreadWait"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxTHREAD_WAIT_BLOCK"
				]
			}
		]
	},
	"wxTimePickerCtrl":{
		"wxTimePickerCtrl":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxDateTime&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"dt",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultDateTime",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTP_DEFAULT",
					"wxDefaultValidator",
					"\"timectrl\""
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create the control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxDateTime&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"dt",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultDateTime",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDP_DEFAULT|wxDP_SHOWCENTURY",
					"wxDefaultValidator",
					"\"timectrl\""
				]
			}
		],
		"GetValue":[
			{
				"return_type":"wxDateTime",
				"brief_description":"Returns the currently entered time.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Changes the current value of the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxOutputStream":{
		"wxOutputStream":[
			{
				"return_type":"",
				"brief_description":"Creates a dummy wxOutputStream object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Write":[
			{
				"return_type":"wxOutputStream&",
				"brief_description":"Reads data from the specified input stream and stores them in the current stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stream_in"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxOutputStream&",
				"brief_description":"Writes up to the specified amount of bytes using the data of buffer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"TellO":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Returns the current stream position.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SeekO":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Changes the stream current position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileOffset",
					"wxSeekMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFromStart"
				]
			}
		],
		"PutC":[
			{
				"return_type":"void",
				"brief_description":"Puts the specified character in the output queue and increments the stream position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"char"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnSysWrite":[
			{
				"return_type":"size_t",
				"brief_description":"Internal function.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"bufsize"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Close":[
			{
				"return_type":"bool",
				"brief_description":"Closes the stream, returning false if an error occurs.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LastWrite":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of bytes written during the last Write().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxStreamBase"
		]
	},
	"wxColourDialog":{
		"wxColourDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxColourData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning wxID_OK if the user pressed OK, and wxID_CANCEL otherwise.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColourData":[
			{
				"return_type":"wxColourData&",
				"brief_description":"Returns the colour data associated with the colour dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Same as wxColourDialog().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxColourData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"_implements":[
			"wxDialog"
		]
	},
	"wxColourData":{
		"_implements":[
			"wxObject"
		],
		"wxColourData":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToString":[
			{
				"return_type":"wxString",
				"brief_description":"Converts the colours saved in this class in a string form, separating the various colours with a comma.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCustomColour":[
			{
				"return_type":"void",
				"brief_description":"Sets custom colours for the colour dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"i",
					"colour"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the default colour for the colour dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetChooseFull":[
			{
				"return_type":"void",
				"brief_description":"Under Windows, tells the Windows colour dialog to display the full dialog with custom colour selection controls.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCustomColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns custom colours associated with the colour dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColour":[
			{
				"return_type":"wxColour&",
				"brief_description":"Gets the current colour associated with the colour dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetChooseFull":[
			{
				"return_type":"bool",
				"brief_description":"Under Windows, determines whether the Windows colour dialog will display the full dialog with custom colour selection controls.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FromString":[
			{
				"return_type":"bool",
				"brief_description":"Decodes the given string, which should be in the same format returned by ToString(), and sets the internal colours.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"str"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxFileDialog":{
		"wxFileDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxPoint&",
					"const wxSize&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"defaultDir",
					"defaultFile",
					"wildcard",
					"style",
					"pos",
					"size",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFileSelectorPromptStr",
					"wxEmptyString",
					"wxEmptyString",
					"wxFileSelectorDefaultWildcardStr",
					"wxFD_DEFAULT_STYLE",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxFileDialogNameStr"
				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning wxID_OK if the user pressed OK, and wxID_CANCEL otherwise.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWildcard":[
			{
				"return_type":"void",
				"brief_description":"Sets the wildcard, which can contain multiple file types, for example: \"BMP files (*.bmp)|*.bmp|GIF files (*.gif)|*.gif\".",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"wildCard"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Sets the path (the combined directory and filename that will be returned when the dialog is dismissed).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMessage":[
			{
				"return_type":"void",
				"brief_description":"Sets the message that will be displayed on the dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"message"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilterIndex":[
			{
				"return_type":"void",
				"brief_description":"Sets the default filter index, starting from zero.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filterIndex"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilename":[
			{
				"return_type":"void",
				"brief_description":"Sets the default filename.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"setfilename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtraControlCreator":[
			{
				"return_type":"bool",
				"brief_description":"Customize file dialog by adding extra window, which is typically placed below the list of files and above the buttons.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"ExtraControlCreatorFunction"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"creator"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDirectory":[
			{
				"return_type":"void",
				"brief_description":"Sets the default directory.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"directory"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWildcard":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the file dialog wildcard.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPaths":[
			{
				"return_type":"void",
				"brief_description":"Fills the array paths with the full paths of the files chosen.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"paths"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMessage":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the message that will be displayed on the dialog.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the full path (directory and filename) of the selected file.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilterIndex":[
			{
				"return_type":"int",
				"brief_description":"Returns the index into the list of filters supplied, optionally, in the wildcard parameter.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilenames":[
			{
				"return_type":"void",
				"brief_description":"Fills the array filenames with the names of the files chosen.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filenames"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFilename":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the default filename.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtraControl":[
			{
				"return_type":"wxWindow*",
				"brief_description":"If functions SetExtraControlCreator() and ShowModal() were called, returns the extra window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDirectory":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the default directory.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxDialog"
		]
	},
	"wxFontData":{
		"wxFontData":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetShowHelp":[
			{
				"return_type":"void",
				"brief_description":"Determines whether the Help button will be displayed in the font dialog (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"showHelp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Sets the valid range for the font point size (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"min",
					"max"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetInitialFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font that will be initially used by the font dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour that will be used for the font foreground colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetChosenFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font that will be returned to the user (for internal use only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAllowSymbols":[
			{
				"return_type":"void",
				"brief_description":"Under Windows, determines whether symbol fonts can be selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"allowSymbols"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetShowHelp":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Help button will be shown (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInitialFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Gets the font that will be initially used by the font dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEnableEffects":[
			{
				"return_type":"bool",
				"brief_description":"Determines whether \"effects\" are enabled under Windows.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Gets the colour associated with the font dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetChosenFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Gets the font chosen by the user if the user pressed OK (wxFontDialog::ShowModal() returned wxID_OK).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAllowSymbols":[
			{
				"return_type":"bool",
				"brief_description":"Under Windows, returns a flag determining whether symbol fonts can be selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnableEffects":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables \"effects\" under Windows or generic only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxFontDialog":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the dialog if the wxFontDialog object had been initialized using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Creates the dialog if the wxFontDialog object had been initialized using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxFontData&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxDialog"
		],
		"GetFontData":[
			{
				"return_type":"const wxFontData&",
				"brief_description":"Returns the font data associated with the font dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxFontData&",
				"brief_description":"Returns the font data associated with the font dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning wxID_OK if the user pressed Ok, and wxID_CANCEL otherwise.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFontDialog":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor with parent window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxFontData&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxThreadHelper":{
		"GetThread":[
			{
				"return_type":"wxThread*",
				"brief_description":"This is a public function that returns the wxThread object associated with the thread.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateThread":[
			{
				"return_type":"wxThreadError",
				"brief_description":"Creates a new thread of the given kind.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxThreadKind",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"kind",
					"stackSize"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxTHREAD_JOINABLE",
					"0"
				]
			}
		],
		"Create":[
			{
				"return_type":"wxThreadError",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stackSize"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				],
				"deprecated":true
			}
		]
	},
	"wxToolBar":{
		"wxToolBar":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTB_HORIZONTAL",
					"wxToolBarNameStr"
				]
			}
		],
		"ToggleTool":[
			{
				"return_type":"void",
				"brief_description":"Toggles a tool on or off.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"toggle"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolShortHelp":[
			{
				"return_type":"void",
				"brief_description":"Sets the short help for the given tool.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"helpString"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolSeparation":[
			{
				"return_type":"void",
				"brief_description":"Sets the default separator size.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"separation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolPacking":[
			{
				"return_type":"void",
				"brief_description":"Sets the value used for spacing tools.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"packing"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolNormalBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap to be used by the tool with the given ID.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"bitmap"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolLongHelp":[
			{
				"return_type":"void",
				"brief_description":"Sets the long help for the given tool.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"helpString"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolDisabledBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap to be used by the tool with the given ID when the tool is in a disabled state.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"bitmap"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolClientData":[
			{
				"return_type":"void",
				"brief_description":"Sets the client data associated with the tool.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"clientData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetToolBitmapSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the default size of each tool bitmap.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"void",
				"brief_description":"Set the margins for the toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the values to be used as margins for the toolbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetDropdownMenu":[
			{
				"return_type":"bool",
				"brief_description":"Sets the dropdown menu for the tool given by its id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxMenu*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"menu"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnRightClick":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				],
				"deprecated":true
			}
		],
		"OnMouseEnter":[
			{
				"return_type":"void",
				"brief_description":"This is called when the mouse cursor moves into a tool or out of the toolbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnLeftClick":[
			{
				"return_type":"bool",
				"brief_description":"Called when the user clicks on a tool with the left mouse button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"toggleDown"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetToolsCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of tools in the toolbar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolState":[
			{
				"return_type":"bool",
				"brief_description":"Gets the on\/off state of a toggle tool.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of a whole button, which is usually larger than a tool bitmap because of added 3D effects.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolShortHelp":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the short help for the given tool.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolSeparation":[
			{
				"return_type":"int",
				"brief_description":"Returns the default separator size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolPos":[
			{
				"return_type":"int",
				"brief_description":"Returns the tool position in the toolbar, or wxNOT_FOUND if the tool is not found.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolPacking":[
			{
				"return_type":"int",
				"brief_description":"Returns the value used for packing tools.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolLongHelp":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the long help for the given tool.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Called to determine whether a tool is enabled (responds to user input).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolClientData":[
			{
				"return_type":"wxObject*",
				"brief_description":"Get any client data associated with the tool.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetToolBitmapSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of bitmap that the toolbar expects to have.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMargins":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the left\/right and top\/bottom margins, which are also used for inter-toolspacing.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindControl":[
			{
				"return_type":"wxControl*",
				"brief_description":"Returns a pointer to the control identified by id or NULL if no corresponding control is found.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableTool":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the tool.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"enable"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DeleteToolByPos":[
			{
				"return_type":"bool",
				"brief_description":"This function behaves like DeleteTool() but it deletes the tool at the specified position and not the one with the given id.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteTool":[
			{
				"return_type":"bool",
				"brief_description":"Removes the specified tool from the toolbar and deletes it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toolId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearTools":[
			{
				"return_type":"void",
				"brief_description":"Deletes all the tools in the toolbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddCheckTool":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds a new check (or toggle) tool to the toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&",
					"const wxString&",
					"const wxString&",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"label",
					"bitmap1",
					"bmpDisabled",
					"shortHelp",
					"longHelp",
					"clientData"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxNullBitmap",
					"wxEmptyString",
					"wxEmptyString",
					"NULL"
				]
			}
		],
		"AddControl":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds any control to the toolbar, typically e.g. a wxComboBox.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxControl*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"control",
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"AddRadioTool":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds a new radio tool to the toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&",
					"const wxString&",
					"const wxString&",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"label",
					"bitmap1",
					"bmpDisabled",
					"shortHelp",
					"longHelp",
					"clientData"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxNullBitmap",
					"wxEmptyString",
					"wxEmptyString",
					"NULL"
				]
			}
		],
		"AddSeparator":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds a separator for spacing groups of tools.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddStretchableSpace":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds a stretchable space to the toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddTool":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds a tool to the toolbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolBarToolBase*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tool"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds a tool to the toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxString&",
					"wxItemKind"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"label",
					"bitmap",
					"shortHelp",
					"kind"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString",
					"wxITEM_NORMAL"
				]
			},
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Adds a tool to the toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&",
					"wxItemKind",
					"const wxString&",
					"const wxString&",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"toolId",
					"label",
					"bitmap",
					"bmpDisabled",
					"kind",
					"shortHelpString",
					"longHelpString",
					"clientData"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxITEM_NORMAL",
					"wxEmptyString",
					"wxEmptyString",
					"NULL"
				]
			}
		],
		"FindById":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Returns a pointer to the tool identified by id or NULL if no corresponding tool is found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindToolForPosition":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Finds a tool for the given mouse position.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetToolByPos":[
			{
				"return_type":"const wxToolBarToolBase*",
				"brief_description":"Returns a pointer to the tool at ordinal position pos.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertControl":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Inserts the control into the toolbar at the given position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxControl*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"control",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"InsertSeparator":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Inserts the separator into the toolbar at the given position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertStretchableSpace":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Inserts a stretchable space at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertTool":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Inserts the tool with the specified attributes into the toolbar at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxToolBarToolBase*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"tool"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Inserts the tool with the specified attributes into the toolbar at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&",
					"wxItemKind",
					"const wxString&",
					"const wxString&",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"toolId",
					"label",
					"bitmap",
					"bmpDisabled",
					"kind",
					"shortHelp",
					"longHelp",
					"clientData"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxNullBitmap",
					"wxITEM_NORMAL",
					"wxEmptyString",
					"wxEmptyString",
					"NULL"
				]
			}
		],
		"Realize":[
			{
				"return_type":"bool",
				"brief_description":"This function should be called after you have added tools.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RemoveTool":[
			{
				"return_type":"wxToolBarToolBase*",
				"brief_description":"Removes the given tool from the toolbar but doesn't delete it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxAuiTabArt":{
		"SetSizingInfo":[
			{
				"return_type":"void",
				"brief_description":"Sets sizing information.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"tab_ctrl_size",
					"tab_count"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelectedFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font for drawing text for selected UI elements.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNormalFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the normal font for drawing labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMeasuringFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font used for calculating measurements.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Sets flags.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour of the inactive tabs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetActiveColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour of the selected tab.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetTabSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the tab size for the given caption, bitmap and state.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxString&",
					"const wxBitmap&",
					"bool",
					"int",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"caption",
					"bitmap",
					"active",
					"close_button_state",
					"x_extent"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"GetIndentSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the indent size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBestTabCtrlSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the tab control size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxAuiNotebookPageArray&",
					"const wxSize&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					null,
					null,
					null
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawTab":[
			{
				"return_type":"void",
				"brief_description":"Draws a tab.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiNotebookPage&",
					"const wxRect&",
					"int",
					"wxRect*",
					"wxRect*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"page",
					"rect",
					"close_button_state",
					"out_tab_rect",
					"out_button_rect",
					"x_extent"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawButton":[
			{
				"return_type":"void",
				"brief_description":"Draws a button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"int",
					"int",
					"int",
					"wxRect*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"in_rect",
					"bitmap_id",
					"button_state",
					"orientation",
					"out_rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawBackground":[
			{
				"return_type":"void",
				"brief_description":"Draws a background on the given area.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Clone":[
			{
				"return_type":"wxAuiTabArt*",
				"brief_description":"Clones the art object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxCalendarEvent":{
		"GetWeekDay":[
			{
				"return_type":"wxDateTime::WeekDay",
				"brief_description":"Returns the week day on which the user clicked in EVT_CALENDAR_WEEKDAY_CLICKED handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWeekDay":[
			{
				"return_type":"void",
				"brief_description":"Sets the week day carried by the event, normally only used by the library internally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime::WeekDay"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"day"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxDateEvent"
		]
	},
	"wxGrid":{
		"AppendCols":[
			{
				"return_type":"bool",
				"brief_description":"Appends one or more new columns to the right of the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"numCols",
					"updateLabels"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1",
					"true"
				]
			}
		],
		"AppendRows":[
			{
				"return_type":"bool",
				"brief_description":"Appends one or more new rows to the bottom of the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"numRows",
					"updateLabels"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1",
					"true"
				]
			}
		],
		"AreHorzGridLinesClipped":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the horizontal grid lines stop at the last column boundary or false if they continue to the end of the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AreVertGridLinesClipped":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the vertical grid lines stop at the last row boundary or false if they continue to the end of the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoSize":[
			{
				"return_type":"void",
				"brief_description":"Automatically sets the height and width of all rows and columns to fit their contents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AutoSizeColLabelSize":[
			{
				"return_type":"void",
				"brief_description":"Automatically adjusts width of the column to fit its label.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoSizeColumn":[
			{
				"return_type":"void",
				"brief_description":"Automatically sizes the column to fit its contents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"setAsMin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"AutoSizeColumns":[
			{
				"return_type":"void",
				"brief_description":"Automatically sizes all columns to fit their contents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"setAsMin"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"AutoSizeRow":[
			{
				"return_type":"void",
				"brief_description":"Automatically sizes the row to fit its contents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"setAsMin"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"AutoSizeRowLabelSize":[
			{
				"return_type":"void",
				"brief_description":"Automatically adjusts height of the row to fit its label.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AutoSizeRows":[
			{
				"return_type":"void",
				"brief_description":"Automatically sizes all rows to fit their contents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"setAsMin"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"BeginBatch":[
			{
				"return_type":"void",
				"brief_description":"Increments the grid's batch count.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"BlockToDeviceRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Convert grid cell coordinates to grid window pixel coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&",
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"topLeft",
					"bottomRight"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CanDragCell":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the dragging of cells is enabled or false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanDragColMove":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if columns can be moved by dragging with the mouse.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanDragColSize":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given column can be resized by dragging with the mouse.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanDragGridSize":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the dragging of grid lines to resize rows and columns is enabled or false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanDragRowSize":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given row can be resized by dragging with the mouse.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanEnableCellControl":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the in-place edit control for the current grid cell can be used and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanHaveAttributes":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this grid has support for cell attributes.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CellToRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Return the rectangle corresponding to the grid cell's size and position in logical coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxRect",
				"brief_description":"Return the rectangle corresponding to the grid cell's size and position in logical coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearGrid":[
			{
				"return_type":"void",
				"brief_description":"Clears all data in the underlying grid table and repaints the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearSelection":[
			{
				"return_type":"void",
				"brief_description":"Deselects all cells that are currently selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClipHorzGridLines":[
			{
				"return_type":"void",
				"brief_description":"Change whether the horizontal grid lines are clipped by the end of the last column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClipVertGridLines":[
			{
				"return_type":"void",
				"brief_description":"Change whether the vertical grid lines are clipped by the end of the last row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the grid window for an object initialized using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxWANTS_CHARS",
					"wxGridNameStr"
				]
			}
		],
		"CreateGrid":[
			{
				"return_type":"bool",
				"brief_description":"Creates a grid with the specified initial number of rows and columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxGridSelectionModes"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"numRows",
					"numCols",
					"selmode"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxGridSelectCells"
				]
			}
		],
		"DeleteCols":[
			{
				"return_type":"bool",
				"brief_description":"Deletes one or more columns from a grid starting at the specified position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numCols",
					"updateLabels"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1",
					"true"
				]
			}
		],
		"DeleteRows":[
			{
				"return_type":"bool",
				"brief_description":"Deletes one or more rows from a grid starting at the specified position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numRows",
					"updateLabels"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1",
					"true"
				]
			}
		],
		"DisableCellEditControl":[
			{
				"return_type":"void",
				"brief_description":"Disables in-place editing of grid cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisableColResize":[
			{
				"return_type":"void",
				"brief_description":"Disable interactive resizing of the specified column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DisableDragColMove":[
			{
				"return_type":"void",
				"brief_description":"Disables column moving by dragging with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisableDragColSize":[
			{
				"return_type":"void",
				"brief_description":"Disables column sizing by dragging with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisableDragGridSize":[
			{
				"return_type":"void",
				"brief_description":"Disable mouse dragging of grid lines to resize rows and columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisableDragRowSize":[
			{
				"return_type":"void",
				"brief_description":"Disables row sizing by dragging with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisableRowResize":[
			{
				"return_type":"void",
				"brief_description":"Disable interactive resizing of the specified row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableCellEditControl":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables in-place editing of grid cell data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EnableDragCell":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables cell dragging with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EnableDragColMove":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables column moving by dragging with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EnableDragColSize":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables column sizing by dragging with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EnableDragGridSize":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables row and column resizing by dragging gridlines with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EnableDragRowSize":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables row sizing by dragging with the mouse.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EnableEditing":[
			{
				"return_type":"void",
				"brief_description":"Makes the grid globally editable or read-only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"edit"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableGridLines":[
			{
				"return_type":"void",
				"brief_description":"Turns the drawing of grid lines on or off.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"EndBatch":[
			{
				"return_type":"void",
				"brief_description":"Decrements the grid's batch count.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Fit":[
			{
				"return_type":"void",
				"brief_description":"Overridden wxWindow method.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ForceRefresh":[
			{
				"return_type":"void",
				"brief_description":"Causes immediate repainting of the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBatchCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of times that BeginBatch() has been called without (yet) matching calls to EndBatch().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCellAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the arguments to the horizontal and vertical text alignment values for the grid cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetCellBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the background colour of the cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetCellEditor":[
			{
				"return_type":"wxGridCellEditor*",
				"brief_description":"Returns a pointer to the editor for the cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetCellFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the font for text in the grid cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetCellRenderer":[
			{
				"return_type":"wxGridCellRenderer*",
				"brief_description":"Returns a pointer to the renderer for the grid cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetCellSize":[
			{
				"return_type":"CellSpan",
				"brief_description":"Get the size of the cell in number of cells covered by it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"num_rows",
					"num_cols"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"Get the number of rows and columns allocated for this cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCellTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the text colour for the grid cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetCellValue":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string contained in the cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the string contained in the cell at the specified location.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColAt":[
			{
				"return_type":"int",
				"brief_description":"Returns the column ID of the specified column position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colPos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColGridLinePen":[
			{
				"return_type":"wxPen",
				"brief_description":"Returns the pen used for vertical grid lines.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColLabelAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the arguments to the current column label alignment values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetColLabelSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the current height of the column labels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColLabelTextOrientation":[
			{
				"return_type":"int",
				"brief_description":"Returns the orientation of the column labels (either wxHORIZONTAL or wxVERTICAL).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColLabelValue":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the specified column label.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColLeft":[
			{
				"return_type":"int",
				"brief_description":"Returns the coordinate of the left border specified column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColMinimalAcceptableWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the minimal width to which a column may be resized.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColMinimalWidth":[
			{
				"return_type":"int",
				"brief_description":"Get the minimal width of the given column\/row.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColPos":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of the specified column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colID"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColRight":[
			{
				"return_type":"int",
				"brief_description":"Returns the coordinate of the right border specified column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the width of the specified column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColSizes":[
			{
				"return_type":"wxGridSizesInfo",
				"brief_description":"Get size information for all columns at once.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultCellAlignment":[
			{
				"return_type":"void",
				"brief_description":"Returns the default cell alignment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetDefaultCellBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the current default background colour for grid cells.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultCellFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the current default font for grid cell text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultCellTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the current default colour for grid cell text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultColLabelSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the default height for column labels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultColSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the current default width for grid columns.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultEditor":[
			{
				"return_type":"wxGridCellEditor*",
				"brief_description":"Returns a pointer to the current default grid cell editor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultEditorForCell":[
			{
				"return_type":"wxGridCellEditor*",
				"brief_description":"Returns the default editor for the specified cell.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxGridCellEditor*",
				"brief_description":"Returns the default editor for the specified cell.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDefaultEditorForType":[
			{
				"return_type":"wxGridCellEditor*",
				"brief_description":"Returns the default editor for the cells containing values of the given type.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"typeName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDefaultGridLinePen":[
			{
				"return_type":"wxPen",
				"brief_description":"Returns the pen used for grid lines.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultRenderer":[
			{
				"return_type":"wxGridCellRenderer*",
				"brief_description":"Returns a pointer to the current default grid cell renderer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultRendererForCell":[
			{
				"return_type":"wxGridCellRenderer*",
				"brief_description":"Returns the default renderer for the given cell.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetDefaultRendererForType":[
			{
				"return_type":"wxGridCellRenderer*",
				"brief_description":"Returns the default renderer for the cell containing values of the given type.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"typeName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDefaultRowLabelSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the default width for the row labels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultRowSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the current default height for grid rows.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridColHeader":[
			{
				"return_type":"wxHeaderCtrl*",
				"brief_description":"Return the header control used for column labels display.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridColLabelWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Return the column labels window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridCornerLabelWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Return the window in the top left grid corner.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridCursorCol":[
			{
				"return_type":"int",
				"brief_description":"Returns the current grid cell column position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridCursorRow":[
			{
				"return_type":"int",
				"brief_description":"Returns the current grid cell row position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridLineColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used for grid lines.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridRowLabelWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Return the row labels window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGridWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Return the main grid window containing the grid cells.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabelBackgroundColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used for the background of row and column labels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabelFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns the font used for row and column labels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabelTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used for row and column label text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNumberCols":[
			{
				"return_type":"int",
				"brief_description":"Returns the total number of grid columns.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNumberRows":[
			{
				"return_type":"int",
				"brief_description":"Returns the total number of grid rows.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrCreateCellAttr":[
			{
				"return_type":"wxGridCellAttr*",
				"brief_description":"Returns the attribute for the given cell creating one if necessary.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRowGridLinePen":[
			{
				"return_type":"wxPen",
				"brief_description":"Returns the pen used for horizontal grid lines.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRowLabelAlignment":[
			{
				"return_type":"void",
				"brief_description":"Returns the alignment used for row labels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRowLabelSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the current width of the row labels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRowLabelValue":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the specified row label.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRowMinimalAcceptableHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the minimal size to which rows can be resized.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRowMinimalHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the minimal size for the given column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRowSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the height of the specified row.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRowSizes":[
			{
				"return_type":"wxGridSizesInfo",
				"brief_description":"Get size information for all row at once.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScrollLineX":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of pixels per horizontal scroll increment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScrollLineY":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of pixels per vertical scroll increment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedCells":[
			{
				"return_type":"wxGridCellCoordsArray",
				"brief_description":"Returns an array of individually selected cells.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedCols":[
			{
				"return_type":"wxArrayInt",
				"brief_description":"Returns an array of selected columns.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedRows":[
			{
				"return_type":"wxArrayInt",
				"brief_description":"Returns an array of selected rows.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionBackground":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used for drawing the selection background.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionBlockBottomRight":[
			{
				"return_type":"wxGridCellCoordsArray",
				"brief_description":"Returns an array of the bottom right corners of blocks of selected cells.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionBlockTopLeft":[
			{
				"return_type":"wxGridCellCoordsArray",
				"brief_description":"Returns an array of the top left corners of blocks of selected cells.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionForeground":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour used for drawing the selection foreground.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectionMode":[
			{
				"return_type":"wxGridSelectionModes",
				"brief_description":"Returns the current selection mode.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSortingColumn":[
			{
				"return_type":"int",
				"brief_description":"Return the column in which the sorting indicator is currently displayed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTable":[
			{
				"return_type":"wxGridTableBase*",
				"brief_description":"Returns a base pointer to the current table object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GoToCell":[
			{
				"return_type":"void",
				"brief_description":"Make the given cell current and ensure it is visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Make the given cell current and ensure it is visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GridLinesEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if drawing of grid lines is turned on, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HideCellEditControl":[
			{
				"return_type":"void",
				"brief_description":"Hides the in-place cell edit control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HideCol":[
			{
				"return_type":"void",
				"brief_description":"Hides the specified column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HideColLabels":[
			{
				"return_type":"void",
				"brief_description":"Hides the column labels by calling SetColLabelSize() with a size of 0.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HideRow":[
			{
				"return_type":"void",
				"brief_description":"Hides the specified row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HideRowLabels":[
			{
				"return_type":"void",
				"brief_description":"Hides the row labels by calling SetRowLabelSize() with a size of 0.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertCols":[
			{
				"return_type":"bool",
				"brief_description":"Inserts one or more new columns into a grid with the first new column at the specified position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numCols",
					"updateLabels"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1",
					"true"
				]
			}
		],
		"InsertRows":[
			{
				"return_type":"bool",
				"brief_description":"Inserts one or more new rows into a grid with the first new row at the specified position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numRows",
					"updateLabels"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1",
					"true"
				]
			}
		],
		"IsCellEditControlEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the in-place edit control is currently enabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsCurrentCellReadOnly":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the current cell is read-only.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEditable":[
			{
				"return_type":"bool",
				"brief_description":"Returns false if the whole grid has been set as read-only or true otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsColShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the specified column is not currently hidden.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsInSelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given cell is selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given cell is selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsReadOnly":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the cell at the specified location can't be edited.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsRowShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the specified row is not currently hidden.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there are currently any selected cells, rows, columns or blocks.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSortOrderAscending":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the current sorting order is ascending or false if it is descending.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSortingBy":[
			{
				"return_type":"bool",
				"brief_description":"Return true if this column is currently used for sorting.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsVisible":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a cell is either entirely or at least partially visible in the grid window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"wholeCellVisible"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if a cell is either entirely or at least partially visible in the grid window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"coords",
					"wholeCellVisible"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"MakeCellVisible":[
			{
				"return_type":"void",
				"brief_description":"Brings the specified cell into the visible grid cell area with minimal scrolling.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Brings the specified cell into the visible grid cell area with minimal scrolling.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorDown":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor down by one row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorDownBlock":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor down in the current column such that it skips to the beginning or end of a block of non-empty cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorLeft":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor left by one column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorLeftBlock":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor left in the current row such that it skips to the beginning or end of a block of non-empty cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorRight":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor right by one column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorRightBlock":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor right in the current row such that it skips to the beginning or end of a block of non-empty cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorUp":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor up by one row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MoveCursorUpBlock":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor up in the current column such that it skips to the beginning or end of a block of non-empty cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"expandSelection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MovePageDown":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor down by some number of rows so that the previous bottom visible row becomes the top visible row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MovePageUp":[
			{
				"return_type":"bool",
				"brief_description":"Moves the grid cursor up by some number of rows so that the previous top visible row becomes the bottom visible row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RefreshAttr":[
			{
				"return_type":"void",
				"brief_description":"Invalidates the cached attribute for the given cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RegisterDataType":[
			{
				"return_type":"void",
				"brief_description":"Register a new data type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxGridCellRenderer*",
					"wxGridCellEditor*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"typeName",
					"renderer",
					"editor"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"ResetColPos":[
			{
				"return_type":"void",
				"brief_description":"Resets the position of the columns to the default.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SaveEditControlValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the current grid cell to the current in-place edit control value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SelectAll":[
			{
				"return_type":"void",
				"brief_description":"Selects all cells in the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SelectBlock":[
			{
				"return_type":"void",
				"brief_description":"Selects a rectangular block of cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"topRow",
					"leftCol",
					"bottomRow",
					"rightCol",
					"addToSelected"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Selects a rectangular block of cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&",
					"const wxGridCellCoords&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"topLeft",
					"bottomRight",
					"addToSelected"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			}
		],
		"SelectCol":[
			{
				"return_type":"void",
				"brief_description":"Selects the specified column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"addToSelected"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"SelectRow":[
			{
				"return_type":"void",
				"brief_description":"Selects the specified row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"addToSelected"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"SetCellAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the horizontal and vertical alignment for grid cell text at the specified location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"SetCellBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour for the given cell or all cells by default.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"colour"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetCellEditor":[
			{
				"return_type":"void",
				"brief_description":"Sets the editor for the grid cell at the specified location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxGridCellEditor*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"editor"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetCellFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font for text in the grid cell at the specified location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxFont&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"font"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetCellRenderer":[
			{
				"return_type":"void",
				"brief_description":"Sets the renderer for the grid cell at the specified location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxGridCellRenderer*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"renderer"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetCellSize":[
			{
				"return_type":"void",
				"brief_description":"Set the size of the cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"num_rows",
					"num_cols"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"SetCellTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the text colour for the given cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"colour"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetCellValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the string value for the cell at the specified location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"s"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the string value for the cell at the specified location.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"coords",
					"s"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"val",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				],
				"deprecated":true
			}
		],
		"SetColAttr":[
			{
				"return_type":"void",
				"brief_description":"Sets the cell attributes for all cells in the specified column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxGridCellAttr*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"attr"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColFormatBool":[
			{
				"return_type":"void",
				"brief_description":"Sets the specified column to display boolean values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColFormatCustom":[
			{
				"return_type":"void",
				"brief_description":"Sets the specified column to display data in a custom format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"typeName"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColFormatFloat":[
			{
				"return_type":"void",
				"brief_description":"Sets the specified column to display floating point values with the given width and precision.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"col",
					"width",
					"precision"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1",
					"-1"
				]
			}
		],
		"SetColFormatNumber":[
			{
				"return_type":"void",
				"brief_description":"Sets the specified column to display integer values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColLabelAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the horizontal and vertical alignment of column label text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColLabelSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the height of the column labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColLabelTextOrientation":[
			{
				"return_type":"void",
				"brief_description":"Sets the orientation of the column labels (either wxHORIZONTAL or wxVERTICAL).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"textOrientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColLabelValue":[
			{
				"return_type":"void",
				"brief_description":"Set the value for the given column label.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColMinimalAcceptableWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimal width to which the user can resize columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColMinimalWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimal width for the specified column col.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"width"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColPos":[
			{
				"return_type":"void",
				"brief_description":"Sets the position of the specified column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"colID",
					"newPos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the width of the specified column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"width"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColSizes":[
			{
				"return_type":"void",
				"brief_description":"Restore all columns sizes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridSizesInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizeInfo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColumnsOrder":[
			{
				"return_type":"void",
				"brief_description":"Sets the positions of all columns at once.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"order"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultCellAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the default horizontal and vertical alignment for grid cell text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetDefaultCellBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the default background colour for grid cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultCellFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the default font to be used for grid cell text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultCellTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the current default colour for grid cell text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultColSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the default width for columns in the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"resizeExistingCols"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"SetDefaultEditor":[
			{
				"return_type":"void",
				"brief_description":"Sets the default editor for grid cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellEditor*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"editor"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultRenderer":[
			{
				"return_type":"void",
				"brief_description":"Sets the default renderer for grid cells.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellRenderer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"renderer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultRowSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the default height for rows in the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"height",
					"resizeExistingRows"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"SetGridCursor":[
			{
				"return_type":"void",
				"brief_description":"Set the grid cursor to the specified cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the grid cursor to the specified cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetGridLineColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour used to draw grid lines.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabelBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the background colour for row and column labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabelFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font for row and column labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabelTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the colour for row and column label text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"void",
				"brief_description":"Sets the extra margins used around the grid area.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"extraWidth",
					"extraHeight"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetReadOnly":[
			{
				"return_type":"void",
				"brief_description":"Makes the cell at the specified location read-only or editable.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"isReadOnly"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true"
				]
			}
		],
		"SetRowAttr":[
			{
				"return_type":"void",
				"brief_description":"Sets the cell attributes for all cells in the specified row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxGridCellAttr*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"attr"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowLabelAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the horizontal and vertical alignment of row label text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"horiz",
					"vert"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowLabelSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the width of the row labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRowLabelValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value for the given row label.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowMinimalAcceptableHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimal row height used by default.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRowMinimalHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimal height for the specified row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the height of the specified row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowSizes":[
			{
				"return_type":"void",
				"brief_description":"Restore all rows sizes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridSizesInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sizeInfo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetScrollLineX":[
			{
				"return_type":"void",
				"brief_description":"Sets the number of pixels per horizontal scroll increment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetScrollLineY":[
			{
				"return_type":"void",
				"brief_description":"Sets the number of pixels per vertical scroll increment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectionBackground":[
			{
				"return_type":"void",
				"brief_description":"Set the colour to be used for drawing the selection background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectionForeground":[
			{
				"return_type":"void",
				"brief_description":"Set the colour to be used for drawing the selection foreground.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelectionMode":[
			{
				"return_type":"void",
				"brief_description":"Set the selection behaviour of the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridSelectionModes"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selmode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSortingColumn":[
			{
				"return_type":"void",
				"brief_description":"Set the column to display the sorting indicator in and its direction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"ascending"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetTable":[
			{
				"return_type":"bool",
				"brief_description":"Passes a pointer to a custom grid table to be used by the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridTableBase*",
					"bool",
					"wxGridSelectionModes"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"table",
					"takeOwnership",
					"selmode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false",
					"wxGridSelectCells"
				]
			}
		],
		"SetUseNativeColLabels":[
			{
				"return_type":"void",
				"brief_description":"Call this in order to make the column labels use a native look by using wxRendererNative::DrawHeaderButton() internally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"native"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"ShowCellEditControl":[
			{
				"return_type":"void",
				"brief_description":"Displays the in-place cell edit control for the current cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowCol":[
			{
				"return_type":"void",
				"brief_description":"Shows the previously hidden column by resizing it to non-0 size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowRow":[
			{
				"return_type":"void",
				"brief_description":"Shows the previously hidden row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UnsetSortingColumn":[
			{
				"return_type":"void",
				"brief_description":"Remove any currently shown sorting indicator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UseNativeColHeader":[
			{
				"return_type":"void",
				"brief_description":"Enable the use of native header window for column labels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"native"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"XToCol":[
			{
				"return_type":"int",
				"brief_description":"Returns the column at the given pixel position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"clipToMinMax"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"XToEdgeOfCol":[
			{
				"return_type":"int",
				"brief_description":"Returns the column whose right hand edge is close to the given logical x position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"XYToCell":[
			{
				"return_type":"wxGridCellCoords",
				"brief_description":"Translates logical pixel coordinates to the grid cell coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxGridCellCoords",
				"brief_description":"Translates logical pixel coordinates to the grid cell coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"YToEdgeOfRow":[
			{
				"return_type":"int",
				"brief_description":"Returns the row whose bottom edge is close to the given logical y position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"y"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"YToRow":[
			{
				"return_type":"int",
				"brief_description":"Returns the grid row that corresponds to the logical y coordinate.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"y",
					"clipToMinMax"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"wxGrid":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creating the grid window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxWANTS_CHARS",
					"wxGridNameStr"
				]
			}
		],
		"_implements":[
			"wxScrolledWindow"
		]
	},
	"wxGridCellAttr":{
		"Clone":[
			{
				"return_type":"wxGridCellAttr*",
				"brief_description":"Creates a new copy of this object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DecRef":[
			{
				"return_type":"void",
				"brief_description":"This class is reference counted: it is created with ref count of 1, so calling DecRef() once will delete it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Get the alignment to use for the cell with the given attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"hAlign",
					"vAlign"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetBackgroundColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the background colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEditor":[
			{
				"return_type":"wxGridCellEditor*",
				"brief_description":"Returns the cell editor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGrid*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetFont":[
			{
				"return_type":"const wxFont&",
				"brief_description":"Returns the font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNonDefaultAlignment":[
			{
				"return_type":"void",
				"brief_description":"Get the alignment defined by this attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"hAlign",
					"vAlign"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetRenderer":[
			{
				"return_type":"wxGridCellRenderer*",
				"brief_description":"Returns the cell renderer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGrid*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetTextColour":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the text colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasAlignment":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this attribute has a valid alignment set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasBackgroundColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this attribute has a valid background colour set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasEditor":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this attribute has a valid cell editor set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFont":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this attribute has a valid font set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasRenderer":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this attribute has a valid cell renderer set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasTextColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this attribute has a valid text colour set.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IncRef":[
			{
				"return_type":"void",
				"brief_description":"This class is reference counted: it is created with ref count of 1, so calling DecRef() once will delete it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsReadOnly":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this cell is set as read-only.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the alignment.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"hAlign",
					"vAlign"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the background colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colBack"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefAttr":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"defAttr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEditor":[
			{
				"return_type":"void",
				"brief_description":"Sets the editor to be used with the cells with this attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellEditor*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"editor"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Sets the font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetReadOnly":[
			{
				"return_type":"void",
				"brief_description":"Sets the cell as read-only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"isReadOnly"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetRenderer":[
			{
				"return_type":"void",
				"brief_description":"Sets the renderer to be used for cells with this attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellRenderer*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"renderer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the text colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colText"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridCellAttr":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"attrDefault"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor specifying some of the often used attributes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&",
					"const wxFont&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"colText",
					"colBack",
					"font",
					"hAlign",
					"vAlign"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxGridCellAttrProvider":{
		"GetAttr":[
			{
				"return_type":"wxGridCellAttr*",
				"brief_description":"Get the attribute to use for the specified cell.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxGridCellAttr::wxAttrKind"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"kind"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetColumnHeaderRenderer":[
			{
				"return_type":"const wxGridColumnHeaderRenderer&",
				"brief_description":"Getting header renderers.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCornerRenderer":[
			{
				"return_type":"const wxGridCornerHeaderRenderer&",
				"brief_description":"Return the renderer used for drawing the corner window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRowHeaderRenderer":[
			{
				"return_type":"const wxGridRowHeaderRenderer&",
				"brief_description":"Return the renderer used for drawing row headers.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAttr":[
			{
				"return_type":"void",
				"brief_description":"Setting attributes.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"attr",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetColAttr":[
			{
				"return_type":"void",
				"brief_description":"Set attribute for the specified column.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"attr",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowAttr":[
			{
				"return_type":"void",
				"brief_description":"Set attribute for the specified row.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"attr",
					"row"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxGridCellAttrProvider":[
			{
				"return_type":"",
				"brief_description":"Trivial default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxGridCellBoolEditor":{
		"IsTrueValue":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given value is equal to the string representation of the truth value we currently use (see UseStringValues()).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UseStringValues":[
			{
				"return_type":"void",
				"brief_description":"This method allows you to customize the values returned by GetValue() for the cell using this editor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"valueTrue",
					"valueFalse"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"1\"",
					"wxEmptyString"
				]
			}
		],
		"wxGridCellBoolEditor":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGridCellEditor"
		]
	},
	"wxGridCellChoiceEditor":{
		"SetParameters":[
			{
				"return_type":"void",
				"brief_description":"Parameters string format is \"item1[,item2[...,itemN]]\".",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"params"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridCellChoiceEditor":[
			{
				"return_type":"",
				"brief_description":"Choice cell renderer ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"choices",
					"allowOthers"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"_implements":[
			"wxGridCellEditor"
		]
	},
	"wxGridCellDateTimeRenderer":{
		"SetParameters":[
			{
				"return_type":"void",
				"brief_description":"Sets the strptime()-like format string which will be used to parse the date\/time.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"params"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridCellDateTimeRenderer":[
			{
				"return_type":"",
				"brief_description":"Date\/time renderer constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"outformat",
					"informat"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxDefaultDateTimeFormat",
					"wxDefaultDateTimeFormat"
				]
			}
		],
		"_implements":[
			"wxGridCellStringRenderer"
		]
	},
	"wxGridCellBoolRenderer":{
		"wxGridCellBoolRenderer":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGridCellRenderer"
		]
	},
	"wxGridCellAutoWrapStringRenderer":{
		"wxGridCellAutoWrapStringRenderer":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGridCellStringRenderer"
		]
	},
	"wxGridCellAutoWrapStringEditor":{
		"wxGridCellAutoWrapStringEditor":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGridCellTextEditor"
		]
	},
	"wxGridCellEditor":{
		"PaintBackground":[
			{
				"return_type":"void",
				"brief_description":"Draws the part of the cell not occupied by the control: the base class version just fills it with background colour from the attribute.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRect&",
					"wxGridCellAttr&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"rectCell",
					"attr"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"ApplyEdit":[
			{
				"return_type":"void",
				"brief_description":"Effectively save the changes in the grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxGrid*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"grid"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"BeginEdit":[
			{
				"return_type":"void",
				"brief_description":"Fetch the value from the table and prepare the edit control to begin editing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxGrid*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"grid"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Clone":[
			{
				"return_type":"wxGridCellEditor*",
				"brief_description":"Create a new object which is the copy of this one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"void",
				"brief_description":"Creates the actual edit control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"evtHandler"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Destroy":[
			{
				"return_type":"void",
				"brief_description":"Final cleanup.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EndEdit":[
			{
				"return_type":"bool",
				"brief_description":"End editing the cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxGrid*",
					"const wxString&",
					"wxString*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"grid",
					"oldval",
					"newval"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"HandleReturn":[
			{
				"return_type":"void",
				"brief_description":"Some types of controls on some platforms may need some help with the Return key.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxKeyEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsCreated":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the edit control has been created.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetSize":[
			{
				"return_type":"void",
				"brief_description":"Size and position the edit control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Reset":[
			{
				"return_type":"void",
				"brief_description":"Reset the value in the control back to its starting value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Show":[
			{
				"return_type":"void",
				"brief_description":"Show or hide the edit control, use the specified attributes to set colours\/fonts for it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"wxGridCellAttr*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"show",
					"attr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"StartingClick":[
			{
				"return_type":"void",
				"brief_description":"If the editor is enabled by clicking on the cell, this method will be called.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StartingKey":[
			{
				"return_type":"void",
				"brief_description":"If the editor is enabled by pressing keys on the grid, this will be called to let the editor do something about that first key if desired.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxKeyEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxGridCellEnumEditor":{
		"wxGridCellEnumEditor":[
			{
				"return_type":"",
				"brief_description":"Enum cell editor ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"choices"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		],
		"_implements":[
			"wxGridCellChoiceEditor"
		]
	},
	"wxGridCellEnumRenderer":{
		"SetParameters":[
			{
				"return_type":"void",
				"brief_description":"Sets the comma separated string content of the enum.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"params"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridCellEnumRenderer":[
			{
				"return_type":"",
				"brief_description":"Enum renderer ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"choices"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		],
		"_implements":[
			"wxGridCellStringRenderer"
		]
	},
	"wxGridCellFloatEditor":{
		"wxGridCellFloatEditor":[
			{
				"return_type":"",
				"brief_description":"Float cell editor ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"precision",
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"-1",
					"wxGRID_FLOAT_FORMAT_DEFAULT"
				]
			}
		],
		"SetParameters":[
			{
				"return_type":"void",
				"brief_description":"The parameters string format is \"width[,precision[,format]]\" where format should be chosen between f|e|g|E|G (f is used by default)",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"params"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxGridCellTextEditor"
		]
	},
	"wxGridCellFloatRenderer":{
		"GetFormat":[
			{
				"return_type":"int",
				"brief_description":"Returns the specifier used to format the data to string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrecision":[
			{
				"return_type":"int",
				"brief_description":"Returns the precision.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the width.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFormat":[
			{
				"return_type":"void",
				"brief_description":"Set the format to use for display the number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParameters":[
			{
				"return_type":"void",
				"brief_description":"The parameters string format is \"width[,precision[,format]]\" where format should be chosen between f|e|g|E|G (f is used by default)",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"params"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrecision":[
			{
				"return_type":"void",
				"brief_description":"Sets the precision.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"precision"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridCellFloatRenderer":[
			{
				"return_type":"",
				"brief_description":"Float cell renderer ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"precision",
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"-1",
					"wxGRID_FLOAT_FORMAT_DEFAULT"
				]
			}
		],
		"_implements":[
			"wxGridCellStringRenderer"
		]
	},
	"wxGridCellNumberEditor":{
		"wxGridCellNumberEditor":[
			{
				"return_type":"",
				"brief_description":"Allows you to specify the range for acceptable data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"min",
					"max"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"-1"
				]
			}
		],
		"SetParameters":[
			{
				"return_type":"void",
				"brief_description":"Parameters string format is \"min,max\".",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"params"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasRange":[
			{
				"return_type":"bool",
				"brief_description":"If the return value is true, the editor uses a wxSpinCtrl to get user input, otherwise it uses a wxTextCtrl.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"String representation of the value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGridCellTextEditor"
		]
	},
	"wxGridCellNumberRenderer":{
		"wxGridCellNumberRenderer":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGridCellStringRenderer"
		]
	},
	"wxGridCellRenderer":{
		"GetBestSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Get the preferred size of the cell for its contents.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGrid&",
					"wxGridCellAttr&",
					"wxDC&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"attr",
					"dc",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"Draw":[
			{
				"return_type":"void",
				"brief_description":"Draw the given cell on the provided DC inside the given rectangle using the style specified by the attribute and the default or selected state corresponding to the isSelected value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGrid&",
					"wxGridCellAttr&",
					"wxDC&",
					"const wxRect&",
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"attr",
					"dc",
					"rect",
					"row",
					"col",
					"isSelected"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"Clone":[
			{
				"return_type":"wxGridCellRenderer*",
				"brief_description":"This function must be implemented in derived classes to return a copy of itself.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxGridCellStringRenderer":{
		"wxGridCellStringRenderer":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxGridCellRenderer"
		]
	},
	"wxGridCellTextEditor":{
		"wxGridCellTextEditor":[
			{
				"return_type":"",
				"brief_description":"Text cell editor constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"maxChars"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"SetParameters":[
			{
				"return_type":"void",
				"brief_description":"The parameters string format is \"n\" where n is a number representing the maximum width.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"params"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxGridCellEditor"
		]
	},
	"wxGridColumnHeaderRenderer":{
		"_implements":[
			"wxGridHeaderLabelsRenderer"
		]
	},
	"wxGridColumnHeaderRendererDefault":{
		"DrawBorder":[
			{
				"return_type":"void",
				"brief_description":"Implement border drawing for the column labels.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGrid&",
					"wxDC&",
					"wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"dc",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxGridColumnHeaderRenderer"
		]
	},
	"wxGridCornerHeaderRenderer":{
		"DrawBorder":[
			{
				"return_type":"void",
				"brief_description":"Called by the grid to draw the corner window border.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGrid&",
					"wxDC&",
					"wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"dc",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		]
	},
	"wxGridCornerHeaderRendererDefault":{
		"DrawBorder":[
			{
				"return_type":"void",
				"brief_description":"Implement border drawing for the corner window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGrid&",
					"wxDC&",
					"wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"dc",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxGridCornerHeaderRenderer"
		]
	},
	"wxGridEditorCreatedEvent":{
		"GetCol":[
			{
				"return_type":"int",
				"brief_description":"Returns the column at which the event occurred.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetControl":[
			{
				"return_type":"wxControl*",
				"brief_description":"Returns the edit control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRow":[
			{
				"return_type":"int",
				"brief_description":"Returns the row at which the event occurred.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCol":[
			{
				"return_type":"void",
				"brief_description":"Sets the column at which the event occurred.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetControl":[
			{
				"return_type":"void",
				"brief_description":"Sets the edit control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxControl*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ctrl"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRow":[
			{
				"return_type":"void",
				"brief_description":"Sets the row at which the event occurred.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridEditorCreatedEvent":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for initializing all event attributes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxEventType",
					"wxObject*",
					"int",
					"int",
					"wxControl*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"type",
					"obj",
					"row",
					"col",
					"ctrl"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxGridHeaderLabelsRenderer":{
		"DrawLabel":[
			{
				"return_type":"void",
				"brief_description":"Called by the grid to draw the specified label.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGrid&",
					"wxDC&",
					"const wxString&",
					"const wxRect&",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"dc",
					"value",
					"rect",
					"horizAlign",
					"vertAlign",
					"textOrientation"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxGridCornerHeaderRenderer"
		]
	},
	"wxGridRangeSelectEvent":{
		"AltDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Alt key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ControlDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Control key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBottomRightCoords":[
			{
				"return_type":"wxGridCellCoords",
				"brief_description":"Top left corner of the rectangular area that was (de)selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBottomRow":[
			{
				"return_type":"int",
				"brief_description":"Bottom row of the rectangular area that was (de)selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLeftCol":[
			{
				"return_type":"int",
				"brief_description":"Left column of the rectangular area that was (de)selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRightCol":[
			{
				"return_type":"int",
				"brief_description":"Right column of the rectangular area that was (de)selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTopLeftCoords":[
			{
				"return_type":"wxGridCellCoords",
				"brief_description":"Top left corner of the rectangular area that was (de)selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTopRow":[
			{
				"return_type":"int",
				"brief_description":"Top row of the rectangular area that was (de)selected.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MetaDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Meta key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Selecting":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the area was selected, false otherwise.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShiftDown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Shift key was down at the time of the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxGridRangeSelectEvent":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for initializing all event attributes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxEventType",
					"wxObject*",
					"const wxGridCellCoords&",
					"const wxGridCellCoords&",
					"bool",
					"const wxKeyboardState&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"type",
					"obj",
					"topLeft",
					"bottomRight",
					"sel",
					"kbd"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"true",
					"wxKeyboardState()"
				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxGridRowHeaderRenderer":{
		"_implements":[
			"wxGridHeaderLabelsRenderer"
		]
	},
	"wxGridRowHeaderRendererDefault":{
		"_implements":[
			"wxGridRowHeaderRenderer"
		],
		"DrawBorder":[
			{
				"return_type":"void",
				"brief_description":"Implement border drawing for the row labels.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGrid&",
					"wxDC&",
					"wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"grid",
					"dc",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		]
	},
	"wxGridSizesInfo":{
		"wxGridSizesInfo":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxArrayInt&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"defSize",
					"allSizes"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"int",
				"brief_description":"Get the element size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxGridTableBase":{
		"AppendCols":[
			{
				"return_type":"bool",
				"brief_description":"Exactly the same as AppendRows() but for columns.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"numCols"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"AppendRows":[
			{
				"return_type":"bool",
				"brief_description":"Append additional rows at the end of the table.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"numRows"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"1"
				]
			}
		],
		"CanGetValueAs":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the value of the given cell can be accessed as if it were of the specified type.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"typeName"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"CanHaveAttributes":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this table supports attributes or false otherwise.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanSetValueAs":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the value of the given cell can be set as if it were of the specified type.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"typeName"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Clear the table contents.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteCols":[
			{
				"return_type":"bool",
				"brief_description":"Exactly the same as DeleteRows() but for columns.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numCols"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1"
				]
			}
		],
		"DeleteRows":[
			{
				"return_type":"bool",
				"brief_description":"Delete rows from the table.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numRows"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1"
				]
			}
		],
		"GetAttr":[
			{
				"return_type":"wxGridCellAttr*",
				"brief_description":"Return the attribute for the given cell.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxGridCellAttr::wxAttrKind"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"kind"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetAttrProvider":[
			{
				"return_type":"wxGridCellAttrProvider*",
				"brief_description":"Returns the attribute provider currently being used.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColLabelValue":[
			{
				"return_type":"wxString",
				"brief_description":"Return the label of the specified column.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColsCount":[
			{
				"return_type":"int",
				"brief_description":"Return the number of columns in the table.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNumberCols":[
			{
				"return_type":"int",
				"brief_description":"Must be overridden to return the number of columns in the table.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNumberRows":[
			{
				"return_type":"int",
				"brief_description":"Must be overridden to return the number of rows in the table.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRowLabelValue":[
			{
				"return_type":"wxString",
				"brief_description":"Return the label of the specified row.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetRowsCount":[
			{
				"return_type":"int",
				"brief_description":"Return the number of rows in the table.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTypeName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the type of the value in the given cell.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetValue":[
			{
				"return_type":"wxString",
				"brief_description":"Must be overridden to implement accessing the table values as text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetValueAsBool":[
			{
				"return_type":"bool",
				"brief_description":"Returns the value of the given cell as a boolean.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetValueAsCustom":[
			{
				"return_type":"void*",
				"brief_description":"Returns the value of the given cell as a user-defined type.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"typeName"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetValueAsDouble":[
			{
				"return_type":"double",
				"brief_description":"Returns the value of the given cell as a double.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetValueAsLong":[
			{
				"return_type":"long",
				"brief_description":"Returns the value of the given cell as a long.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetView":[
			{
				"return_type":"wxGrid*",
				"brief_description":"Returns the last grid passed to SetView().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertCols":[
			{
				"return_type":"bool",
				"brief_description":"Exactly the same as InsertRows() but for columns.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numCols"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1"
				]
			}
		],
		"InsertRows":[
			{
				"return_type":"bool",
				"brief_description":"Insert additional rows into the table.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"numRows"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"1"
				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Same as IsEmptyCell() but taking wxGridCellCoords.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxGridCellCoords&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"coords"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEmptyCell":[
			{
				"return_type":"bool",
				"brief_description":"May be overridden to implement testing for empty cells.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetAttr":[
			{
				"return_type":"void",
				"brief_description":"Set attribute of the specified cell.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"attr",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetAttrProvider":[
			{
				"return_type":"void",
				"brief_description":"Associate this attributes provider with the table.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttrProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"attrProvider"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColAttr":[
			{
				"return_type":"void",
				"brief_description":"Set attribute of the specified column.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"attr",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColLabelValue":[
			{
				"return_type":"void",
				"brief_description":"Exactly the same as SetRowLabelValue() but for columns.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowAttr":[
			{
				"return_type":"void",
				"brief_description":"Set attribute of the specified row.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGridCellAttr*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"attr",
					"row"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetRowLabelValue":[
			{
				"return_type":"void",
				"brief_description":"Set the given label for the specified row.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"label"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Must be overridden to implement setting the table values as text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetValueAsBool":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the given cell as a boolean.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetValueAsCustom":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the given cell as a user-defined type.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"const wxString&",
					"void*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"typeName",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"SetValueAsDouble":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the given cell as a double.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetValueAsLong":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of the given cell as a long.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetView":[
			{
				"return_type":"void",
				"brief_description":"Called by the grid when the table is associated with it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGrid*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"grid"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridTableBase":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxGridUpdateLocker":{
		"Create":[
			{
				"return_type":"void",
				"brief_description":"This method can be called if the object had been constructed using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGrid*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"grid"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxGridUpdateLocker":[
			{
				"return_type":"",
				"brief_description":"Creates an object preventing the updates of the specified grid.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxGrid*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"grid"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		]
	},
	"wxDatePickerCtrl":{
		"wxDatePickerCtrl":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxDateTime&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"dt",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultDateTime",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDP_DEFAULT|wxDP_SHOWCENTURY",
					"wxDefaultValidator",
					"\"datectrl\""
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create the control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxDateTime&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"dt",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultDateTime",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDP_DEFAULT|wxDP_SHOWCENTURY",
					"wxDefaultValidator",
					"\"datectrl\""
				]
			}
		],
		"_implements":[
			"wxControl"
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Changes the current value of the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Sets the valid range for the date selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime&",
					"const wxDateTime&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dt1",
					"dt2"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetValue":[
			{
				"return_type":"wxDateTime",
				"brief_description":"Returns the currently entered date.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRange":[
			{
				"return_type":"bool",
				"brief_description":"If the control had been previously limited to a range of dates using SetRange(), returns the lower and upper bounds of this range.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDateTime*",
					"wxDateTime*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dt1",
					"dt2"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxPasswordEntryDialog":{
		"_implements":[
			"wxTextEntryDialog"
		],
		"wxPasswordEntryDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"caption",
					"defaultValue",
					"style",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxGetPasswordFromUserPromptStr",
					"wxEmptyString",
					"wxTextEntryDialogStyle",
					"wxDefaultPosition"
				]
			}
		]
	},
	"wxScreenDC":{
		"_implements":[
			"wxDC"
		],
		"EndDrawingOnTop":[
			{
				"return_type":"bool",
				"brief_description":"Use this in conjunction with StartDrawingOnTop().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"StartDrawingOnTop":[
			{
				"return_type":"bool",
				"brief_description":"Use this in conjunction with EndDrawingOnTop() to ensure that drawing to the screen occurs on top of existing windows.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Use this in conjunction with EndDrawingOnTop() to ensure that drawing to the screen occurs on top of existing windows.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxRect*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"wxScreenDC":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxCollapsiblePane":{
		"wxCollapsiblePane":[
			{
				"return_type":"",
				"brief_description":"Initializes the object and calls Create() with all the parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxCollapsiblePaneNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the pane window is currently shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsCollapsed":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the pane window is currently hidden.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPane":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns a pointer to the pane window.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Expand":[
			{
				"return_type":"void",
				"brief_description":"Same as calling Collapse(false).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCP_DEFAULT_STYLE",
					"wxDefaultValidator",
					"wxCollapsiblePaneNameStr"
				]
			}
		],
		"Collapse":[
			{
				"return_type":"void",
				"brief_description":"Collapses or expands the pane window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"collapse"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"_implements":[
			"wxControl"
		]
	},
	"wxCollapsiblePaneEvent":{
		"GetCollapsed":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the pane has been collapsed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCollapsed":[
			{
				"return_type":"void",
				"brief_description":"Sets this as a collapsed pane event (if collapsed is true) or as an expanded pane event (if collapsed is false).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"collapsed"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxCollapsiblePaneEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"generator",
					"id",
					"collapsed"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxComboCtrl":{
		"_implements":[
			"wxTextEntry",
			"wxControl"
		],
		"wxComboCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a combo control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxComboBoxNameStr"
				]
			}
		],
		"UseAltPopupWindow":[
			{
				"return_type":"void",
				"brief_description":"Enable or disable usage of an alternative popup window, which guarantees ability to focus the popup control, and allows common native controls to function normally.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Undo":[
			{
				"return_type":"void",
				"brief_description":"Undoes the last edit in the text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowPopup":[
			{
				"return_type":"void",
				"brief_description":"Show the popup.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the text for the combo control text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextIndent":[
			{
				"return_type":"void",
				"brief_description":"This will set the space in pixels between left edge of the control and the text, regardless whether control is read-only or not.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"deprecated":true
			}
		],
		"SetTextCtrlStyle":[
			{
				"return_type":"void",
				"brief_description":"Set a custom window style for the embedded wxTextCtrl.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Sets the text for the text field without affecting the popup.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Selects the text between the two positions, in the combo control text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPopupMinWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets minimum width of the popup.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPopupMaxHeight":[
			{
				"return_type":"void",
				"brief_description":"Sets preferred maximum height of the popup.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"height"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPopupExtents":[
			{
				"return_type":"void",
				"brief_description":"Extends popup size horizontally, relative to the edges of the combo control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"extLeft",
					"extRight"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetPopupControl":[
			{
				"return_type":"void",
				"brief_description":"Set popup interface class derived from wxComboPopup.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxComboPopup*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"popup"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPopupAnchor":[
			{
				"return_type":"void",
				"brief_description":"Set side of the control to which the popup will align itself.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"anchorSide"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"bool",
				"brief_description":"Attempts to set the control margins.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"left",
					"top"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Attempts to set the control margins.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetInsertionPointEnd":[
			{
				"return_type":"void",
				"brief_description":"Sets the insertion point at the end of the combo control text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetInsertionPoint":[
			{
				"return_type":"void",
				"brief_description":"Sets the insertion point in the text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCustomPaintWidth":[
			{
				"return_type":"void",
				"brief_description":"Set width, in pixels, of custom painted area in control without wxCB_READONLY style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetButtonPosition":[
			{
				"return_type":"void",
				"brief_description":"Sets size and position of dropdown button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"side",
					"spacingX"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"-1",
					"wxRIGHT",
					"0"
				]
			}
		],
		"SetButtonBitmaps":[
			{
				"return_type":"void",
				"brief_description":"Sets custom dropdown button graphics.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"bool",
					"const wxBitmap&",
					"const wxBitmap&",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bmpNormal",
					"pushButtonBg",
					"bmpPressed",
					"bmpHover",
					"bmpDisabled"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false",
					"wxNullBitmap",
					"wxNullBitmap",
					"wxNullBitmap"
				]
			}
		],
		"Replace":[
			{
				"return_type":"void",
				"brief_description":"Replaces the text between two positions with the given text, in the combo control text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"from",
					"to",
					"text"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Remove":[
			{
				"return_type":"void",
				"brief_description":"Removes the text between the two positions in the combo control text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"from",
					"to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Popup":[
			{
				"return_type":"void",
				"brief_description":"Shows the popup portion of the combo control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Paste":[
			{
				"return_type":"void",
				"brief_description":"Pastes text from the clipboard to the text field.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnButtonClick":[
			{
				"return_type":"void",
				"brief_description":"Implement in a derived class to define what happens on dropdown button click.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPopupWindowState":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the popup window is in the given state.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"state"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsPopupShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the popup is currently shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HidePopup":[
			{
				"return_type":"void",
				"brief_description":"Dismisses the popup window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"generateEvent"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				],
				"deprecated":true
			}
		],
		"GetValue":[
			{
				"return_type":"wxString",
				"brief_description":"Returns text representation of the current value.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextRect":[
			{
				"return_type":"const wxRect&",
				"brief_description":"Returns area covered by the text field (includes everything except borders and the dropdown button).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextIndent":[
			{
				"return_type":"wxCoord",
				"brief_description":"Returns actual indentation in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"GetTextCtrl":[
			{
				"return_type":"wxTextCtrl*",
				"brief_description":"Get the text control which is part of the combo control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPopupWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns popup window containing the popup control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPopupControl":[
			{
				"return_type":"wxComboPopup*",
				"brief_description":"Returns current popup interface that has been set with SetPopupControl().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMargins":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the margins used by the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLastPosition":[
			{
				"return_type":"long",
				"brief_description":"Returns the last position in the combo control text field.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInsertionPoint":[
			{
				"return_type":"long",
				"brief_description":"Returns the insertion point for the combo control's text field.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHint":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the current hint string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFeatures":[
			{
				"return_type":"int",
				"brief_description":"Returns features supported by wxComboCtrl.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCustomPaintWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns custom painted area in control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetButtonSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns current size of the dropdown button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapPressed":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"Returns depressed button bitmap that has been set with SetButtonBitmaps().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapNormal":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"Returns default button bitmap that has been set with SetButtonBitmaps().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapHover":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"Returns button mouse hover bitmap that has been set with SetButtonBitmaps().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmapDisabled":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"Returns disabled button bitmap that has been set with SetButtonBitmaps().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnablePopupAnimation":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables popup animation, if any, depending on the value of the argument.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"DoShowPopup":[
			{
				"return_type":"void",
				"brief_description":"This member function is not normally called in application code.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DoSetPopupControl":[
			{
				"return_type":"void",
				"brief_description":"This member function is not normally called in application code.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxComboPopup*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"popup"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Dismiss":[
			{
				"return_type":"void",
				"brief_description":"Dismisses the popup window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Cut":[
			{
				"return_type":"void",
				"brief_description":"Copies the selected text to the clipboard and removes the selection.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the combo control for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"value",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxComboBoxNameStr"
				]
			}
		],
		"Copy":[
			{
				"return_type":"void",
				"brief_description":"Copies the selected text to the clipboard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AnimateShow":[
			{
				"return_type":"bool",
				"brief_description":"This member function is not normally called in application code.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetHint":[
			{
				"return_type":"bool",
				"brief_description":"Sets a hint shown in an empty unfocused combo control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"hint"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxComboPopup":{
		"wxComboPopup":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetStringValue":[
			{
				"return_type":"void",
				"brief_description":"The derived class must implement this to receive string value changes from wxComboCtrl.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PaintComboControl":[
			{
				"return_type":"void",
				"brief_description":"The derived class may implement this to paint the parent wxComboCtrl.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dc",
					"rect"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnPopup":[
			{
				"return_type":"void",
				"brief_description":"The derived class may implement this to do special processing when popup is shown.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnDismiss":[
			{
				"return_type":"void",
				"brief_description":"The derived class may implement this to do special processing when popup is hidden.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnComboKeyEvent":[
			{
				"return_type":"void",
				"brief_description":"The derived class may implement this to receive key events from the parent wxComboCtrl.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxKeyEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnComboDoubleClick":[
			{
				"return_type":"void",
				"brief_description":"The derived class may implement this to do something when the parent wxComboCtrl gets double-clicked.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LazyCreate":[
			{
				"return_type":"bool",
				"brief_description":"The derived class may implement this to return true if it wants to delay call to Create() until the popup is shown for the first time.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsCreated":[
			{
				"return_type":"bool",
				"brief_description":"Utility method that returns true if Create has been called.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Init":[
			{
				"return_type":"void",
				"brief_description":"The derived class must implement this to initialize its internal variables.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStringValue":[
			{
				"return_type":"wxString",
				"brief_description":"The derived class must implement this to return string representation of the value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetControl":[
			{
				"return_type":"wxWindow*",
				"brief_description":"The derived class must implement this to return pointer to the associated control created in Create().",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetComboCtrl":[
			{
				"return_type":"wxComboCtrl*",
				"brief_description":"Returns pointer to the associated parent wxComboCtrl.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAdjustedSize":[
			{
				"return_type":"wxSize",
				"brief_description":"The derived class may implement this to return adjusted size for the popup control, according to the variables given.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"minWidth",
					"prefHeight",
					"maxHeight"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"FindItem":[
			{
				"return_type":"bool",
				"brief_description":"Implement to customize matching of value string to an item container entry.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"trueItem"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"Dismiss":[
			{
				"return_type":"void",
				"brief_description":"Utility function that hides the popup.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DestroyPopup":[
			{
				"return_type":"void",
				"brief_description":"You only need to implement this member function if you create your popup class in non-standard way.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"The derived class must implement this to create the popup control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxDataViewCtrl":{
		"wxDataViewCtrl":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxDataViewCtrlNameStr"
				]
			},
			{
				"return_type":"",
				"brief_description":"Default Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UnselectAll":[
			{
				"return_type":"void",
				"brief_description":"Unselect all item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Unselect":[
			{
				"return_type":"void",
				"brief_description":"Unselect the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRowHeight":[
			{
				"return_type":"bool",
				"brief_description":"Sets the row height.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rowHeight"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIndent":[
			{
				"return_type":"void",
				"brief_description":"Sets the indentation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"indent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExpanderColumn":[
			{
				"return_type":"void",
				"brief_description":"Set which column shall contain the tree-like expanders.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCurrentItem":[
			{
				"return_type":"void",
				"brief_description":"Changes the currently focused item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectAll":[
			{
				"return_type":"void",
				"brief_description":"Select all items.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Select":[
			{
				"return_type":"void",
				"brief_description":"Select the given item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrependColumn":[
			{
				"return_type":"bool",
				"brief_description":"Prepends a wxDataViewColumn to the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSelected":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the item is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the item is expanded.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertColumn":[
			{
				"return_type":"bool",
				"brief_description":"Inserts a wxDataViewColumn to the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"HitTest":[
			{
				"return_type":"void",
				"brief_description":"Hittest.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"wxDataViewItem&",
					"wxDataViewColumn*&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"point",
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"HasSelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if any items are currently selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSortingColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Returns the wxDataViewColumn currently responsible for sorting or NULL if none has been selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxControl"
		],
		"AppendBitmapColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			},
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendColumn":[
			{
				"return_type":"bool",
				"brief_description":"Appends a wxDataViewColumn to the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AppendDateColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a date.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_ACTIVATABLE",
					"-1",
					"wxALIGN_NOT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			},
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a date.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_ACTIVATABLE",
					"-1",
					"wxALIGN_NOT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendIconTextColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering text with an icon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_NOT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			},
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering text with an icon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_NOT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendProgressColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a progress indicator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"80",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			},
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a progress indicator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"80",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendTextColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_NOT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			},
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_NOT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendToggleColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a toggle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"30",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			},
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a column for rendering a toggle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"unsigned int",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"model_column",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_INERT",
					"30",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AssociateModel":[
			{
				"return_type":"bool",
				"brief_description":"Associates a wxDataViewModel with the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewModel*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"model"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearColumns":[
			{
				"return_type":"bool",
				"brief_description":"Removes all columns.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Collapse":[
			{
				"return_type":"void",
				"brief_description":"Collapses the item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxDataViewCtrlNameStr"
				]
			}
		],
		"DeleteColumn":[
			{
				"return_type":"bool",
				"brief_description":"Deletes given column.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableDragSource":[
			{
				"return_type":"bool",
				"brief_description":"Enable drag operations using the given format.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableDropTarget":[
			{
				"return_type":"bool",
				"brief_description":"Enable drop operations using the given format.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnsureVisible":[
			{
				"return_type":"void",
				"brief_description":"Call this to ensure that the given item is visible.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewColumn*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"Expand":[
			{
				"return_type":"void",
				"brief_description":"Expands the item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ExpandAncestors":[
			{
				"return_type":"void",
				"brief_description":"Expands all ancestors of the item.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Returns pointer to the column.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColumnCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of columns.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumnPosition":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of the column or -1 if not found in the control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetCurrentItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Returns the currently focused item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExpanderColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Returns column containing the expanders.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndent":[
			{
				"return_type":"int",
				"brief_description":"Returns indentation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns item rectangle.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewColumn*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"GetModel":[
			{
				"return_type":"wxDataViewModel*",
				"brief_description":"Returns pointer to the data model associated with the control (if any).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedItemsCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of currently selected items.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Returns first selected item or an invalid item if none is selected.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelections":[
			{
				"return_type":"int",
				"brief_description":"Fills sel with currently selected items and returns their number.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sel"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelections":[
			{
				"return_type":"void",
				"brief_description":"Sets the selection to the array of wxDataViewItems.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sel"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxDataViewItem":{
		"GetID":[
			{
				"return_type":"void*",
				"brief_description":"Returns the ID.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the ID is not NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDataViewItem":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxDataViewColumn":{
		"_implements":[
			"wxSettableHeaderColumn"
		],
		"GetModelColumn":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the index of the column of the model, which this wxDataViewColumn is displaying.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOwner":[
			{
				"return_type":"wxDataViewCtrl*",
				"brief_description":"Returns the owning wxDataViewCtrl.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDataViewColumn":[
			{
				"return_type":"",
				"brief_description":"Constructs a text column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewRenderer*",
					"unsigned int",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"title",
					"renderer",
					"model_column",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDVC_DEFAULT_WIDTH",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a bitmap column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"wxDataViewRenderer*",
					"unsigned int",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"renderer",
					"model_column",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDVC_DEFAULT_WIDTH",
					"wxALIGN_CENTER",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"GetRenderer":[
			{
				"return_type":"wxDataViewRenderer*",
				"brief_description":"Returns the renderer of this wxDataViewColumn.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxDataViewRenderer":{
		"_implements":[
			"wxObject"
		],
		"EnableEllipsize":[
			{
				"return_type":"void",
				"brief_description":"Enable or disable replacing parts of the item text with ellipsis to make it fit the column width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEllipsizeMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxELLIPSIZE_MIDDLE"
				]
			}
		],
		"DisableEllipsize":[
			{
				"return_type":"void",
				"brief_description":"Disable replacing parts of the item text with ellipsis.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAlignment":[
			{
				"return_type":"int",
				"brief_description":"Returns the alignment.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEllipsizeMode":[
			{
				"return_type":"wxEllipsizeMode",
				"brief_description":"Returns the ellipsize mode used by the renderer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMode":[
			{
				"return_type":"wxDataViewCellMode",
				"brief_description":"Returns the cell mode.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOwner":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Returns pointer to the owning wxDataViewColumn.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"bool",
				"brief_description":"This methods retrieves the value from the renderer in order to transfer the value back to the data model.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetVariantType":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a string with the type of the wxVariant supported by this renderer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the alignment of the renderer's content.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"align"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOwner":[
			{
				"return_type":"void",
				"brief_description":"Sets the owning wxDataViewColumn.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"owner"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"bool",
				"brief_description":"Set the value of the renderer (and thus its cell) to value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Validate":[
			{
				"return_type":"bool",
				"brief_description":"Before data is committed to the data model, it is passed to this method where it can be checked for validity.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxDataViewModel":{
		"AddNotifier":[
			{
				"return_type":"void",
				"brief_description":"Adds a wxDataViewModelNotifier to the model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewModelNotifier*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"notifier"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ChangeValue":[
			{
				"return_type":"bool",
				"brief_description":"Change the value of the given item and update the control to reflect it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&",
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"variant",
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Cleared":[
			{
				"return_type":"bool",
				"brief_description":"Called to inform the model that all data has been cleared.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Compare":[
			{
				"return_type":"int",
				"brief_description":"The compare function to be used by control.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&",
					"unsigned int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"item1",
					"item2",
					"column",
					"ascending"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetAttr":[
			{
				"return_type":"bool",
				"brief_description":"Override this to indicate that the item has special font attributes.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"unsigned int",
					"wxDataViewItemAttr&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"item",
					"col",
					"attr"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetChildren":[
			{
				"return_type":"unsigned int",
				"brief_description":"Override this so the control can query the child items of an item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"children"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetColumnCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Override this to indicate the number of columns in the model.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumnType":[
			{
				"return_type":"wxString",
				"brief_description":"Override this to indicate what type of data is stored in the column specified by col.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetParent":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Override this to indicate which wxDataViewItem representing the parent of item or an invalid wxDataViewItem if the root item is the parent item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetValue":[
			{
				"return_type":"void",
				"brief_description":"Override this to indicate the value of item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariant&",
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"variant",
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"HasContainerColumns":[
			{
				"return_type":"bool",
				"brief_description":"Override this method to indicate if a container item merely acts as a headline (or for categorisation) or if it also acts a normal item with entries for further columns.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasDefaultCompare":[
			{
				"return_type":"bool",
				"brief_description":"Override this to indicate that the model provides a default compare function that the control should use if no wxDataViewColumn has been chosen for sorting.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasValue":[
			{
				"return_type":"bool",
				"brief_description":"Return true if there is a value in the given column of this item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"unsigned"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsContainer":[
			{
				"return_type":"bool",
				"brief_description":"Override this to indicate of item is a container, i.e. if it can have child items.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Override this to indicate that the item should be disabled.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ItemAdded":[
			{
				"return_type":"bool",
				"brief_description":"Call this to inform the model that an item has been added to the data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ItemChanged":[
			{
				"return_type":"bool",
				"brief_description":"Call this to inform the model that an item has changed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ItemDeleted":[
			{
				"return_type":"bool",
				"brief_description":"Call this to inform the model that an item has been deleted from the data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ItemsAdded":[
			{
				"return_type":"bool",
				"brief_description":"Call this to inform the model that several items have been added to the data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"items"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ItemsChanged":[
			{
				"return_type":"bool",
				"brief_description":"Call this to inform the model that several items have changed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"items"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ItemsDeleted":[
			{
				"return_type":"bool",
				"brief_description":"Call this to inform the model that several items have been deleted.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"items"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RemoveNotifier":[
			{
				"return_type":"void",
				"brief_description":"Remove the notifier from the list of notifiers.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewModelNotifier*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"notifier"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Resort":[
			{
				"return_type":"void",
				"brief_description":"Call this to initiate a resort after the sort function has been changed.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetValue":[
			{
				"return_type":"bool",
				"brief_description":"This gets called in order to set a value in the data model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&",
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"variant",
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"ValueChanged":[
			{
				"return_type":"bool",
				"brief_description":"Call this to inform this model that a value in the model has been changed.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxRefCounter"
		]
	},
	"wxDataViewModelNotifier":{
		"Cleared":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOwner":[
			{
				"return_type":"wxDataViewModel*",
				"brief_description":"Get owning wxDataViewModel.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ItemAdded":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ItemChanged":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ItemDeleted":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"item"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ItemsAdded":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"items"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ItemsChanged":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"items"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ItemsDeleted":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItemArray&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"items"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Resort":[
			{
				"return_type":"void",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetOwner":[
			{
				"return_type":"void",
				"brief_description":"Set owner of this notifier.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewModel*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"owner"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ValueChanged":[
			{
				"return_type":"bool",
				"brief_description":"Called by owning model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxDataViewModelNotifier":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxRefCounter":{
		"DecRef":[
			{
				"return_type":"void",
				"brief_description":"Decrements the reference count associated with this shared data and, if it reaches zero, destroys this instance of wxRefCounter releasing its memory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRefCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the reference count associated with this shared data.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IncRef":[
			{
				"return_type":"void",
				"brief_description":"Increments the reference count associated with this shared data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxRefCounter":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxDataViewListCtrl":{
		"AppendItem":[
			{
				"return_type":"void",
				"brief_description":"Appends an item (=row) to the control and store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVector< wxVariant >&",
					"wxUIntPtr"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"values",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"PrependItem":[
			{
				"return_type":"void",
				"brief_description":"Prepends an item (=row) to the control and store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVector< wxVariant >&",
					"wxUIntPtr"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"values",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"InsertItem":[
			{
				"return_type":"void",
				"brief_description":"Inserts an item (=row) to the control and store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxVector< wxVariant >&",
					"wxUIntPtr"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"values",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"AppendColumn":[
			{
				"return_type":"void",
				"brief_description":"Appends a column to the control and additionally appends a column to the list store with the type varianttype.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"column",
					"varianttype"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Appends a column to the control and additionally appends a column to the store with the type string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AppendIconTextColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends an icon-and-text column to the control and the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_LEFT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendProgressColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a progress column to the control and the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_LEFT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendTextColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a text column to the control and the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDATAVIEW_CELL_INERT",
					"-1",
					"wxALIGN_LEFT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"AppendToggleColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Appends a toggle column to the control and the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"mode",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDATAVIEW_CELL_ACTIVATABLE",
					"-1",
					"wxALIGN_LEFT",
					"wxDATAVIEW_COL_RESIZABLE"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the control and a wxDataViewListStore as its internal model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDV_ROW_LINES",
					"wxDefaultValidator"
				]
			}
		],
		"DeleteAllItems":[
			{
				"return_type":"void",
				"brief_description":"Delete all items (= all rows).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteItem":[
			{
				"return_type":"void",
				"brief_description":"Delete the row at position row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectedRow":[
			{
				"return_type":"int",
				"brief_description":"Returns index of the selected row or wxNOT_FOUND.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStore":[
			{
				"return_type":"wxDataViewListStore*",
				"brief_description":"Returns the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"const wxDataViewListStore*",
				"brief_description":"Returns the store.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxDataViewCtrl"
		],
		"GetTextValue":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the value from the store.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetToggleValue":[
			{
				"return_type":"bool",
				"brief_description":"Returns the value from the store.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetValue":[
			{
				"return_type":"void",
				"brief_description":"Returns the value from the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariant&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"value",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"InsertColumn":[
			{
				"return_type":"void",
				"brief_description":"Inserts a column to the control and additionally inserts a column to the list store with the type varianttype.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"wxDataViewColumn*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pos",
					"column",
					"varianttype"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Inserts a column to the control and additionally inserts a column to the store with the type string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"column"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsRowSelected":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if row is selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ItemToRow":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of given item or wxNOT_FOUND if it's not a valid item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrependColumn":[
			{
				"return_type":"void",
				"brief_description":"Prepends a column to the control and additionally prepends a column to the list store with the type varianttype.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"column",
					"varianttype"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Prepends a column to the control and additionally prepends a column to the store with the type string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataViewColumn*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RowToItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Returns the wxDataViewItem at the given row.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectRow":[
			{
				"return_type":"void",
				"brief_description":"Selects given row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value in the store and update the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"value",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetToggleValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value in the store and update the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"value",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value in the store and update the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"value",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"UnselectRow":[
			{
				"return_type":"void",
				"brief_description":"Unselects given row.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDataViewListCtrl":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDV_ROW_LINES",
					"wxDefaultValidator"
				]
			}
		]
	},
	"wxDataViewListStore":{
		"_implements":[
			"wxDataViewIndexListModel"
		],
		"AppendColumn":[
			{
				"return_type":"void",
				"brief_description":"Appends a data column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"varianttype"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteAllItems":[
			{
				"return_type":"void",
				"brief_description":"Delete all item (=all rows) in the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AppendItem":[
			{
				"return_type":"void",
				"brief_description":"Appends an item (=row) and fills it with values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVector< wxVariant >&",
					"wxUIntPtr"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"values",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"PrependItem":[
			{
				"return_type":"void",
				"brief_description":"Prepends an item (=row) and fills it with values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVector< wxVariant >&",
					"wxUIntPtr"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"values",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"InsertItem":[
			{
				"return_type":"void",
				"brief_description":"Inserts an item (=row) and fills it with values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxVector< wxVariant >&",
					"wxUIntPtr"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"values",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"DeleteItem":[
			{
				"return_type":"void",
				"brief_description":"Delete the item (=row) at position pos.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColumnCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Overridden from wxDataViewModel.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumnType":[
			{
				"return_type":"wxString",
				"brief_description":"Overridden from wxDataViewModel.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetValueByRow":[
			{
				"return_type":"void",
				"brief_description":"Overridden from wxDataViewIndexListModel.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariant&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"value",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"InsertColumn":[
			{
				"return_type":"void",
				"brief_description":"Inserts a data column before pos.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pos",
					"varianttype"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"PrependColumn":[
			{
				"return_type":"void",
				"brief_description":"Prepends a data column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"varianttype"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetValueByRow":[
			{
				"return_type":"bool",
				"brief_description":"Overridden from wxDataViewIndexListModel.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"value",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"wxDataViewListStore":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxDataViewListModel":{
		"_implements":[
			"wxDataViewModel"
		],
		"GetAttrByRow":[
			{
				"return_type":"bool",
				"brief_description":"Override this to indicate that the row has special font attributes.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"unsigned int",
					"wxDataViewItemAttr&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"row",
					"col",
					"attr"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetValueByRow":[
			{
				"return_type":"void",
				"brief_description":"Override this to allow getting values from the model.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariant&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"variant",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of items (or rows) in the list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRow":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the position of given item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEnabledByRow":[
			{
				"return_type":"bool",
				"brief_description":"Override this if you want to disable specific items.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetValueByRow":[
			{
				"return_type":"bool",
				"brief_description":"Called in order to set a value in the model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"variant",
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		]
	},
	"wxDataViewEvent":{
		"_implements":[
			"wxNotifyEvent"
		],
		"GetItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCacheFrom":[
			{
				"return_type":"int",
				"brief_description":"Return the first row that will be displayed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCacheTo":[
			{
				"return_type":"int",
				"brief_description":"Return the last row that will be displayed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumn":[
			{
				"return_type":"int",
				"brief_description":"Returns the position of the column in the control or -1 if no column field was set by the event emitter.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDataBuffer":[
			{
				"return_type":"void*",
				"brief_description":"Gets the data buffer for a drop data transfer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDataFormat":[
			{
				"return_type":"wxDataFormat",
				"brief_description":"Gets the wxDataFormat during a drop operation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDataSize":[
			{
				"return_type":"size_t",
				"brief_description":"Gets the data size for a drop data transfer.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDataViewColumn":[
			{
				"return_type":"wxDataViewColumn*",
				"brief_description":"Returns a pointer to the wxDataViewColumn from which the event was emitted or NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetModel":[
			{
				"return_type":"wxDataViewModel*",
				"brief_description":"Returns the wxDataViewModel associated with the event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the position of a context menu event in screen coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"const wxVariant&",
				"brief_description":"Returns a reference to a value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEditCancelled":[
			{
				"return_type":"bool",
				"brief_description":"Can be used to determine whether the new value is going to be accepted in wxEVT_DATAVIEW_ITEM_EDITING_DONE handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColumn":[
			{
				"return_type":"void",
				"brief_description":"Sets the column index associated with this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDataObject":[
			{
				"return_type":"void",
				"brief_description":"Set wxDataObject for data transfer within a drag operation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"obj"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value associated with this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDataViewEvent":[
			{
				"return_type": "",
				"brief_description": "Constructor for the events affecting columns (and possibly also items).",
				"constant": false,
				"virtual": false,
				"pure_virtual": false,
				"static": false,
				"protected": false,
				"parameters_type": [
					"wxEventType",
					"wxDataViewCtrl*",
					"wxDataViewColumn*",
					"const wxDataViewItem&"
				],
				"parameters_is_array": [
					false,
					false,
					false,
					false
				],
				"parameters_extra": [
					false,
					false,
					false,
					false
				],
				"parameters_name": [
					"evtType",
					"dvc",
					"column",
					"item"
				],
				"parameters_required": [
					true,
					true,
					true
				],
				"parameters_default_value": [
					null,
					null,
					null,
					"wxDataViewItem()"
				]
			}
		]
	},
	"wxDataFormat":{
		"GetId":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the name of a custom format (this function will fail for a standard format).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetType":[
			{
				"return_type":"wxDataFormatId",
				"brief_description":"Returns the platform-specific number identifying the format.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetId":[
			{
				"return_type":"void",
				"brief_description":"Sets the format to be the custom format identified by the given name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetType":[
			{
				"return_type":"void",
				"brief_description":"Sets the format to the given value, which should be one of wxDF_XXX constants.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataFormatId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDataFormat":[
			{
				"return_type":"",
				"brief_description":"Constructs a data format object for one of the standard data formats or an empty data object (use SetType() or SetId() later in this case).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataFormatId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxDF_INVALID"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a data format object for a custom format identified by its name format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator!=":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the formats are different.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataFormatId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator==":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the formats are equal.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataFormatId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxDataInputStream":{
		"wxDataInputStream":[
			{
				"return_type":"",
				"brief_description":"Constructs a datastream object from an input stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxConvUTF8"
				]
			}
		],
		"SetConv":[
			{
				"return_type":"void",
				"brief_description":"Sets the text conversion class used for reading strings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ReadString":[
			{
				"return_type":"wxString",
				"brief_description":"Reads a string from a stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ReadDouble":[
			{
				"return_type":"void",
				"brief_description":"Reads double data from the stream in a specified buffer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"double",
				"brief_description":"Reads a double from the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Read8":[
			{
				"return_type":"void",
				"brief_description":"Reads bytes from the stream in a specified buffer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint8*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxUint8",
				"brief_description":"Reads a single byte from the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Read32":[
			{
				"return_type":"void",
				"brief_description":"Reads 32 bit unsigned integers from the stream in a specified buffer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint32*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxUint32",
				"brief_description":"Reads a 32 bit unsigned integer from the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Read16":[
			{
				"return_type":"void",
				"brief_description":"Reads 16 bit unsigned integers from the stream in a specified buffer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint16*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxUint16",
				"brief_description":"Reads a 16 bit unsigned integer from the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetConv":[
			{
				"return_type":"wxMBConv*",
				"brief_description":"Returns the current text conversion class used for reading strings.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"BigEndianOrdered":[
			{
				"return_type":"void",
				"brief_description":"If be_order is true, all data will be read in big-endian order, such as written by programs on a big endian architecture (e.g.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"be_order"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxDataObject":{
		"GetAllFormats":[
			{
				"return_type":"void",
				"brief_description":"Copies all formats supported in the given direction dir to the array pointed to by formats.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataFormat*",
					"Direction"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"formats",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"Get"
				]
			}
		],
		"GetDataHere":[
			{
				"return_type":"bool",
				"brief_description":"The method will write the data of the format format to the buffer buf.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&",
					"void*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"format",
					"buf"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetDataSize":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the data size of the given format format.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFormatCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of available formats for rendering or setting the data.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"Direction"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"Get"
				]
			}
		],
		"GetPreferredFormat":[
			{
				"return_type":"wxDataFormat",
				"brief_description":"Returns the preferred format for either rendering the data (if dir is Get, its default value) or for setting it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"Direction"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"Get"
				]
			}
		],
		"IsSupported":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this format is supported.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&",
					"Direction"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"format",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"Get"
				]
			}
		],
		"SetData":[
			{
				"return_type":"bool",
				"brief_description":"Set the data in the format format of the length len provided in the buffer buf.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&",
					"size_t",
					"const void*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"format",
					"len",
					"buf"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"wxDataObject":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxDataObjectComposite":{
		"Add":[
			{
				"return_type":"void",
				"brief_description":"Adds the dataObject to the list of supported objects and it becomes the preferred object if preferred is true.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObjectSimple*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dataObject",
					"preferred"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"_implements":[
			"wxDataObject"
		],
		"GetReceivedFormat":[
			{
				"return_type":"wxDataFormat",
				"brief_description":"Report the format passed to the SetData() method.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDataObjectComposite":[
			{
				"return_type":"",
				"brief_description":"The default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetObject":[
			{
				"return_type":"wxDataObjectSimple*",
				"brief_description":"Returns the pointer to the object which supports the passed format for the specified direction.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&",
					"wxDataObject::Direction"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"format",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDataObject::Get"
				]
			}
		]
	},
	"wxDataObjectSimple":{
		"_implements":[
			"wxDataObject"
		],
		"GetDataHere":[
			{
				"return_type":"bool",
				"brief_description":"Copy the data to the buffer, return true on success.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"buf"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDataSize":[
			{
				"return_type":"size_t",
				"brief_description":"Gets the size of our data.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFormat":[
			{
				"return_type":"const wxDataFormat&",
				"brief_description":"Returns the (one and only one) format supported by this object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetData":[
			{
				"return_type":"bool",
				"brief_description":"Copy the data from the buffer, return true on success.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const void*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"len",
					"buf"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFormat":[
			{
				"return_type":"void",
				"brief_description":"Sets the supported format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDataObjectSimple":[
			{
				"return_type":"",
				"brief_description":"Constructor accepts the supported format (none by default) which may also be set later with SetFormat().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxFormatInvalid"
				]
			}
		]
	},
	"wxDataOutputStream":{
		"BigEndianOrdered":[
			{
				"return_type":"void",
				"brief_description":"If be_order is true, all data will be written in big-endian order, e.g.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"be_order"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetConv":[
			{
				"return_type":"wxMBConv*",
				"brief_description":"Returns the current text conversion class used for writing strings.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetConv":[
			{
				"return_type":"void",
				"brief_description":"Sets the text conversion class used for writing strings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Write16":[
			{
				"return_type":"void",
				"brief_description":"Writes the 16 bit unsigned integer i16 to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint16"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i16"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Writes an array of 16 bit unsigned integer to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxUint16*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Write32":[
			{
				"return_type":"void",
				"brief_description":"Writes the 32 bit unsigned integer i32 to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint32"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i32"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Writes an array of 32 bit unsigned integer to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxUint32*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Write8":[
			{
				"return_type":"void",
				"brief_description":"Writes the single byte i8 to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxUint8"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i8"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Writes an array of bytes to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxUint8*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"WriteDouble":[
			{
				"return_type":"void",
				"brief_description":"Writes the double d to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"d"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Writes an array of double to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const double*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"WriteString":[
			{
				"return_type":"void",
				"brief_description":"Writes string to the stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDataOutputStream":[
			{
				"return_type":"",
				"brief_description":"Constructs a datastream object from an output stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOutputStream&",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxConvUTF8"
				]
			}
		]
	},
	"wxDataViewBitmapRenderer":{
		"wxDataViewBitmapRenderer":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"varianttype",
					"mode",
					"align"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"wxBitmap\"",
					"wxDATAVIEW_CELL_INERT",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		],
		"_implements":[
			"wxDataViewRenderer"
		]
	},
	"wxDataViewChoiceRenderer":{
		"_implements":[
			"wxDataViewRenderer"
		],
		"GetChoice":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the choice referred to by index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetChoices":[
			{
				"return_type":"const wxArrayString&",
				"brief_description":"Returns all choices.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDataViewChoiceRenderer":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"choices",
					"mode",
					"alignment"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDATAVIEW_CELL_EDITABLE",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		]
	},
	"wxDataViewCustomRenderer":{
		"_implements":[
			"wxDataViewRenderer"
		],
		"ActivateCell":[
			{
				"return_type":"bool",
				"brief_description":"Override this to react to cell activation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&",
					"wxDataViewModel*",
					"const wxDataViewItem&",
					"unsigned int",
					"const wxMouseEvent*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"cell",
					"model",
					"item",
					"col",
					"mouseEvent"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"CreateEditorCtrl":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Override this to create the actual editor control once editing is about to start.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxRect",
					"const wxVariant&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"labelRect",
					"value"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetAttr":[
			{
				"return_type":"const wxDataViewItemAttr&",
				"brief_description":"Return the attribute to be used for rendering.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Return size required to show content.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValueFromEditorCtrl":[
			{
				"return_type":"bool",
				"brief_description":"Override this so that the renderer can get the value from the editor control (pointed to by editor):",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxVariant&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"editor",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"HasEditorCtrl":[
			{
				"return_type":"bool",
				"brief_description":"Override this and make it return true in order to indicate that this renderer supports in-place editing.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Render":[
			{
				"return_type":"bool",
				"brief_description":"Override this to render the cell.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRect",
					"wxDC*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"cell",
					"dc",
					"state"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"RenderText":[
			{
				"return_type":"void",
				"brief_description":"This method should be called from within Render() whenever you need to render simple text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"wxRect",
					"wxDC*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"text",
					"xoffset",
					"cell",
					"dc",
					"state"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"LeftClick":[
			{
				"return_type":"bool",
				"brief_description":"Override this to react to a left click.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPoint",
					"wxRect",
					"wxDataViewModel*",
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"cursor",
					"cell",
					"model",
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				],
				"deprecated":true
			}
		],
		"StartDrag":[
			{
				"return_type":"bool",
				"brief_description":"Override this to start a drag operation.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxRect&",
					"wxDataViewModel*",
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"cursor",
					"cell",
					"model",
					"item",
					"col"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxDataViewDateRenderer":{
		"_implements":[
			"wxDataViewRenderer"
		],
		"wxDataViewDateRenderer":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"varianttype",
					"mode",
					"align"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"datetime\"",
					"wxDATAVIEW_CELL_ACTIVATABLE",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		]
	},
	"wxDataViewIconText":{
		"_implements":[
			"wxObject"
		],
		"GetIcon":[
			{
				"return_type":"const wxIcon&",
				"brief_description":"Gets the icon.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetIcon":[
			{
				"return_type":"void",
				"brief_description":"Set the icon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Set the text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDataViewIconText":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxIcon&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"text",
					"icon"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"wxNullIcon"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewIconText&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"other"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxDataViewIconTextRenderer":{
		"_implements":[
			"wxDataViewRenderer"
		],
		"wxDataViewIconTextRenderer":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"varianttype",
					"mode",
					"align"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"wxDataViewIconText\"",
					"wxDATAVIEW_CELL_INERT",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		]
	},
	"wxDataViewIndexListModel":{
		"_implements":[
			"wxDataViewListModel"
		]
	},
	"wxDataViewItemAttr":{
		"SetBold":[
			{
				"return_type":"void",
				"brief_description":"Call this to indicate that the item shall be displayed in bold text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"set"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Call this to indicate that the item shall be displayed with that colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItalic":[
			{
				"return_type":"void",
				"brief_description":"Call this to indicate that the item shall be displayed in italic text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"set"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxDataViewItemAttr":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxDataViewProgressRenderer":{
		"wxDataViewProgressRenderer":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"label",
					"varianttype",
					"mode",
					"align"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"\"long\"",
					"wxDATAVIEW_CELL_INERT",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		],
		"_implements":[
			"wxDataViewRenderer"
		]
	},
	"wxDataViewSpinRenderer":{
		"wxDataViewSpinRenderer":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"min",
					"max",
					"mode",
					"align"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDATAVIEW_CELL_EDITABLE",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		],
		"_implements":[
			"wxDataViewCustomRenderer"
		]
	},
	"wxDataViewTextRenderer":{
		"wxDataViewTextRenderer":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"varianttype",
					"mode",
					"align"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"string\"",
					"wxDATAVIEW_CELL_INERT",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		],
		"_implements":[
			"wxDataViewRenderer"
		]
	},
	"wxDataViewToggleRenderer":{
		"wxDataViewToggleRenderer":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxDataViewCellMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"varianttype",
					"mode",
					"align"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"bool\"",
					"wxDATAVIEW_CELL_INERT",
					"wxDVR_DEFAULT_ALIGNMENT"
				]
			}
		],
		"_implements":[
			"wxDataViewRenderer"
		]
	},
	"wxDataViewTreeCtrl":{
		"_implements":[
			"wxDataViewCtrl"
		],
		"AppendContainer":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Appends a container to the given parent.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"int",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"expanded",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"NULL"
				]
			}
		],
		"AppendItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Appends an item to the given parent.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"NULL"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the control and a wxDataViewTreeStore as its internal model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDV_NO_HEADER|wxDV_ROW_LINES",
					"wxDefaultValidator"
				]
			}
		],
		"DeleteAllItems":[
			{
				"return_type":"void",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteChildren":[
			{
				"return_type":"void",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteItem":[
			{
				"return_type":"void",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetChildCount":[
			{
				"return_type":"int",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetImageList":[
			{
				"return_type":"wxImageList*",
				"brief_description":"Returns the image list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItemData":[
			{
				"return_type":"wxClientData*",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemExpandedIcon":[
			{
				"return_type":"const wxIcon&",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemIcon":[
			{
				"return_type":"const wxIcon&",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemText":[
			{
				"return_type":"wxString",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetNthChild":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetStore":[
			{
				"return_type":"wxDataViewTreeStore*",
				"brief_description":"Returns the store.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"const wxDataViewTreeStore*",
				"brief_description":"Returns the store.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InsertContainer":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Calls the same method from wxDataViewTreeStore but uses an index position in the image list instead of a wxIcon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&",
					"const wxString&",
					"int",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"previous",
					"text",
					"icon",
					"expanded",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"-1",
					"-1",
					"NULL"
				]
			}
		],
		"InsertItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Calls the same method from wxDataViewTreeStore but uses an index position in the image list instead of a wxIcon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&",
					"const wxString&",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"previous",
					"text",
					"icon",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"-1",
					"NULL"
				]
			}
		],
		"IsContainer":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if item is a container.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrependContainer":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Calls the same method from wxDataViewTreeStore but uses an index position in the image list instead of a wxIcon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"int",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"expanded",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"-1",
					"NULL"
				]
			}
		],
		"PrependItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Calls the same method from wxDataViewTreeStore but uses an index position in the image list instead of a wxIcon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"-1",
					"NULL"
				]
			}
		],
		"SetImageList":[
			{
				"return_type":"void",
				"brief_description":"Sets the image list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImageList*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imagelist"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemData":[
			{
				"return_type":"void",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemExpandedIcon":[
			{
				"return_type":"void",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxIcon&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"icon"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemIcon":[
			{
				"return_type":"void",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxIcon&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"icon"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemText":[
			{
				"return_type":"void",
				"brief_description":"Calls the identical method from wxDataViewTreeStore.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"text"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxDataViewTreeCtrl":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDV_NO_HEADER|wxDV_ROW_LINES",
					"wxDefaultValidator"
				]
			}
		]
	},
	"wxDataViewTreeStore":{
		"_implements":[
			"wxDataViewModel"
		],
		"AppendContainer":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Append a container.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"const wxIcon&",
					"const wxIcon&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"expanded",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullIcon",
					"wxNullIcon",
					"NULL"
				]
			}
		],
		"AppendItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Append an item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"const wxIcon&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullIcon",
					"NULL"
				]
			}
		],
		"DeleteAllItems":[
			{
				"return_type":"void",
				"brief_description":"Delete all item in the model.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteChildren":[
			{
				"return_type":"void",
				"brief_description":"Delete all children of the item, but not the item itself.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteItem":[
			{
				"return_type":"void",
				"brief_description":"Delete this item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetChildCount":[
			{
				"return_type":"int",
				"brief_description":"Return the number of children of item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemData":[
			{
				"return_type":"wxClientData*",
				"brief_description":"Returns the client data associated with the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemExpandedIcon":[
			{
				"return_type":"const wxIcon&",
				"brief_description":"Returns the icon to display in expanded containers.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemIcon":[
			{
				"return_type":"const wxIcon&",
				"brief_description":"Returns the icon of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text of the item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetNthChild":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Returns the nth child item of item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"pos"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"InsertContainer":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Inserts a container after previous.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&",
					"const wxString&",
					"const wxIcon&",
					"const wxIcon&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"previous",
					"text",
					"icon",
					"expanded",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxNullIcon",
					"wxNullIcon",
					"NULL"
				]
			}
		],
		"InsertItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Inserts an item after previous.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxDataViewItem&",
					"const wxString&",
					"const wxIcon&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"previous",
					"text",
					"icon",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxNullIcon",
					"NULL"
				]
			}
		],
		"PrependContainer":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Inserts a container before the first child item or parent.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"const wxIcon&",
					"const wxIcon&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"expanded",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullIcon",
					"wxNullIcon",
					"NULL"
				]
			}
		],
		"PrependItem":[
			{
				"return_type":"wxDataViewItem",
				"brief_description":"Inserts an item before the first child item or parent.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxString&",
					"const wxIcon&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"text",
					"icon",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullIcon",
					"NULL"
				]
			}
		],
		"SetItemData":[
			{
				"return_type":"void",
				"brief_description":"Sets the client data associated with the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemExpandedIcon":[
			{
				"return_type":"void",
				"brief_description":"Sets the expanded icon for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxIcon&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"icon"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemIcon":[
			{
				"return_type":"void",
				"brief_description":"Sets the icon for the item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataViewItem&",
					"const wxIcon&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"icon"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxDataViewTreeStore":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxDataViewVirtualListModel":{
		"_implements":[
			"wxDataViewListModel"
		]
	},
	"wxVariant":{
		"Append":[
			{
				"return_type":"void",
				"brief_description":"Appends a value to the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Makes the variant null by deleting the internal data and set the name to wxEmptyString.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearList":[
			{
				"return_type":"void",
				"brief_description":"Deletes the contents of the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Convert":[
			{
				"return_type":"bool",
				"brief_description":"Retrieves and converts the value of this variant to the type that value is.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Retrieves and converts the value of this variant to the type that value is.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Retrieves and converts the value of this variant to the type that value is.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Retrieves and converts the value of this variant to the type that value is.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxChar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Retrieves and converts the value of this variant to the type that value is.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDateTime*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Retrieves and converts the value of this variant to the type that value is.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Delete":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the zero-based item from the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetArrayString":[
			{
				"return_type":"wxArrayString",
				"brief_description":"Returns the string array value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBool":[
			{
				"return_type":"bool",
				"brief_description":"Returns the boolean value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetChar":[
			{
				"return_type":"wxUniChar",
				"brief_description":"Returns the character value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetData":[
			{
				"return_type":"wxVariantData*",
				"brief_description":"Returns a pointer to the internal variant data.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDateTime":[
			{
				"return_type":"wxDateTime",
				"brief_description":"Returns the date value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDouble":[
			{
				"return_type":"double",
				"brief_description":"Returns the floating point value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLong":[
			{
				"return_type":"long",
				"brief_description":"Returns the integer value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLongLong":[
			{
				"return_type":"wxLongLong",
				"brief_description":"Returns the signed 64-bit integer value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns a constant reference to the variant name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetType":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the value type as a string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetULongLong":[
			{
				"return_type":"wxULongLong",
				"brief_description":"Returns the unsigned 64-bit integer value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVoidPtr":[
			{
				"return_type":"void*",
				"brief_description":"Gets the void pointer value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWxObjectPtr":[
			{
				"return_type":"wxObject*",
				"brief_description":"Gets the wxObject pointer value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Insert":[
			{
				"return_type":"void",
				"brief_description":"Inserts a value at the front of the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsNull":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is no data associated with this variant, false if there is data.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsValueKindOf":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the data is derived from the class described by type, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxClassInfo*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MakeNull":[
			{
				"return_type":"void",
				"brief_description":"Makes the variant null by deleting the internal data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MakeString":[
			{
				"return_type":"wxString",
				"brief_description":"Makes a string representation of the variant value (for any type).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Member":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if value matches an element in the list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsType":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if type matches the type of the variant, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetString":[
			{
				"return_type":"wxString",
				"brief_description":"Gets the string value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of elements in the list.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"NullList":[
			{
				"return_type":"void",
				"brief_description":"Makes an empty list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetData":[
			{
				"return_type":"void",
				"brief_description":"Sets the internal variant data, deleting the existing data if there is any.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariantData*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxVariant":[
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"value",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a long.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"value",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a bool.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"value",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a double.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"value",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a void pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"value",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a pointer to an wxObject derived class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"value",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a wxDateTime.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDateTime&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"val",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from a wxArrayString.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"val",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a variant from another variant by increasing the reference count.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVariant&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"variant"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxVariantData":{
		"_implements":[
			"wxObjectRefData"
		],
		"Clone":[
			{
				"return_type":"wxVariantData*",
				"brief_description":"This function can be overridden to clone the data.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DecRef":[
			{
				"return_type":"void",
				"brief_description":"Decreases reference count.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Eq":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this object is equal to data.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxVariantData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetAny":[
			{
				"return_type":"bool",
				"brief_description":"Converts value to wxAny, if possible.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAny*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"any"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetType":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the string type of the data.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValueClassInfo":[
			{
				"return_type":"wxClassInfo*",
				"brief_description":"If the data is a wxObject returns a pointer to the objects wxClassInfo structure, if the data isn't a wxObject the method returns NULL.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IncRef":[
			{
				"return_type":"void",
				"brief_description":"Increases reference count.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Read":[
			{
				"return_type":"bool",
				"brief_description":"Reads the data from stream.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"istream&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stream"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads the data from string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Write":[
			{
				"return_type":"bool",
				"brief_description":"Writes the data to stream.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"ostream&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stream"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Writes the data to string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"string"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxVariantData":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxClassInfo":{
		"CreateObject":[
			{
				"return_type":"wxObject*",
				"brief_description":"Creates an object of the appropriate kind.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindClass":[
			{
				"return_type":"wxClassInfo*",
				"brief_description":"Finds the wxClassInfo object for a class with the given name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"className"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBaseClassName1":[
			{
				"return_type":"const wxChar*",
				"brief_description":"Returns the name of the first base class (NULL if none).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBaseClassName2":[
			{
				"return_type":"const wxChar*",
				"brief_description":"Returns the name of the second base class (NULL if none).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClassName":[
			{
				"return_type":"const wxChar*",
				"brief_description":"Returns the string form of the class name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"int",
				"brief_description":"Returns the size of the class.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsDynamic":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this class info can create objects of the associated class.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsKindOf":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this class is a kind of (inherits from) the given class.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxClassInfo*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxClassInfo":[
			{
				"return_type":"",
				"brief_description":"Constructs a wxClassInfo object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxChar*",
					"const wxClassInfo*",
					"const wxClassInfo*",
					"int",
					"wxObjectConstructorFn"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"className",
					"baseClass1",
					"baseClass2",
					"size",
					"fn"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxColourDatabase":{
		"AddColour":[
			{
				"return_type":"void",
				"brief_description":"Adds a colour to the database.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"colourName",
					"colour"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Find":[
			{
				"return_type":"wxColour",
				"brief_description":"Finds a colour given the name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colourName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindName":[
			{
				"return_type":"wxString",
				"brief_description":"Finds a colour name given the colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxColourDatabase":[
			{
				"return_type":"",
				"brief_description":"Constructs the colour database.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxClipboard":{
		"_implements":[
			"wxObject"
		],
		"AddData":[
			{
				"return_type":"bool",
				"brief_description":"Call this function to add the data object to the clipboard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Clears the global clipboard object and the system's clipboard if possible.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Close":[
			{
				"return_type":"void",
				"brief_description":"Call this function to close the clipboard, having opened it with Open().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Flush":[
			{
				"return_type":"bool",
				"brief_description":"Flushes the clipboard: this means that the data which is currently on clipboard will stay available even after the application exits (possibly eating memory), otherwise the clipboard will be emptied on exit.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetData":[
			{
				"return_type":"bool",
				"brief_description":"Call this function to fill data with data on the clipboard, if available in the required format.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObject&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsOpened":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the clipboard has been opened.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSupported":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is data which matches the data format of the given data object currently available on the clipboard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsUsingPrimarySelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if we are using the primary selection, false if clipboard one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Open":[
			{
				"return_type":"bool",
				"brief_description":"Call this function to open the clipboard before calling SetData() and GetData().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetData":[
			{
				"return_type":"bool",
				"brief_description":"Call this function to set the data object to the clipboard.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UsePrimarySelection":[
			{
				"return_type":"void",
				"brief_description":"On platforms supporting it (all X11-based ports), wxClipboard uses the CLIPBOARD X11 selection by default.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"primary"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"wxClipboard":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Get":[
			{
				"return_type":"wxClipboard*",
				"brief_description":"Returns the global instance (wxTheClipboard) of the clipboard object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxClipboardTextEvent":{
		"wxClipboardTextEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxListView":{
		"_implements":[
			"wxListCtrl"
		],
		"ClearColumnImage":[
			{
				"return_type":"void",
				"brief_description":"Resets the column image  after calling this function, no image will be shown.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Focus":[
			{
				"return_type":"void",
				"brief_description":"Sets focus to the item with the given index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFirstSelected":[
			{
				"return_type":"long",
				"brief_description":"Returns the first selected item in a (presumably) multiple selection control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFocusedItem":[
			{
				"return_type":"long",
				"brief_description":"Returns the currently focused item or -1 if none.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNextSelected":[
			{
				"return_type":"long",
				"brief_description":"Used together with GetFirstSelected() to iterate over all selected items in the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsSelected":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the item with the given index is selected, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Select":[
			{
				"return_type":"void",
				"brief_description":"Selects or unselects the given item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"n",
					"on"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"SetColumnImage":[
			{
				"return_type":"void",
				"brief_description":"Sets the column image for the specified column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"image"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxConfigBase":{
		"_implements":[
			"wxObject"
		],
		"Create":[
			{
				"return_type":"wxConfigBase*",
				"brief_description":"Create a new config object and sets it as the current one.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteAll":[
			{
				"return_type":"bool",
				"brief_description":"Delete the whole underlying object (disk file, registry key, ...).",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteEntry":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the specified entry and the group it belongs to if it was the last key in it and the second parameter is true.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"bDeleteGroupIfEmpty"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"DeleteGroup":[
			{
				"return_type":"bool",
				"brief_description":"Delete the group (with all subgroups).",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"key"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DontCreateOnDemand":[
			{
				"return_type":"void",
				"brief_description":"Calling this function will prevent Get() from automatically creating a new config object if the current one is NULL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Exists":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Flush":[
			{
				"return_type":"bool",
				"brief_description":"Permanently writes all changes (otherwise, they're only written from object's destructor).",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bCurrentOnly"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"Get":[
			{
				"return_type":"wxConfigBase*",
				"brief_description":"Get the current config object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"CreateOnDemand"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"GetAppName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the application name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEntryType":[
			{
				"return_type":"wxConfigBase::EntryType",
				"brief_description":"Returns the type of the given entry or Unknown if the entry doesn't exist.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFirstEntry":[
			{
				"return_type":"bool",
				"brief_description":"Gets the first entry.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetFirstGroup":[
			{
				"return_type":"bool",
				"brief_description":"Gets the first group.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetNextEntry":[
			{
				"return_type":"bool",
				"brief_description":"Gets the next entry.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetNextGroup":[
			{
				"return_type":"bool",
				"brief_description":"Gets the next group.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetNumberOfEntries":[
			{
				"return_type":"size_t",
				"brief_description":"Get number of entries in the current group.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bRecursive"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"GetNumberOfGroups":[
			{
				"return_type":"size_t",
				"brief_description":"Get number of entries\/subgroups in the current group, with or without its subgroups.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bRecursive"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"GetPath":[
			{
				"return_type":"const wxString&",
				"brief_description":"Retrieve the current path (always as absolute path).",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVendorName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the vendor name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasEntry":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasGroup":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsExpandingEnvVars":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if we are expanding environment variables in key values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsRecordingDefaults":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if we are writing defaults back to the config file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Read":[
			{
				"return_type":"bool",
				"brief_description":"Read a string from the key, returning true if the value was read.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"str"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Read a string from the key.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"key",
					"str",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"const wxString",
				"brief_description":"Another version of Read(), returning the string value directly.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a long value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"long*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"l"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a long value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"long*",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"key",
					"l",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a double value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"double*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"d"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a double value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"double*",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"key",
					"d",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a float value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"float*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"f"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a float value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"float*",
					"float"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"key",
					"f",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a boolean value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"b"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a boolean value, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"key",
					"d",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Reads a binary block, returning true if the value was found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxMemoryBuffer*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"buf"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ReadBool":[
			{
				"return_type":"bool",
				"brief_description":"Reads a bool value from the key and returns it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ReadDouble":[
			{
				"return_type":"double",
				"brief_description":"Reads a double value from the key and returns it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ReadLong":[
			{
				"return_type":"long",
				"brief_description":"Reads a long value from the key and returns it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"defaultVal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RenameEntry":[
			{
				"return_type":"bool",
				"brief_description":"Renames an entry in the current group.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"oldName",
					"newName"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RenameGroup":[
			{
				"return_type":"bool",
				"brief_description":"Renames a subgroup of the current group.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"oldName",
					"newName"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Set":[
			{
				"return_type":"wxConfigBase*",
				"brief_description":"Sets the config object as the current one, returns the pointer to the previous current object (both the parameter and returned value may be NULL).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pConfig"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExpandEnvVars":[
			{
				"return_type":"void",
				"brief_description":"Determine whether we wish to expand environment variables in key values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bDoIt"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Set current path: if the first character is '\/', it is the absolute path, otherwise it is a relative path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strPath"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRecordDefaults":[
			{
				"return_type":"void",
				"brief_description":"Sets whether defaults are recorded to the config file whenever an attempt to read the value which is not present in it is done.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bDoIt"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Write":[
			{
				"return_type":"bool",
				"brief_description":"Writes the wxString value to the config file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Writes the long value to the config file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Writes the double value to the config file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Writes the bool value to the config file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Writes the wxMemoryBuffer value to the config file and returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxMemoryBuffer&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"buf"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxConfigBase":[
			{
				"return_type":"",
				"brief_description":"This is the default and only constructor of the wxConfigBase class, and derived classes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"appName",
					"vendorName",
					"localFilename",
					"globalFilename",
					"style",
					"conv"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"wxEmptyString",
					"wxEmptyString",
					"wxEmptyString",
					"0",
					"wxConvAuto()"
				]
			}
		]
	},
	"wxHeaderCtrlEvent":{
		"GetColumn":[
			{
				"return_type":"int",
				"brief_description":"Return the index of the column affected by this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNewOrder":[
			{
				"return_type":"unsigned int",
				"brief_description":"Return the new order of the column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Return the current width of the column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxNotifyEvent"
		]
	},
	"wxHeaderCtrl":{
		"_implements":[
			"wxControl"
		],
		"AddColumnsItems":[
			{
				"return_type":"void",
				"brief_description":"Helper function appending the checkable items corresponding to all the columns to the given menu.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"menu",
					"idColumnsBase"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create the header control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxHD_DEFAULT_STYLE",
					"wxHeaderCtrlNameStr"
				]
			}
		],
		"GetColumn":[
			{
				"return_type":"const wxHeaderColumn&",
				"brief_description":"Method to be implemented by the derived classes to return the information for the given column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":true,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColumnAt":[
			{
				"return_type":"unsigned int",
				"brief_description":"Return the index of the column displayed at the given position.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pos"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColumnCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Return the number of columns in the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumnPos":[
			{
				"return_type":"unsigned int",
				"brief_description":"Get the position at which this column is currently displayed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColumnsOrder":[
			{
				"return_type":"wxArrayInt",
				"brief_description":"Return the array describing the columns display order.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Return whether the control has any columns.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MoveColumnInOrderArray":[
			{
				"return_type":"void",
				"brief_description":"Helper function to manipulate the array of column indices.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxArrayInt&",
					"unsigned int",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"order",
					"idx",
					"pos"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnColumnCountChanging":[
			{
				"return_type":"void",
				"brief_description":"Can be overridden in the derived class to update internal data structures when the number of the columns in the control changes.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"count"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ResetColumnsOrder":[
			{
				"return_type":"void",
				"brief_description":"Reset the columns order to the natural one.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColumnCount":[
			{
				"return_type":"void",
				"brief_description":"Set the number of columns in the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"count"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColumnsOrder":[
			{
				"return_type":"void",
				"brief_description":"Change the columns display order.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"order"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowColumnsMenu":[
			{
				"return_type":"bool",
				"brief_description":"Show the popup menu allowing the user to show or hide the columns.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pt",
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxString()"
				]
			}
		],
		"ShowCustomizeDialog":[
			{
				"return_type":"bool",
				"brief_description":"Show the column customization dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UpdateColumn":[
			{
				"return_type":"void",
				"brief_description":"Update the column with the given index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UpdateColumnVisibility":[
			{
				"return_type":"void",
				"brief_description":"Method called when the column visibility is changed by the user.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"unsigned int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"idx",
					"show"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"UpdateColumnWidthToFit":[
			{
				"return_type":"bool",
				"brief_description":"Method which may be implemented by the derived classes to allow double clicking the column separator to resize the column to fit its contents.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"unsigned int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"idx",
					"widthTitle"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"UpdateColumnsOrder":[
			{
				"return_type":"void",
				"brief_description":"Method called when the columns order is changed in the customization dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxArrayInt&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"order"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHeaderCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor not creating the underlying window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxHD_DEFAULT_STYLE",
					"wxHeaderCtrlNameStr"
				]
			}
		]
	},
	"wxHeaderColumn":{
		"GetAlignment":[
			{
				"return_type":"wxAlignment",
				"brief_description":"Returns the current column alignment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap in the header of the column, if any.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"int",
				"brief_description":"Get the column flags.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinWidth":[
			{
				"return_type":"int",
				"brief_description":"Return the minimal column width.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTitle":[
			{
				"return_type":"wxString",
				"brief_description":"Get the text shown in the column header.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the current width of the column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFlag":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the specified flag is currently set for this column.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsHidden":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the column is currently hidden.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsReorderable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the column can be dragged by user to change its order.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsResizeable":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the column can be resized by the user.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsShown":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the column is currently shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSortKey":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the column is currently used for sorting.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSortOrderAscending":[
			{
				"return_type":"bool",
				"brief_description":"Returns true, if the sort order is ascending.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSortable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the column can be clicked by user to sort the control contents by the field in this column.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxHeaderCtrlSimple":{
		"_implements":[
			"wxHeaderCtrl"
		],
		"AppendColumn":[
			{
				"return_type":"void",
				"brief_description":"Append the column to the end of the control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHeaderColumnSimple&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"col"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteColumn":[
			{
				"return_type":"void",
				"brief_description":"Delete the column at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBestFittingWidth":[
			{
				"return_type":"int",
				"brief_description":"This function can be overridden in the classes deriving from this control instead of overriding UpdateColumnWidthToFit().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HideColumn":[
			{
				"return_type":"void",
				"brief_description":"Hide the column with the given index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"idx"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertColumn":[
			{
				"return_type":"void",
				"brief_description":"Insert the column at the given position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHeaderColumnSimple&",
					"unsigned int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"idx"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RemoveSortIndicator":[
			{
				"return_type":"void",
				"brief_description":"Remove the sort indicator from the column being used as sort key.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowColumn":[
			{
				"return_type":"void",
				"brief_description":"Show or hide the column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"idx",
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"ShowSortIndicator":[
			{
				"return_type":"void",
				"brief_description":"Update the column sort indicator.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"idx",
					"sortOrder"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"wxHeaderCtrlSimple":[
			{
				"return_type":"",
				"brief_description":"Default constructor not creating the underlying window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creating the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxHD_DEFAULT_STYLE",
					"wxHeaderCtrlNameStr"
				]
			}
		]
	},
	"wxHeaderColumnSimple":{
		"GetAlignment":[
			{
				"return_type":"wxAlignment",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"int",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinWidth":[
			{
				"return_type":"int",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTitle":[
			{
				"return_type":"wxString",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSortKey":[
			{
				"return_type":"bool",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSortOrderAscending":[
			{
				"return_type":"bool",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAlignment"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"align"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinWidth":[
			{
				"return_type":"void",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"minWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSortOrder":[
			{
				"return_type":"void",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ascending"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTitle":[
			{
				"return_type":"void",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWidth":[
			{
				"return_type":"void",
				"brief_description":"Trivial implementations of the base class pure virtual functions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHeaderColumnSimple":[
			{
				"return_type":"",
				"brief_description":"Constructor for a column header.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"title",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxCOL_WIDTH_DEFAULT",
					"wxALIGN_NOT",
					"wxCOL_DEFAULT_FLAGS"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for a column header.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"int",
					"wxAlignment",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"width",
					"align",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxCOL_WIDTH_DEFAULT",
					"wxALIGN_CENTER",
					"wxCOL_DEFAULT_FLAGS"
				]
			}
		],
		"_implements":[
			"wxSettableHeaderColumn"
		]
	},
	"wxSettableHeaderColumn":{
		"_implements":[
			"wxHeaderColumn"
		],
		"UnsetAsSortKey":[
			{
				"return_type":"void",
				"brief_description":"Don't use this column for sorting.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToggleSortOrder":[
			{
				"return_type":"void",
				"brief_description":"Inverses the sort order.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToggleFlag":[
			{
				"return_type":"void",
				"brief_description":"Toggle the specified flag for the column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWidth":[
			{
				"return_type":"void",
				"brief_description":"Set the column width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTitle":[
			{
				"return_type":"void",
				"brief_description":"Set the text to display in the column header.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSortable":[
			{
				"return_type":"void",
				"brief_description":"Allow clicking the column to sort the control contents by the field in this column.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"sortable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSortOrder":[
			{
				"return_type":"void",
				"brief_description":"Sets this column as the sort key for the associated control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ascending"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetResizeable":[
			{
				"return_type":"void",
				"brief_description":"Call this to enable or disable interactive resizing of the column by the user.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"resizable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetReorderable":[
			{
				"return_type":"void",
				"brief_description":"Allow changing the column order by dragging it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"reorderable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinWidth":[
			{
				"return_type":"void",
				"brief_description":"Set the minimal column width.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"minWidth"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHidden":[
			{
				"return_type":"void",
				"brief_description":"Hide or show the column.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"hidden"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Set the column flags.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlag":[
			{
				"return_type":"void",
				"brief_description":"Set the specified flag for the column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Set the bitmap to be displayed in the column header.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Set the alignment of the column header.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxAlignment"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"align"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearFlag":[
			{
				"return_type":"void",
				"brief_description":"Clear the specified flag for the column.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ChangeFlag":[
			{
				"return_type":"void",
				"brief_description":"Set or clear the given flag.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"flag",
					"set"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxSetCursorEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetCursor":[
			{
				"return_type":"const wxCursor&",
				"brief_description":"Returns a reference to the cursor specified by this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetX":[
			{
				"return_type":"wxCoord",
				"brief_description":"Returns the X coordinate of the mouse in client coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetY":[
			{
				"return_type":"wxCoord",
				"brief_description":"Returns the Y coordinate of the mouse in client coordinates.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasCursor":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the cursor specified by this event is a valid cursor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCursor":[
			{
				"return_type":"void",
				"brief_description":"Sets the cursor associated with this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxCursor&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cursor"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSetCursorEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor, used by the library itself internally to initialize the event object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0"
				]
			}
		]
	},
	"wxIconizeEvent":{
		"_implements":[
			"wxEvent"
		],
		"Iconized":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"IsIconized":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the frame has been iconized, false if it has been restored.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxIconizeEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"iconized"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"true"
				]
			}
		],
		"_platforms":[
			"wxmsw",
			"wxgtk"
		]
	},
	"wxIdleEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetMode":[
			{
				"return_type":"wxIdleMode",
				"brief_description":"Static function returning a value specifying how wxWidgets will send idle events: to all windows, or only to those which specify that they will process the events.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MoreRequested":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the OnIdle function processing this event requested more processing time.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RequestMore":[
			{
				"return_type":"void",
				"brief_description":"Tells wxWidgets that more processing is required.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"needMore"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetMode":[
			{
				"return_type":"void",
				"brief_description":"Static function for specifying how wxWidgets will send idle events: to all windows, or only to those which specify that they will process the events.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxIdleMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxIdleEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxPen":{
		"_implements":[
			"wxGDIObject"
		],
		"wxPen":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a pen from a colour object, pen width and style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"int",
					"wxPenStyle"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"colour",
					"width",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"1",
					"wxPENSTYLE_SOLID"
				]
			}
		],
		"IsTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the pen is transparent.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the pen is initialised.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsNonTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the pen is a valid non-transparent pen.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the pen width.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"wxPenStyle",
				"brief_description":"Returns the pen style.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStipple":[
			{
				"return_type":"wxBitmap*",
				"brief_description":"Gets a pointer to the stipple bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetJoin":[
			{
				"return_type":"wxPenJoin",
				"brief_description":"Returns the pen join style, which may be one of wxJOIN_BEVEL, wxJOIN_ROUND and wxJOIN_MITER.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns a reference to the pen colour.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCap":[
			{
				"return_type":"wxPenCap",
				"brief_description":"Returns the pen cap style, which may be one of wxCAP_ROUND, wxCAP_PROJECTING and wxCAP_BUTT.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"The pen's colour is changed to the given colour.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"The pen's colour is changed to the given colour.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetJoin":[
			{
				"return_type":"void",
				"brief_description":"Sets the pen join style, which may be one of wxJOIN_BEVEL, wxJOIN_ROUND and wxJOIN_MITER.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPenJoin"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"join_style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStipple":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap for stippling.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stipple"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"void",
				"brief_description":"Set the pen style.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPenStyle"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWidth":[
			{
				"return_type":"void",
				"brief_description":"Sets the pen width.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"width"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCap":[
			{
				"return_type":"void",
				"brief_description":"Sets the pen cap style, which may be one of wxCAP_ROUND, wxCAP_PROJECTING and wxCAP_BUTT.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPenCap"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"capStyle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxEditableListBox":{
		"_implements":[
			"wxPanel"
		],
		"GetStrings":[
			{
				"return_type":"void",
				"brief_description":"Returns in the given array the current contents of the control (the array will be erased before control's contents are appended).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strings"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStrings":[
			{
				"return_type":"void",
				"brief_description":"Replaces current contents with given strings.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strings"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxEditableListBox":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, creating and showing a list box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxEL_DEFAULT_STYLE",
					"wxEditableListBoxNameStr"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the editable listbox for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxEL_DEFAULT_STYLE",
					"wxEditableListBoxNameStr"
				]
			}
		]
	},
	"wxFileCtrlEvent":{
		"_implements":[
			"wxCommandEvent"
		],
		"GetDirectory":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the current directory.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFile":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the file selected (assuming it is only one file).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFiles":[
			{
				"return_type":"wxArrayString",
				"brief_description":"Returns the files selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilterIndex":[
			{
				"return_type":"int",
				"brief_description":"Returns the current file filter index.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDirectory":[
			{
				"return_type":"void",
				"brief_description":"Sets the directory of this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"directory"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFiles":[
			{
				"return_type":"void",
				"brief_description":"Sets the files changed by this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"files"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilterIndex":[
			{
				"return_type":"void",
				"brief_description":"Sets the filter index changed by this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFileCtrlEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"wxObject*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"evtObject",
					"id"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		]
	},
	"wxFileCtrl":{
		"_implements":[
			"wxControl"
		],
		"wxFileCtrl":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowHidden":[
			{
				"return_type":"void",
				"brief_description":"Sets whether hidden files and folders are shown or not.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWildcard":[
			{
				"return_type":"void",
				"brief_description":"Sets the wildcard, which can contain multiple file types, for example: \"BMP files (*.bmp)|*.bmp|GIF files (*.gif)|*.gif\".",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"wildCard"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilterIndex":[
			{
				"return_type":"void",
				"brief_description":"Sets the current filter index, starting from zero.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filterIndex"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilename":[
			{
				"return_type":"bool",
				"brief_description":"Selects a certain file.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDirectory":[
			{
				"return_type":"bool",
				"brief_description":"Sets(changes) the current directory displayed in the control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"directory"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetWildcard":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the current wildcard.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPaths":[
			{
				"return_type":"void",
				"brief_description":"Fills the array paths with the full paths of the files chosen.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"paths"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the full path (directory and filename) of the currently selected file.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilterIndex":[
			{
				"return_type":"int",
				"brief_description":"Returns the zero-based index of the currently selected filter.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilenames":[
			{
				"return_type":"void",
				"brief_description":"Fills the array filenames with the filenames only of selected items.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filenames"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFilename":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the currently selected filename.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDirectory":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the current directory of the file control (i.e. the directory shown by it).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create function for two-step construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxPoint&",
					"const wxSize&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"defaultDirectory",
					"defaultFilename",
					"wildCard",
					"style",
					"pos",
					"size",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxEmptyString",
					"wxFileSelectorDefaultWildcardStr",
					"wxFC_DEFAULT_STYLE",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxFileCtrlNameStr"
				]
			}
		]
	},
	"wxProcess":{
		"CloseOutput":[
			{
				"return_type":"void",
				"brief_description":"Closes the output stream (the one connected to the stdin of the child process).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Detach":[
			{
				"return_type":"void",
				"brief_description":"Detaches this event handler from the parent specified in the constructor (see wxEvtHandler::Unlink() for a similar but not identical function).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Exists":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given process exists in the system.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pid"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetErrorStream":[
			{
				"return_type":"wxInputStream*",
				"brief_description":"Returns an input stream which corresponds to the standard error output (stderr) of the child process.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInputStream":[
			{
				"return_type":"wxInputStream*",
				"brief_description":"It returns an input stream corresponding to the standard output stream of the subprocess.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOutputStream":[
			{
				"return_type":"wxOutputStream*",
				"brief_description":"It returns an output stream corresponding to the input stream of the subprocess.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPid":[
			{
				"return_type":"long",
				"brief_description":"Returns the process ID of the process launched by Open() or set by wxExecute() (if you passed this wxProcess as argument).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsErrorAvailable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is data to be read on the child process standard error stream.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsInputOpened":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the child process standard output stream is opened.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Kill":[
			{
				"return_type":"wxKillError",
				"brief_description":"Send the specified signal to the given process.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"int",
					"wxSignal",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"pid",
					"sig",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxSIGTERM",
					"wxKILL_NOCHILDREN"
				]
			}
		],
		"IsInputAvailable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is data to be read on the child process standard output stream.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnTerminate":[
			{
				"return_type":"void",
				"brief_description":"It is called when the process with the pid pid finishes.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"pid",
					"status"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Redirect":[
			{
				"return_type":"void",
				"brief_description":"Turns on redirection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Open":[
			{
				"return_type":"wxProcess*",
				"brief_description":"This static method replaces the standard popen() function: it launches the process specified by the cmd parameter and returns the wxProcess object which can be used to retrieve the streams connected to the standard input, output and error output of the child process.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cmd",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEXEC_ASYNC"
				]
			}
		],
		"wxProcess":[
			{
				"return_type":"",
				"brief_description":"Constructs a process object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL",
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates an object without any associated parent (and hence no id neither) but allows to specify the flags which can have the value of wxPROCESS_DEFAULT or wxPROCESS_REDIRECT.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxEvtHandler"
		]
	},
	"wxTextValidator":{
		"_implements":[
			"wxValidator"
		],
		"Clone":[
			{
				"return_type":"wxObject*",
				"brief_description":"Clones the text validator using the copy constructor.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ContainsExcludedCharacters":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if at least one character of the given val string is present in the exclude list (set by SetExcludes() or SetCharExcludes()).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ContainsOnlyIncludedCharacters":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if all the characters of the given val string are present in the include list (set by SetIncludes() or SetCharIncludes()).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetExcludes":[
			{
				"return_type":"wxArrayString&",
				"brief_description":"Returns a reference to the exclude list (the list of invalid values).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIncludes":[
			{
				"return_type":"wxArrayString&",
				"brief_description":"Returns a reference to the include list (the list of valid values).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"long",
				"brief_description":"Returns the validator style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFlag":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given style bit is set in the current style.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTextValidatorStyle"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsValid":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the error message if the contents of val are invalid or the empty string if val is valid.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"val"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnChar":[
			{
				"return_type":"void",
				"brief_description":"Receives character input from the window and filters it according to the current validator style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxKeyEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCharExcludes":[
			{
				"return_type":"void",
				"brief_description":"Breaks the given chars strings in single characters and sets the internal wxArrayString used to store the \"excluded\" characters (see SetExcludes()).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"chars"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCharIncludes":[
			{
				"return_type":"void",
				"brief_description":"Breaks the given chars strings in single characters and sets the internal wxArrayString used to store the \"included\" characters (see SetIncludes()).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"chars"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExcludes":[
			{
				"return_type":"void",
				"brief_description":"Sets the exclude list (invalid values for the user input).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stringList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetIncludes":[
			{
				"return_type":"void",
				"brief_description":"Sets the include list (valid values for the user input).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stringList"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"void",
				"brief_description":"Sets the validator style which must be a combination of one or more of the wxTextValidatorStyle values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"TransferFromWindow":[
			{
				"return_type":"bool",
				"brief_description":"Transfers the value in the text control to the string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TransferToWindow":[
			{
				"return_type":"bool",
				"brief_description":"Transfers the string value to the text control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Validate":[
			{
				"return_type":"bool",
				"brief_description":"Validates the window contents against the include or exclude lists, depending on the validator style.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxTextValidator":[
			{
				"return_type":"",
				"brief_description":"Constructor taking a style and optional pointer to a wxString variable.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long",
					"wxString*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"valPtr"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxFILTER_NONE",
					"NULL"
				]
			}
		]
	},
	"wxHScrolledWindow":{
		"_implements":[
			"wxPanel",
			"wxVarHScrollHelper"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Same as the non-default constructor, but returns a status code: true if ok, false if the window couldn't be created.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxPanelNameStr"
				]
			}
		]
	},
	"wxInfoBar":{
		"_implements":[
			"wxControl"
		],
		"wxInfoBar":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor creating the info bar window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY"
				]
			}
		],
		"ShowMessage":[
			{
				"return_type":"void",
				"brief_description":"Show a message in the bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"msg",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxICON_NONE"
				]
			}
		],
		"SetFont":[
			{
				"return_type":"bool",
				"brief_description":"Overridden base class methods changes the font of the text message.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEffectDuration":[
			{
				"return_type":"void",
				"brief_description":"Set the duration of the animation used when showing or hiding the bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"duration"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveButton":[
			{
				"return_type":"void",
				"brief_description":"Remove a button previously added by AddButton().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"btnid"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetShowEffect":[
			{
				"return_type":"wxShowEffect",
				"brief_description":"Return the effect currently used for showing the bar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHideEffect":[
			{
				"return_type":"wxShowEffect",
				"brief_description":"Return the effect currently used for hiding the bar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEffectDuration":[
			{
				"return_type":"int",
				"brief_description":"Return the effect animation duration currently used.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create the info bar window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"winid"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY"
				]
			}
		],
		"AddButton":[
			{
				"return_type":"void",
				"brief_description":"Add a button to be shown in the info bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"btnid",
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxString()"
				]
			}
		],
		"SetShowHideEffects":[
			{
				"return_type":"void",
				"brief_description":"Set the effects to use when showing and hiding the bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxShowEffect",
					"wxShowEffect"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"showEffect",
					"hideEffect"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Dismiss":[
			{
				"return_type":"void",
				"brief_description":"Hide the info bar window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxRichToolTip":{
		"SetBackgroundColour":[
			{
				"return_type":"void",
				"brief_description":"Set the background colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"col",
					"colEnd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxColour()"
				]
			}
		],
		"SetTimeout":[
			{
				"return_type":"void",
				"brief_description":"Set timeout after which the tooltip should disappear and optionally set a delay before the tooltip is shown, in milliseconds.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned",
					"unsigned"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"millisecondsTimeout",
					"millisecondsDelay"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"SetIcon":[
			{
				"return_type":"void",
				"brief_description":"Set the small icon to show.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxICON_INFORMATION"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the small icon to show.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"icon"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTipKind":[
			{
				"return_type":"void",
				"brief_description":"Choose the tip kind, possibly none.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTipKind"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tipKind"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowFor":[
			{
				"return_type":"void",
				"brief_description":"Show the tooltip for the given window and optionally specify where to show the tooltip.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxRect*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"win",
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"wxRichToolTip":[
			{
				"return_type":"",
				"brief_description":"Constructor must specify the tooltip title and main message.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"title",
					"message"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxPosition":{
		"GetCol":[
			{
				"return_type":"int",
				"brief_description":"A synonym for GetColumn().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColumn":[
			{
				"return_type":"int",
				"brief_description":"Get the current row value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRow":[
			{
				"return_type":"int",
				"brief_description":"Get the current row value.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCol":[
			{
				"return_type":"void",
				"brief_description":"A synonym for SetColumn().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColumn":[
			{
				"return_type":"void",
				"brief_description":"Set a new column value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"column"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRow":[
			{
				"return_type":"void",
				"brief_description":"Set a new row value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"row"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPosition":[
			{
				"return_type":"",
				"brief_description":"Construct a new wxPosition, setting the row and column to the default value of (0, 0).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a new wxPosition, setting the row and column to the value of (row, col).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"row",
					"col"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxMutex":{
		"Lock":[
			{
				"return_type":"wxMutexError",
				"brief_description":"Locks the mutex object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LockTimeout":[
			{
				"return_type":"wxMutexError",
				"brief_description":"Try to lock the mutex object during the specified time interval.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"msec"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"TryLock":[
			{
				"return_type":"wxMutexError",
				"brief_description":"Tries to lock the mutex object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Unlock":[
			{
				"return_type":"wxMutexError",
				"brief_description":"Unlocks the mutex object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxMutex":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMutexType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxMUTEX_DEFAULT"
				]
			}
		]
	},
	"wxMutexLocker":{
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if mutex was acquired in the constructor, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxMutexLocker":[
			{
				"return_type":"",
				"brief_description":"Constructs a wxMutexLocker object associated with mutex and locks it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMutex&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mutex"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxXmlResource":{
		"_implements":[
			"wxObject"
		],
		"AddHandler":[
			{
				"return_type":"void",
				"brief_description":"Initializes only a specific handler (or custom handler).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlResourceHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AttachUnknownControl":[
			{
				"return_type":"bool",
				"brief_description":"Attaches an unknown control to the given panel\/window\/dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxWindow*",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"control",
					"parent"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"ClearHandlers":[
			{
				"return_type":"void",
				"brief_description":"Removes all handlers and deletes them (this means that any handlers added using AddHandler() must be allocated on the heap).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CompareVersion":[
			{
				"return_type":"int",
				"brief_description":"Compares the XRC version to the argument.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"major",
					"minor",
					"release",
					"revision"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DoReportError":[
			{
				"return_type":"void",
				"brief_description":"Implementation of XRC resources errors reporting.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"const wxXmlNode*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"xrcFile",
					"position",
					"message"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"FindXRCIDById":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a string ID corresponding to the given numeric ID.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"numId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Get":[
			{
				"return_type":"wxXmlResource*",
				"brief_description":"Gets the global resources object or creates one if none exists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDomain":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the domain (message catalog) that will be used to load translatable strings in the XRC.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"int",
				"brief_description":"Returns flags, which may be a bitlist of wxXmlResourceFlags enumeration values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetResourceNode":[
			{
				"return_type":"const wxXmlNode*",
				"brief_description":"Returns the wxXmlNode containing the definition of the object with the given name or NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetVersion":[
			{
				"return_type":"long",
				"brief_description":"Returns version information (a.b.c.d = d + 256*c + 2562*b + 2563*a).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetXRCID":[
			{
				"return_type":"int",
				"brief_description":"Returns a numeric ID that is equivalent to the string ID used in an XML resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str_id",
					"value_if_not_found"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_NONE"
				]
			}
		],
		"InitAllHandlers":[
			{
				"return_type":"void",
				"brief_description":"Initializes handlers for all supported controls\/windows.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Load":[
			{
				"return_type":"bool",
				"brief_description":"Loads resources from XML files that match given filemask.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filemask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadAllFiles":[
			{
				"return_type":"bool",
				"brief_description":"Loads all .xrc files from directory dirname.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dirname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Loads a bitmap resource from a file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadDialog":[
			{
				"return_type":"wxDialog*",
				"brief_description":"Loads a dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Loads a dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDialog*",
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dlg",
					"parent",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Simpler form of Load() for loading a single XRC file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadFrame":[
			{
				"return_type":"bool",
				"brief_description":"Loads the contents of a frame onto an existing wxFrame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFrame*",
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"frame",
					"parent",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"LoadIcon":[
			{
				"return_type":"wxIcon",
				"brief_description":"Loads an icon resource from a file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"Loads menu from resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadMenuBar":[
			{
				"return_type":"wxMenuBar*",
				"brief_description":"Loads a menubar from resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxMenuBar*",
				"brief_description":"Loads a menubar from resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadObject":[
			{
				"return_type":"wxObject*",
				"brief_description":"Load an object from the resource specifying both the resource name and the class name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"name",
					"classname"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Load an object from the resource specifying both the resource name and the class name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*",
					"wxWindow*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"instance",
					"parent",
					"name",
					"classname"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"LoadObjectRecursively":[
			{
				"return_type":"wxObject*",
				"brief_description":"Load an object from anywhere in the resource tree.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"name",
					"classname"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Load an object from anywhere in the resource tree.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*",
					"wxWindow*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"instance",
					"parent",
					"name",
					"classname"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"LoadPanel":[
			{
				"return_type":"wxPanel*",
				"brief_description":"Loads a panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Loads a panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPanel*",
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"panel",
					"parent",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"LoadToolBar":[
			{
				"return_type":"wxToolBar*",
				"brief_description":"Loads a toolbar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ReportError":[
			{
				"return_type":"void",
				"brief_description":"Reports error in XRC resources to the user.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxXmlNode*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"context",
					"message"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Set":[
			{
				"return_type":"wxXmlResource*",
				"brief_description":"Sets the global resources object and returns a pointer to the previous one (may be NULL).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxXmlResource*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"res"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDomain":[
			{
				"return_type":"void",
				"brief_description":"Sets the domain (message catalog) that will be used to load translatable strings in the XRC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"domain"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Sets flags (bitlist of wxXmlResourceFlags enumeration values).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Unload":[
			{
				"return_type":"bool",
				"brief_description":"This function unloads a resource previously loaded by Load().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxXmlResource":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"filemask",
					"flags",
					"domain"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxXRC_USE_LOCALE",
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"flags",
					"domain"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxXRC_USE_LOCALE",
					"wxEmptyString"
				]
			}
		]
	},
	"wxGenericValidator":{
		"_implements":[
			"wxValidator"
		],
		"Clone":[
			{
				"return_type":"wxObject*",
				"brief_description":"Clones the generic validator using the copy constructor.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TransferFromWindow":[
			{
				"return_type":"bool",
				"brief_description":"Transfers the value from the window to the appropriate data type.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TransferToWindow":[
			{
				"return_type":"bool",
				"brief_description":"Transfers the value to the window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxGenericValidator":[
			{
				"return_type":"",
				"brief_description":"Constructor taking a bool pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a wxString pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking an integer pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a wxArrayInt pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayInt*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a wxDateTime pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDateTime*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a wxFileName pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileName*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a float pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"float*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor taking a double pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"valPtr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxSashWindow":{
		"_implements":[
			"wxWindow"
		],
		"GetMaximumSizeX":[
			{
				"return_type":"int",
				"brief_description":"Gets the maximum window size in the x direction.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaximumSizeY":[
			{
				"return_type":"int",
				"brief_description":"Gets the maximum window size in the y direction.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinimumSizeX":[
			{
				"return_type":"int",
				"brief_description":"Gets the minimum window size in the x direction.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinimumSizeY":[
			{
				"return_type":"int",
				"brief_description":"Gets the minimum window size in the y direction.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSashVisible":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a sash is visible on the given edge, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSashEdgePosition"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"edge"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMaximumSizeX":[
			{
				"return_type":"void",
				"brief_description":"Sets the maximum window size in the x direction.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"min"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMaximumSizeY":[
			{
				"return_type":"void",
				"brief_description":"Sets the maximum window size in the y direction.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"min"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinimumSizeX":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum window size in the x direction.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"min"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinimumSizeY":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum window size in the y direction.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"min"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSashVisible":[
			{
				"return_type":"void",
				"brief_description":"Call this function to make a sash visible or invisible on a particular edge.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSashEdgePosition",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"edge",
					"visible"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxSashWindow":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a sash window, which can be a child of a frame, dialog or any other non-control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCLIP_CHILDREN|wxSW_3D",
					"\"sashWindow\""
				]
			}
		]
	},
	"wxSashEvent":{
		"_implements":[
			"wxCommandEvent"
		],
		"GetDragRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the rectangle representing the new size the window would be if the resize was applied.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDragStatus":[
			{
				"return_type":"wxSashDragStatus",
				"brief_description":"Returns the status of the sash: one of wxSASH_STATUS_OK, wxSASH_STATUS_OUT_OF_RANGE.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEdge":[
			{
				"return_type":"wxSashEdgePosition",
				"brief_description":"Returns the dragged edge.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxSashEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxSashEdgePosition"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"edge"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"wxSASH_NONE"
				]
			}
		]
	},
	"wxSashLayoutWindow":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Initializes a sash layout window, which can be a child of a frame, dialog or any other non-control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCLIP_CHILDREN|wxSW_3D",
					"\"layoutWindow\""
				]
			}
		],
		"GetAlignment":[
			{
				"return_type":"wxLayoutAlignment",
				"brief_description":"Returns the alignment of the window: one of wxLAYOUT_TOP, wxLAYOUT_LEFT, wxLAYOUT_RIGHT, wxLAYOUT_BOTTOM.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrientation":[
			{
				"return_type":"wxLayoutOrientation",
				"brief_description":"Returns the orientation of the window: one of wxLAYOUT_HORIZONTAL, wxLAYOUT_VERTICAL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnCalculateLayout":[
			{
				"return_type":"void",
				"brief_description":"The default handler for the event that is generated by wxLayoutAlgorithm.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCalculateLayoutEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnQueryLayoutInfo":[
			{
				"return_type":"void",
				"brief_description":"The default handler for the event that is generated by OnCalculateLayout to get size, alignment and orientation information for the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxQueryLayoutInfoEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Sets the alignment of the window (which edge of the available parent client area the window is attached to).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLayoutAlignment"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alignment"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the default dimensions of the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOrientation":[
			{
				"return_type":"void",
				"brief_description":"Sets the orientation of the window (the direction the window will stretch in, to fill the available parent client area).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLayoutOrientation"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSashLayoutWindow":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a sash layout window, which can be a child of a frame, dialog or any other non-control window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxCLIP_CHILDREN|wxSW_3D",
					"\"layoutWindow\""
				]
			}
		],
		"_implements":[
			"wxSashWindow"
		]
	},
	"wxSemaphore":{
		"Post":[
			{
				"return_type":"wxSemaError",
				"brief_description":"Increments the semaphore count and signals one of the waiting threads in an atomic way.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TryWait":[
			{
				"return_type":"wxSemaError",
				"brief_description":"Same as Wait(), but returns immediately.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Wait":[
			{
				"return_type":"wxSemaError",
				"brief_description":"Wait indefinitely until the semaphore count becomes strictly positive and then decrement it and return.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WaitTimeout":[
			{
				"return_type":"wxSemaError",
				"brief_description":"Same as Wait(), but with a timeout limit.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"timeout_millis"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxSemaphore":[
			{
				"return_type":"",
				"brief_description":"Specifying a maxcount of 0 actually makes wxSemaphore behave as if there is no upper limit.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"initialcount",
					"maxcount"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0"
				]
			}
		]
	},
	"wxShowEvent":{
		"GetShow":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"deprecated":true
			}
		],
		"IsShown":[
			{
				"return_type":"bool",
				"brief_description":"Return true if the window has been shown, false if it has been hidden.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetShow":[
			{
				"return_type":"void",
				"brief_description":"Set whether the windows was shown or hidden.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxShowEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"winid",
					"show"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"false"
				]
			}
		],
		"_implements":[
			"wxEvent"
		],
		"_platforms":[
			"wxmsw",
			"wxgtk",
			"wxos2"
		]
	},
	"wxAuiToolBarArt":{
		"Clone":[
			{
				"return_type":"wxAuiToolBarArt*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DrawBackground":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawButton":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawControlLabel":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawDropDownButton":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawGripper":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawLabel":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawOverflowButton":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"state"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawSeparator":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetElementSize":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"element_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFlags":[
			{
				"return_type":"unsigned int",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabelSize":[
			{
				"return_type":"wxSize",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetTextOrientation":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolSize":[
			{
				"return_type":"wxSize",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxAuiToolBarItem&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"item"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetElementSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"element_id",
					"size"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFont&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTextOrientation":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowDropDown":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxAuiToolBarItemArray&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"wnd",
					"items"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxBrush":{
		"_implements":[
			"wxGDIObject"
		],
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns a reference to the brush colour.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStipple":[
			{
				"return_type":"wxBitmap*",
				"brief_description":"Gets a pointer to the stipple bitmap.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"wxBrushStyle",
				"brief_description":"Returns the brush style, one of the wxBrushStyle values.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsHatch":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the style of the brush is any of hatched fills.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsNonTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the brush is a valid non-transparent brush.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the brush is initialised.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsTransparent":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the brush is transparent.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Sets the brush colour using red, green and blue values.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"colour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets the brush colour using red, green and blue values.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned char",
					"unsigned char",
					"unsigned char"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"red",
					"green",
					"blue"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetStipple":[
			{
				"return_type":"void",
				"brief_description":"Sets the stipple bitmap.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"void",
				"brief_description":"Sets the brush style.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBrushStyle"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxBrush":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a brush from a colour object and style.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"wxBrushStyle"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"colour",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBRUSHSTYLE_SOLID"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a stippled brush using a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stippleBitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxPlatformInfo":{
		"wxPlatformInfo":[
			{
				"return_type":"",
				"brief_description":"Initializes the instance with the values corresponding to the currently running platform.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes the object using given values.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPortId",
					"int",
					"int",
					"wxOperatingSystemId",
					"int",
					"int",
					"wxArchitecture",
					"wxEndianness"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pid",
					"tkMajor",
					"tkMinor",
					"id",
					"osMajor",
					"osMinor",
					"arch",
					"endian"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1",
					"-1",
					"wxOS_UNKNOWN",
					"-1",
					"-1",
					"wxARCH_INVALID",
					"wxENDIAN_INVALID"
				]
			}
		],
		"CheckOSVersion":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the OS version is at least major.minor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"major",
					"minor"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"CheckToolkitVersion":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the toolkit version is at least major.minor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"major",
					"minor"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Get":[
			{
				"return_type":"const wxPlatformInfo&",
				"brief_description":"Returns the global wxPlatformInfo object, initialized with the values for the currently running platform.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDesktopEnvironment":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the desktop environment associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEndianness":[
			{
				"return_type":"wxEndianness",
				"brief_description":"Returns the endianness ID of this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxEndianness",
				"brief_description":"Converts the given string to a wxEndianness enum value or to wxENDIAN_INVALID if the given string is not a valid endianness string (i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"end"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetEndiannessName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the name for the endianness of this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns name for the given wxEndianness enumeration value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxEndianness"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"end"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLinuxDistributionInfo":[
			{
				"return_type":"wxLinuxDistributionInfo",
				"brief_description":"Returns the Linux distribution info associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOSMajorVersion":[
			{
				"return_type":"int",
				"brief_description":"Returns the run-time major version of the OS associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOSMinorVersion":[
			{
				"return_type":"int",
				"brief_description":"Returns the run-time minor version of the OS associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOperatingSystemDescription":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the description of the operating system of this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOperatingSystemDirectory":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the operating system directory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOperatingSystemFamilyName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the operating system family name of the OS associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the operating system family name for the given wxOperatingSystemId enumeration value: Unix for wxOS_UNIX, Macintosh for wxOS_MAC, Windows for wxOS_WINDOWS, DOS for wxOS_DOS, OS\/2 for wxOS_OS2.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxOperatingSystemId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"os"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetOperatingSystemId":[
			{
				"return_type":"wxOperatingSystemId",
				"brief_description":"Returns the operating system ID of this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxOperatingSystemId",
				"brief_description":"Converts the given string to a wxOperatingSystemId enum value or to wxOS_UNKNOWN if the given string is not a valid operating system name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetOperatingSystemIdName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the operating system name of the OS associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the name for the given operating system ID value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxOperatingSystemId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"os"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPortId":[
			{
				"return_type":"wxPortId",
				"brief_description":"Returns the wxWidgets port ID associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxPortId",
				"brief_description":"Converts the given string to a wxWidgets port ID value or to wxPORT_UNKNOWN if the given string does not match any of the wxWidgets canonical name ports (\"wxGTK\", \"wxMSW\", etc) nor any of the short wxWidgets name ports (\"gtk\", \"msw\", etc).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"portname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPortIdName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the name of the wxWidgets port ID associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the name of the given wxWidgets port ID value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPortId",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"port",
					"usingUniversal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPortIdShortName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the short name of the wxWidgets port ID associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the short name of the given wxWidgets port ID value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxPortId",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"port",
					"usingUniversal"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetToolkitMajorVersion":[
			{
				"return_type":"int",
				"brief_description":"Returns the run-time major version of the toolkit associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolkitMinorVersion":[
			{
				"return_type":"int",
				"brief_description":"Returns the run-time minor version of the toolkit associated with this wxPlatformInfo instance.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this instance is fully initialized with valid values.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsUsingUniversalWidgets":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this wxPlatformInfo describes wxUniversal build.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDesktopEnvironment":[
			{
				"return_type":"void",
				"brief_description":"Sets the desktop environment associated with this wxPlatformInfo instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"de"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetEndianness":[
			{
				"return_type":"void",
				"brief_description":"Sets the endianness enum value associated with this wxPlatformInfo instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEndianness"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOSVersion":[
			{
				"return_type":"void",
				"brief_description":"Sets the version of the operating system associated with this wxPlatformInfo instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"major",
					"minor"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetOperatingSystemDescription":[
			{
				"return_type":"void",
				"brief_description":"Sets the operating system description associated with this wxPlatformInfo instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"desc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOperatingSystemId":[
			{
				"return_type":"void",
				"brief_description":"Sets the operating system associated with this wxPlatformInfo instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOperatingSystemId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPortId":[
			{
				"return_type":"void",
				"brief_description":"Sets the wxWidgets port ID associated with this wxPlatformInfo instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPortId"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToolkitVersion":[
			{
				"return_type":"void",
				"brief_description":"Sets the version of the toolkit associated with this wxPlatformInfo instance.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"major",
					"minor"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxPageSetupDialog":{
		"_implements":[
			"wxObject"
		],
		"GetPageSetupData":[
			{
				"return_type":"wxPageSetupDialogData&",
				"brief_description":"Returns the wxPageSetupDialogData object associated with the dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxPageSetupDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxPageSetupDialogData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning wxID_OK if the user pressed OK, and wxID_CANCEL otherwise.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxPageSetupDialogData":{
		"_implements":[
			"wxObject"
		],
		"EnableHelp":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the \"Help\" button (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableMargins":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the margin controls (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableOrientation":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the orientation control (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnablePaper":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the paper size control (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnablePrinter":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the \"Printer\" button, which invokes a printer setup dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDefaultInfo":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the dialog will simply return default printer information (such as orientation) instead of showing a dialog (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDefaultMinMargins":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the page setup dialog will take its minimum margin values from the currently selected printer properties (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEnableHelp":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the printer setup button is enabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEnableMargins":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the margin controls are enabled (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEnableOrientation":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the orientation control is enabled (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEnablePaper":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the paper size control is enabled (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEnablePrinter":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the printer setup button is enabled.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMarginBottomRight":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the right (x) and bottom (y) margins in millimetres.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMarginTopLeft":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the left (x) and top (y) margins in millimetres.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinMarginBottomRight":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the right (x) and bottom (y) minimum margins the user can enter (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinMarginTopLeft":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the left (x) and top (y) minimum margins the user can enter (Windows only).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPaperId":[
			{
				"return_type":"wxPaperSize",
				"brief_description":"Returns the paper id (stored in the internal wxPrintData object).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPaperSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the paper size in millimetres.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintData":[
			{
				"return_type":"wxPrintData&",
				"brief_description":"Returns a reference to the print data associated with this object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"const wxPrintData&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the print data associated with the dialog data is valid.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDefaultInfo":[
			{
				"return_type":"void",
				"brief_description":"Pass true if the dialog will simply return default printer information (such as orientation) instead of showing a dialog (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDefaultMinMargins":[
			{
				"return_type":"void",
				"brief_description":"Pass true if the page setup dialog will take its minimum margin values from the currently selected printer properties (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMarginBottomRight":[
			{
				"return_type":"void",
				"brief_description":"Sets the right (x) and bottom (y) margins in millimetres.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMarginTopLeft":[
			{
				"return_type":"void",
				"brief_description":"Sets the left (x) and top (y) margins in millimetres.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinMarginBottomRight":[
			{
				"return_type":"void",
				"brief_description":"Sets the right (x) and bottom (y) minimum margins the user can enter (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinMarginTopLeft":[
			{
				"return_type":"void",
				"brief_description":"Sets the left (x) and top (y) minimum margins the user can enter (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPaperId":[
			{
				"return_type":"void",
				"brief_description":"Sets the paper size id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPaperSize"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPaperSize":[
			{
				"return_type":"void",
				"brief_description":"Sets the paper size in millimetres.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintData":[
			{
				"return_type":"void",
				"brief_description":"Sets the print data associated with this object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPageSetupDialogData":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct an object from a print data object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxPrintDialog":{
		"GetPrintDC":[
			{
				"return_type":"wxDC*",
				"brief_description":"Returns the device context created by the print dialog, if any.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintDialogData":[
			{
				"return_type":"wxPrintDialogData&",
				"brief_description":"Returns the print dialog data associated with the print dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning wxID_OK if the user pressed OK, and wxID_CANCEL otherwise.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxPrintDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxPrintDialogData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxPrintData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPrintData":[
			{
				"return_type":"wxPrintData&",
				"brief_description":"Returns the print data associated with the print dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxPrintDialogData":{
		"EnableHelp":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the \"Help\" button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnablePageNumbers":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the \"Page numbers\" controls.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnablePrintToFile":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the \"Print to file\" checkbox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableSelection":[
			{
				"return_type":"void",
				"brief_description":"Enables or disables the \"Selection\" radio button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetAllPages":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the user requested that all pages be printed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCollate":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the user requested that the document(s) be collated.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFromPage":[
			{
				"return_type":"int",
				"brief_description":"Returns the from page number, as entered by the user.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaxPage":[
			{
				"return_type":"int",
				"brief_description":"Returns the maximum page number.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinPage":[
			{
				"return_type":"int",
				"brief_description":"Returns the minimum page number.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNoCopies":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of copies requested by the user.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintData":[
			{
				"return_type":"wxPrintData&",
				"brief_description":"Returns a reference to the internal wxPrintData object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintToFile":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the user has selected printing to a file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the user requested that the selection be printed (where \"selection\" is a concept specific to the application).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToPage":[
			{
				"return_type":"int",
				"brief_description":"Returns the \"print to\" page number, as entered by the user.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the print data is valid for using in print dialogs.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCollate":[
			{
				"return_type":"void",
				"brief_description":"Sets the \"Collate\" checkbox to true or false.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFromPage":[
			{
				"return_type":"void",
				"brief_description":"Sets the from page number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMaxPage":[
			{
				"return_type":"void",
				"brief_description":"Sets the maximum page number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMinPage":[
			{
				"return_type":"void",
				"brief_description":"Sets the minimum page number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNoCopies":[
			{
				"return_type":"void",
				"brief_description":"Sets the default number of copies the user has requested to be printed out.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintData":[
			{
				"return_type":"void",
				"brief_description":"Sets the internal wxPrintData.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintToFile":[
			{
				"return_type":"void",
				"brief_description":"Sets the \"Print to file\" checkbox to true or false.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Selects the \"Selection\" radio button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToPage":[
			{
				"return_type":"void",
				"brief_description":"Sets the \"print to\" page number.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator=":[
			{
				"return_type":"void",
				"brief_description":"Assigns print data to this object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Assigns another print dialog data object to this object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintDialogData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPrintDialogData":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct an object from a print dialog data object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxPrintData":{
		"_implements":[
			"wxObject"
		],
		"GetBin":[
			{
				"return_type":"wxPrintBin",
				"brief_description":"Returns the current bin (papersource).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCollate":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if collation is on.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetColour":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if colour printing is on.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDuplex":[
			{
				"return_type":"wxDuplexMode",
				"brief_description":"Returns the duplex mode.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFilename":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNoCopies":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of copies requested by the user.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrientation":[
			{
				"return_type":"wxPrintOrientation",
				"brief_description":"Gets the orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPaperId":[
			{
				"return_type":"wxPaperSize",
				"brief_description":"Returns the paper size id.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintMode":[
			{
				"return_type":"wxPrintMode",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrinterName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the printer name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetQuality":[
			{
				"return_type":"wxPrintQuality",
				"brief_description":"Returns the current print quality.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the print data is valid for using in print dialogs.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetBin":[
			{
				"return_type":"void",
				"brief_description":"Sets the current bin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintBin"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCollate":[
			{
				"return_type":"void",
				"brief_description":"Sets collation to on or off.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Sets colour printing on or off.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDuplex":[
			{
				"return_type":"void",
				"brief_description":"Returns the duplex mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDuplexMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFilename":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNoCopies":[
			{
				"return_type":"void",
				"brief_description":"Sets the default number of copies to be printed out.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOrientation":[
			{
				"return_type":"void",
				"brief_description":"Sets the orientation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintOrientation"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPaperId":[
			{
				"return_type":"void",
				"brief_description":"Sets the paper id.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPaperSize"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"paperId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintMode":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintMode"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printMode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrinterName":[
			{
				"return_type":"void",
				"brief_description":"Sets the printer name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printerName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetQuality":[
			{
				"return_type":"void",
				"brief_description":"Sets the desired print quality.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintQuality"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"quality"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPrintData":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxPostScriptDC":{
		"wxPostScriptDC":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a PostScript printer device context from a wxPrintData object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxDC"
		]
	},
	"wxPrintPreview":{
		"GetCanvas":[
			{
				"return_type":"wxPreviewCanvas*",
				"brief_description":"Gets the preview window used for displaying the print preview image.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentPage":[
			{
				"return_type":"int",
				"brief_description":"Gets the page currently being previewed.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFrame":[
			{
				"return_type":"wxFrame*",
				"brief_description":"Gets the frame used for displaying the print preview canvas and control bar.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMaxPage":[
			{
				"return_type":"int",
				"brief_description":"Returns the maximum page number.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinPage":[
			{
				"return_type":"int",
				"brief_description":"Returns the minimum page number.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintout":[
			{
				"return_type":"wxPrintout*",
				"brief_description":"Gets the preview printout object associated with the wxPrintPreview object.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintoutForPrinting":[
			{
				"return_type":"wxPrintout*",
				"brief_description":"Gets the printout object to be used for printing from within the preview interface, or NULL if none exists.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the wxPrintPreview is valid, false otherwise.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PaintPage":[
			{
				"return_type":"bool",
				"brief_description":"This refreshes the preview window with the preview image.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPreviewCanvas*",
					"wxDC&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"canvas",
					"dc"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Print":[
			{
				"return_type":"bool",
				"brief_description":"Invokes the print process using the second wxPrintout object supplied in the wxPrintPreview constructor.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prompt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RenderPage":[
			{
				"return_type":"bool",
				"brief_description":"Renders a page into a wxMemoryDC.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageNum"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCanvas":[
			{
				"return_type":"void",
				"brief_description":"Sets the window to be used for displaying the print preview image.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPreviewCanvas*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetCurrentPage":[
			{
				"return_type":"bool",
				"brief_description":"Sets the current page to be previewed.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageNum"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFrame":[
			{
				"return_type":"void",
				"brief_description":"Sets the frame to be used for displaying the print preview canvas and control bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFrame*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"frame"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintout":[
			{
				"return_type":"void",
				"brief_description":"Associates a printout object with the wxPrintPreview object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintout*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printout"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetZoom":[
			{
				"return_type":"void",
				"brief_description":"Sets the percentage preview zoom, and refreshes the preview canvas accordingly.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"percent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPrintPreview":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintout*",
					"wxPrintout*",
					"wxPrintDialogData*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"printout",
					"printoutForPrinting",
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL",
					"NULL"
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxPrinter":{
		"CreateAbortWindow":[
			{
				"return_type":"wxPrintAbortDialog*",
				"brief_description":"Creates the default printing abort window, with a cancel button.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxPrintout*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"printout"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetAbort":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the user has aborted the print job.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLastError":[
			{
				"return_type":"wxPrinterError",
				"brief_description":"Return last error.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintDialogData":[
			{
				"return_type":"wxPrintDialogData&",
				"brief_description":"Returns the print data associated with the printer object.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Print":[
			{
				"return_type":"bool",
				"brief_description":"Starts the printing process.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxPrintout*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"printout",
					"prompt"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true"
				]
			}
		],
		"PrintDialog":[
			{
				"return_type":"wxDC*",
				"brief_description":"Invokes the print dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ReportError":[
			{
				"return_type":"void",
				"brief_description":"Default error-reporting function.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxPrintout*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"printout",
					"message"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Setup":[
			{
				"return_type":"bool",
				"brief_description":"Invokes the print setup dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPrinter":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintDialogData*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxPrinterDC":{
		"GetPaperRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Return the rectangle in device coordinates that corresponds to the full paper area, including the nonprinting regions of the paper.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxPrinterDC":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPrintData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"printData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxDC"
		]
	},
	"wxPrintout":{
		"FitThisSizeToPage":[
			{
				"return_type":"void",
				"brief_description":"Set the user scale and device origin of the wxDC associated with this wxPrintout so that the given image size fits entirely within the page rectangle and the origin is at the top left corner of the page rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FitThisSizeToPageMargins":[
			{
				"return_type":"void",
				"brief_description":"Set the user scale and device origin of the wxDC associated with this wxPrintout so that the given image size fits entirely within the page margins set in the given wxPageSetupDialogData object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&",
					"const wxPageSetupDialogData&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"imageSize",
					"pageSetupData"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"FitThisSizeToPaper":[
			{
				"return_type":"void",
				"brief_description":"Set the user scale and device origin of the wxDC associated with this wxPrintout so that the given image size fits entirely within the paper and the origin is at the top left corner of the paper.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"imageSize"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDC":[
			{
				"return_type":"wxDC*",
				"brief_description":"Returns the device context associated with the printout (given to the printout at start of printing or previewing).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLogicalPageMarginsRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Return the rectangle corresponding to the page margins specified by the given wxPageSetupDialogData object in the associated wxDC's logical coordinates for the current user scale and device origin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPageSetupDialogData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageSetupData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLogicalPageRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Return the rectangle corresponding to the page in the associated wxDC 's logical coordinates for the current user scale and device origin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLogicalPaperRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Return the rectangle corresponding to the paper in the associated wxDC 's logical coordinates for the current user scale and device origin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPPIPrinter":[
			{
				"return_type":"void",
				"brief_description":"Returns the number of pixels per logical inch of the printer device context.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"w",
					"h"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPPIScreen":[
			{
				"return_type":"void",
				"brief_description":"Returns the number of pixels per logical inch of the screen device context.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"w",
					"h"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPageInfo":[
			{
				"return_type":"void",
				"brief_description":"Called by the framework to obtain information from the application about minimum and maximum page values that the user can select, and the required page range to be printed.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*",
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"minPage",
					"maxPage",
					"pageFrom",
					"pageTo"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetPageSizeMM":[
			{
				"return_type":"void",
				"brief_description":"Returns the size of the printer page in millimetres.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"w",
					"h"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPageSizePixels":[
			{
				"return_type":"void",
				"brief_description":"Returns the size of the printer page in pixels, called the page rectangle.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"w",
					"h"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetPaperRectPixels":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the rectangle that corresponds to the entire paper in pixels, called the paper rectangle.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPreview":[
			{
				"return_type":"wxPrintPreview*",
				"brief_description":"Returns the associated preview object if any.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTitle":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the title of the printout.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasPage":[
			{
				"return_type":"bool",
				"brief_description":"Should be overridden to return true if the document has this page, or false if not.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageNum"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsPreview":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the printout is currently being used for previewing.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MapScreenSizeToDevice":[
			{
				"return_type":"void",
				"brief_description":"Set the user scale and device origin of the wxDC associated with this wxPrintout so that one screen pixel maps to one device pixel on the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MapScreenSizeToPage":[
			{
				"return_type":"void",
				"brief_description":"This sets the user scale of the wxDC associated with this wxPrintout to the same scale as MapScreenSizeToPaper() but sets the logical origin to the top left corner of the page rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MapScreenSizeToPageMargins":[
			{
				"return_type":"void",
				"brief_description":"This sets the user scale of the wxDC associated with this wxPrintout to the same scale as MapScreenSizeToPageMargins() but sets the logical origin to the top left corner of the page margins specified by the given wxPageSetupDialogData object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPageSetupDialogData&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageSetupData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"MapScreenSizeToPaper":[
			{
				"return_type":"void",
				"brief_description":"Set the user scale and device origin of the wxDC associated with this wxPrintout so that the printed page matches the screen size as closely as possible and the logical origin is in the top left corner of the paper rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OffsetLogicalOrigin":[
			{
				"return_type":"void",
				"brief_description":"Shift the device origin by an amount specified in logical coordinates.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xoff",
					"yoff"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnBeginDocument":[
			{
				"return_type":"bool",
				"brief_description":"Called by the framework at the start of document printing.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"startPage",
					"endPage"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnBeginPrinting":[
			{
				"return_type":"void",
				"brief_description":"Called by the framework at the start of printing.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnEndDocument":[
			{
				"return_type":"void",
				"brief_description":"Called by the framework at the end of document printing.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnEndPrinting":[
			{
				"return_type":"void",
				"brief_description":"Called by the framework at the end of printing.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnPreparePrinting":[
			{
				"return_type":"void",
				"brief_description":"Called once by the framework before any other demands are made of the wxPrintout object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnPrintPage":[
			{
				"return_type":"bool",
				"brief_description":"Called by the framework when a page should be printed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pageNum"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLogicalOrigin":[
			{
				"return_type":"void",
				"brief_description":"Set the device origin of the associated wxDC so that the current logical point becomes the new logical origin.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxPrintout":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"Printout\""
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxPreviewFrame":{
		"_implements":[
			"wxFrame"
		],
		"CreateCanvas":[
			{
				"return_type":"void",
				"brief_description":"Creates a wxPreviewCanvas.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateControlBar":[
			{
				"return_type":"void",
				"brief_description":"Creates a wxPreviewControlBar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Initialize":[
			{
				"return_type":"void",
				"brief_description":"Initializes the frame elements and prepares for showing it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"InitializeWithModality":[
			{
				"return_type":"void",
				"brief_description":"Initializes the frame elements and prepares for showing it with the given modality kind.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPreviewFrameModalityKind"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"kind"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnCloseWindow":[
			{
				"return_type":"void",
				"brief_description":"Enables any disabled frames in the application, and deletes the print preview object, implicitly deleting any printout objects associated with the print preview object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCloseEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPreviewFrame":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintPreviewBase*",
					"wxWindow*",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"preview",
					"parent",
					"title",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"\"Print Preview\"",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxDEFAULT_FRAME_STYLE",
					"wxFrameNameStr"
				]
			}
		]
	},
	"wxPreviewControlBar":{
		"_implements":[
			"wxPanel"
		],
		"CreateButtons":[
			{
				"return_type":"void",
				"brief_description":"Creates buttons, according to value of the button style flags.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPrintPreview":[
			{
				"return_type":"wxPrintPreviewBase*",
				"brief_description":"Gets the print preview object associated with the control bar.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetZoomControl":[
			{
				"return_type":"int",
				"brief_description":"Gets the current zoom setting in percent.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetZoomControl":[
			{
				"return_type":"void",
				"brief_description":"Sets the zoom control.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"percent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPreviewControlBar":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintPreview*",
					"long",
					"wxWindow*",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"preview",
					"buttons",
					"parent",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"\"panel\""
				]
			}
		]
	},
	"wxPreviewCanvas":{
		"_implements":[
			"wxScrolledWindow"
		],
		"wxPreviewCanvas":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxPrintPreview*",
					"wxWindow*",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"preview",
					"parent",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"\"canvas\""
				]
			}
		]
	},
	"wxSingleChoiceDialog":{
		"_implements":[
			"wxDialog"
		],
		"GetSelection":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of selected item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStringSelection":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the selected string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Sets the index of the initially selected item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"selection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowModal":[
			{
				"return_type":"int",
				"brief_description":"Shows the dialog, returning either wxID_OK or wxID_CANCEL.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxSingleChoiceDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor, taking an array of wxString choices and optional client data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"int",
					"const wxString*",
					"void**",
					"long",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"caption",
					"n",
					"choices",
					"clientData",
					"style",
					"pos"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"NULL",
					"wxCHOICEDLG_STYLE",
					"wxDefaultPosition"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor, taking an array of wxString choices and optional client data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"const wxArrayString&",
					"void**",
					"long",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"message",
					"caption",
					"choices",
					"clientData",
					"style",
					"pos"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"NULL",
					"wxCHOICEDLG_STYLE",
					"wxDefaultPosition"
				]
			}
		],
		"GetSelectionData":[
			{
				"return_type":"void*",
				"brief_description":"Returns the client data associated with the selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxHtmlDCRenderer":{
		"_implements":[
			"wxObject"
		],
		"GetTotalHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the height of the HTML text in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTotalWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the width of the HTML text in pixels.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxHtmlDCRenderer":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetStandardFonts":[
			{
				"return_type":"void",
				"brief_description":"Sets font sizes to be relative to the given size or the system default size; use either specified or default font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"size",
					"normal_face",
					"fixed_face"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"-1",
					"wxEmptyString",
					"wxEmptyString"
				]
			}
		],
		"SetSize":[
			{
				"return_type":"void",
				"brief_description":"Set size of output rectangle, in pixels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetHtmlText":[
			{
				"return_type":"void",
				"brief_description":"Assign text to the renderer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"html",
					"basepath",
					"isdir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString",
					"true"
				]
			}
		],
		"SetFonts":[
			{
				"return_type":"void",
				"brief_description":"This function sets font sizes and faces.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"normal_face",
					"fixed_face",
					"sizes"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"SetDC":[
			{
				"return_type":"void",
				"brief_description":"Assign DC instance to the renderer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dc",
					"pixel_scale"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"1.0"
				]
			}
		],
		"Render":[
			{
				"return_type":"int",
				"brief_description":"Renders HTML text to the DC.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"wxArrayInt&",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"known_pagebreaks",
					"from",
					"dont_render",
					"to"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0",
					"false",
					"INT_MAX"
				]
			}
		]
	},
	"wxHtmlFilter":{
		"_implements":[
			"wxObject"
		],
		"CanRead":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this filter is capable of reading file file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFSFile&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ReadFile":[
			{
				"return_type":"wxString",
				"brief_description":"Reads the file and returns string with HTML document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFSFile&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlFilter":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxHtmlHelpController":{
		"AddBook":[
			{
				"return_type":"bool",
				"brief_description":"Adds a book (i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bookFile",
					"showWaitMsg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Adds a book (i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bookUrl",
					"showWaitMsg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"CreateHelpDialog":[
			{
				"return_type":"wxHtmlHelpDialog*",
				"brief_description":"This protected virtual method may be overridden so that when specifying the wxHF_DIALOG style, the controller uses a different dialog.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxHtmlHelpData*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CreateHelpFrame":[
			{
				"return_type":"wxHtmlHelpFrame*",
				"brief_description":"This protected virtual method may be overridden so that the controller uses a different frame.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxHtmlHelpData*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Display":[
			{
				"return_type":"bool",
				"brief_description":"Displays page x.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. This alternative form is used to search help contents by numeric IDs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DisplayContents":[
			{
				"return_type":"bool",
				"brief_description":"Displays help window and focuses contents panel.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisplayIndex":[
			{
				"return_type":"bool",
				"brief_description":"Displays help window and focuses index panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"KeywordSearch":[
			{
				"return_type":"bool",
				"brief_description":"Displays the help window, focuses search panel and starts searching.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxHelpSearchMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"keyword",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxHELP_SEARCH_ALL"
				]
			}
		],
		"ReadCustomization":[
			{
				"return_type":"void",
				"brief_description":"Reads the controller's setting (position of window, etc.)",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cfg",
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"SetShouldPreventAppExit":[
			{
				"return_type":"void",
				"brief_description":"Sets whether the help frame should prevent application from exiting if it's the only remaining top level window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTempDir":[
			{
				"return_type":"void",
				"brief_description":"Sets the path for storing temporary files - cached binary versions of index and contents files.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTitleFormat":[
			{
				"return_type":"void",
				"brief_description":"Sets format of title of the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UseConfig":[
			{
				"return_type":"void",
				"brief_description":"Associates the config object with the controller.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"config",
					"rootpath"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"WriteCustomization":[
			{
				"return_type":"void",
				"brief_description":"Stores controllers setting (position of window etc.)",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cfg",
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"wxHtmlHelpController":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"style",
					"parentWindow"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxHF_DEFAULT_STYLE",
					"NULL"
				]
			}
		]
	},
	"wxHtmlHelpData":{
		"_implements":[
			"wxObject"
		],
		"AddBook":[
			{
				"return_type":"bool",
				"brief_description":"Adds new book.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"book_url"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindPageById":[
			{
				"return_type":"wxString",
				"brief_description":"Returns page's URL based on integer ID stored in project.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindPageByName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns page's URL based on its (file)name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBookRecArray":[
			{
				"return_type":"const wxHtmlBookRecArray&",
				"brief_description":"Returns array with help books info.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetContentsArray":[
			{
				"return_type":"const wxHtmlHelpDataItems&",
				"brief_description":"Returns reference to array with contents entries.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIndexArray":[
			{
				"return_type":"const wxHtmlHelpDataItems&",
				"brief_description":"Returns reference to array with index entries.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetTempDir":[
			{
				"return_type":"void",
				"brief_description":"Sets the temporary directory where binary cached versions of MS HTML Workshop files will be stored.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlHelpData":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxHtmlHelpDialog":{
		"_implements":[
			"wxFrame"
		],
		"AddToolbarButtons":[
			{
				"return_type":"void",
				"brief_description":"You may override this virtual method to add more buttons to the help window's toolbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolBar*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolBar",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxHF_DEFAULT_STYLE"
				]
			}
		],
		"GetController":[
			{
				"return_type":"wxHtmlHelpController*",
				"brief_description":"Returns the help controller associated with the dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetController":[
			{
				"return_type":"void",
				"brief_description":"Sets the help controller associated with the dialog.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlHelpController*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"controller"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTitleFormat":[
			{
				"return_type":"void",
				"brief_description":"Sets the dialog's title format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlHelpDialog":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlHelpData*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"int",
					"wxHtmlHelpData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"style",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxHF_DEFAULT_STYLE",
					"NULL"
				]
			}
		]
	},
	"wxHtmlHelpFrame":{
		"_implements":[
			"wxFrame"
		],
		"AddToolbarButtons":[
			{
				"return_type":"void",
				"brief_description":"You may override this virtual method to add more buttons to the help window's toolbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolBar*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolBar",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"int",
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"style",
					"config",
					"rootpath"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxHF_DEFAULT_STYLE",
					"NULL",
					"wxEmptyString"
				]
			}
		],
		"GetController":[
			{
				"return_type":"wxHtmlHelpController*",
				"brief_description":"Returns the help controller associated with the frame.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetController":[
			{
				"return_type":"void",
				"brief_description":"Sets the help controller associated with the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlHelpController*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"controller"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTitleFormat":[
			{
				"return_type":"void",
				"brief_description":"Sets the frame's title format.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlHelpFrame":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlHelpData*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"int",
					"wxHtmlHelpData*",
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"title",
					"style",
					"data",
					"config",
					"rootpath"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxHF_DEFAULT_STYLE",
					"NULL",
					"NULL",
					"wxEmptyString"
				]
			}
		]
	},
	"wxHtmlHelpWindow":{
		"_implements":[
			"wxWindow"
		],
		"AddToolbarButtons":[
			{
				"return_type":"void",
				"brief_description":"You may override this virtual method to add more buttons to the help window's toolbar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxToolBar*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"toolBar",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates the help window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"helpStyle"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTAB_TRAVERSAL|wxBORDER_NONE",
					"wxHF_DEFAULT_STYLE"
				]
			}
		],
		"CreateContents":[
			{
				"return_type":"void",
				"brief_description":"Creates contents panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateIndex":[
			{
				"return_type":"void",
				"brief_description":"Creates index panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateSearch":[
			{
				"return_type":"void",
				"brief_description":"Creates search panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Display":[
			{
				"return_type":"bool",
				"brief_description":"Displays page x.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. This form takes numeric ID as the parameter (uses an extension to MS format, param name=\"ID\" value=id).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DisplayIndex":[
			{
				"return_type":"bool",
				"brief_description":"Displays index panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetData":[
			{
				"return_type":"wxHtmlHelpData*",
				"brief_description":"Returns the wxHtmlHelpData object, which is usually a pointer to the controller's data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisplayContents":[
			{
				"return_type":"bool",
				"brief_description":"Displays contents panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"KeywordSearch":[
			{
				"return_type":"bool",
				"brief_description":"Search for given keyword.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxHelpSearchMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"keyword",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxHELP_SEARCH_ALL"
				]
			}
		],
		"ReadCustomization":[
			{
				"return_type":"void",
				"brief_description":"Reads the user's settings for this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cfg",
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"RefreshLists":[
			{
				"return_type":"void",
				"brief_description":"Refresh all panels.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"UseConfig":[
			{
				"return_type":"void",
				"brief_description":"Associates a wxConfig object with the help window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"config",
					"rootpath"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"WriteCustomization":[
			{
				"return_type":"void",
				"brief_description":"Saves the user's settings for this window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"cfg",
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"wxHtmlHelpWindow":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlHelpData*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"data"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int",
					"const wxPoint&",
					"const wxSize&",
					"int",
					"int",
					"wxHtmlHelpData*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"wxWindowID",
					"pos",
					"size",
					"style",
					"helpStyle",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxTAB_TRAVERSAL|wxBORDER_NONE",
					"wxHF_DEFAULT_STYLE",
					"NULL"
				]
			}
		]
	},
	"wxHtmlModalHelp":{
		"wxHtmlModalHelp":[
			{
				"return_type":"",
				"brief_description":"The ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"helpFile",
					"topic",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxHF_DEFAULT_STYLE|wxHF_DIALOG|wxHF_MODAL"
				]
			}
		]
	},
	"wxHtmlPrintout":{
		"_implements":[
			"wxPrintout"
		],
		"wxHtmlPrintout":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"Printout\""
				]
			}
		],
		"SetMargins":[
			{
				"return_type":"void",
				"brief_description":"Sets margins in millimeters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"float",
					"float",
					"float",
					"float",
					"float"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"top",
					"bottom",
					"left",
					"right",
					"spaces"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"25.2",
					"25.2",
					"25.2",
					"25.2",
					"5"
				]
			}
		],
		"SetHtmlText":[
			{
				"return_type":"void",
				"brief_description":"Prepare the class for printing this HTML text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"html",
					"basepath",
					"isdir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString",
					"true"
				]
			}
		],
		"SetHtmlFile":[
			{
				"return_type":"void",
				"brief_description":"Prepare the class for printing this HTML file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"htmlfile"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetHeader":[
			{
				"return_type":"void",
				"brief_description":"Set page header.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"header",
					"pg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPAGE_ALL"
				]
			}
		],
		"SetFooter":[
			{
				"return_type":"void",
				"brief_description":"Set page footer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"footer",
					"pg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxPAGE_ALL"
				]
			}
		],
		"SetFonts":[
			{
				"return_type":"void",
				"brief_description":"This function sets font sizes and faces.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"normal_face",
					"fixed_face",
					"sizes"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"AddFilter":[
			{
				"return_type":"void",
				"brief_description":"Adds a filter to the static list of filters for wxHtmlPrintout.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxHtmlFilter*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxHtmlRenderingInfo":{
		"GetSelection":[
			{
				"return_type":"wxHtmlSelection*",
				"brief_description":"Accessors.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetState":[
			{
				"return_type":"wxHtmlRenderingState&",
				"brief_description":"Accessors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"wxHtmlRenderingStyle&",
				"brief_description":"Accessors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Accessors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlSelection*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetStyle":[
			{
				"return_type":"void",
				"brief_description":"Accessors.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlRenderingStyle*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlRenderingInfo":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxHtmlRenderingStyle":{
		"GetSelectedTextBgColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour to use for the selected text's background.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelectedTextColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns the colour to use for the selected text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxHtmlTagHandler":{
		"_implements":[
			"wxObject"
		],
		"GetSupportedTags":[
			{
				"return_type":"wxString",
				"brief_description":"Returns list of supported tags.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HandleTag":[
			{
				"return_type":"bool",
				"brief_description":"This is the core method of each handler.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHtmlTag&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ParseInner":[
			{
				"return_type":"void",
				"brief_description":"This method calls parser's wxHtmlParser::DoParsing method for the string between this tag and the paired ending tag:",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxHtmlTag&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tag"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParser":[
			{
				"return_type":"void",
				"brief_description":"Assigns parser to this handler.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlParser*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parser"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlTagHandler":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxHtmlTagsModule":{
		"FillHandlersTable":[
			{
				"return_type":"void",
				"brief_description":"You must override this method.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlWinParser*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parser"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxModule"
		]
	},
	"wxModule":{
		"_implements":[
			"wxObject"
		],
		"AddDependency":[
			{
				"return_type":"void",
				"brief_description":"Call this function from the constructor of the derived class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxClassInfo*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dep"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Call this function from the constructor of the derived class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const char*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"classname"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnExit":[
			{
				"return_type":"void",
				"brief_description":"Provide this function with appropriate cleanup for your module.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnInit":[
			{
				"return_type":"bool",
				"brief_description":"Provide this function with appropriate initialization for your module.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxModule":[
			{
				"return_type":"",
				"brief_description":"Constructs a wxModule object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxHtmlWidgetCell":{
		"wxHtmlWidgetCell":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"wnd",
					"w"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"_implements":[
			"wxHtmlCell"
		]
	},
	"wxHtmlWinParser":{
		"_implements":[
			"wxHtmlParser"
		],
		"AddModule":[
			{
				"return_type":"void",
				"brief_description":"Adds module() to the list of wxHtmlWinParser tag handler.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxHtmlTagsModule*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"module"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CloseContainer":[
			{
				"return_type":"wxHtmlContainerCell*",
				"brief_description":"Closes the container, sets actual container to the parent one and returns pointer to it (see Cells and Containers).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CreateCurrentFont":[
			{
				"return_type":"wxFont*",
				"brief_description":"Creates font based on current setting (see SetFontSize(), SetFontBold(), SetFontItalic(), SetFontFixed(), wxHtmlWinParser::SetFontUnderlined) and returns pointer to it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetActualColor":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns actual text colour.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAlign":[
			{
				"return_type":"int",
				"brief_description":"Returns default horizontal alignment.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns (average) char height in standard font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCharWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns average char width in standard font.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetContainer":[
			{
				"return_type":"wxHtmlContainerCell*",
				"brief_description":"Returns pointer to the currently opened container (see Cells and Containers).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDC":[
			{
				"return_type":"wxDC*",
				"brief_description":"Returns pointer to the DC used during parsing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetEncodingConverter":[
			{
				"return_type":"wxEncodingConverter*",
				"brief_description":"Returns wxEncodingConverter class used to do conversion between the input encoding and the output encoding.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontBold":[
			{
				"return_type":"int",
				"brief_description":"Returns true if actual font is bold, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontFace":[
			{
				"return_type":"wxString",
				"brief_description":"Returns actual font face name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontFixed":[
			{
				"return_type":"int",
				"brief_description":"Returns true if actual font is fixed face, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontItalic":[
			{
				"return_type":"int",
				"brief_description":"Returns true if actual font is italic, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontSize":[
			{
				"return_type":"int",
				"brief_description":"Returns actual font size (HTML size varies from -2 to +4)",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFontUnderlined":[
			{
				"return_type":"int",
				"brief_description":"Returns true if actual font is underlined, false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLink":[
			{
				"return_type":"const wxHtmlLinkInfo&",
				"brief_description":"Returns actual hypertext link.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLinkColor":[
			{
				"return_type":"const wxColour&",
				"brief_description":"Returns the colour of hypertext link text.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetActualColor":[
			{
				"return_type":"void",
				"brief_description":"Sets actual text colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAlign":[
			{
				"return_type":"void",
				"brief_description":"Sets default horizontal alignment (see wxHtmlContainerCell::SetAlignHor).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"a"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetContainer":[
			{
				"return_type":"wxHtmlContainerCell*",
				"brief_description":"Allows you to directly set opened container.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlContainerCell*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"c"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDC":[
			{
				"return_type":"void",
				"brief_description":"Sets the DC.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dc",
					"pixel_scale"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"1.0e+0"
				]
			}
		],
		"OpenContainer":[
			{
				"return_type":"wxHtmlContainerCell*",
				"brief_description":"Opens new container and returns pointer to it (see Cells and Containers).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFontBold":[
			{
				"return_type":"void",
				"brief_description":"Sets bold flag of actualfont.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontFace":[
			{
				"return_type":"void",
				"brief_description":"Sets current font face to face.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"face"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontFixed":[
			{
				"return_type":"void",
				"brief_description":"Sets fixed face flag of actualfont.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontItalic":[
			{
				"return_type":"void",
				"brief_description":"Sets italic flag of actualfont.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontSize":[
			{
				"return_type":"void",
				"brief_description":"Sets actual font size (HTML size varies from 1 to 7).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"s"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFontUnderlined":[
			{
				"return_type":"void",
				"brief_description":"Sets underlined flag of actualfont.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"x"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFonts":[
			{
				"return_type":"void",
				"brief_description":"Sets fonts.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const int*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"normal_face",
					"fixed_face",
					"sizes"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"0"
				]
			}
		],
		"SetLink":[
			{
				"return_type":"void",
				"brief_description":"Sets actual hypertext link.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxHtmlLinkInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"link"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLinkColor":[
			{
				"return_type":"void",
				"brief_description":"Sets colour of hypertext link.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxHtmlWinParser":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxHtmlWindowInterface*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"wndIface"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		]
	},
	"wxHtmlWinTagHandler":{
		"_implements":[
			"wxHtmlTagHandler"
		]
	},
	"wxAutoBufferedPaintDC":{
		"wxAutoBufferedPaintDC":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxBufferedPaintDC"
		]
	},
	"wxBufferedDC":{
		"_implements":[
			"wxMemoryDC"
		],
		"Init":[
			{
				"return_type":"void",
				"brief_description":"Initializes the object created using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*",
					"const wxSize&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"area",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxBUFFER_CLIENT_AREA"
				]
			},
			{
				"return_type":"void",
				"brief_description":"Initializes the object created using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*",
					"wxBitmap&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"buffer",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullBitmap",
					"wxBUFFER_CLIENT_AREA"
				]
			}
		],
		"wxBufferedDC":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a buffer for the provided dc.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*",
					"const wxSize&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"area",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxBUFFER_CLIENT_AREA"
				]
			},
			{
				"return_type":"",
				"brief_description":"Creates a buffer for the provided dc.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*",
					"wxBitmap&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"buffer",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullBitmap",
					"wxBUFFER_CLIENT_AREA"
				]
			}
		]
	},
	"wxBufferedPaintDC":{
		"_implements":[
			"wxBufferedDC"
		],
		"wxBufferedPaintDC":[
			{
				"return_type":"",
				"brief_description":"As with wxBufferedDC, you may either provide the bitmap to be used for buffering or let this object create one internally (in the latter case, the size of the client part of the window is used).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxBitmap&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"window",
					"buffer",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxBUFFER_CLIENT_AREA"
				]
			},
			{
				"return_type":"",
				"brief_description":"As with wxBufferedDC, you may either provide the bitmap to be used for buffering or let this object create one internally (in the latter case, the size of the client part of the window is used).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"window",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxBUFFER_CLIENT_AREA"
				]
			}
		]
	},
	"wxClientDC":{
		"_implements":[
			"wxWindowDC"
		],
		"wxClientDC":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxPaintEvent":{
		"_implements":[
			"wxEvent"
		]
	},
	"wxPaintDC":{
		"wxPaintDC":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxWindowDC"
		]
	},
	"wxMemoryDC":{
		"_implements":[
			"wxDC"
		],
		"SelectObject":[
			{
				"return_type":"void",
				"brief_description":"Works exactly like SelectObjectAsSource() but this is the function you should use when you select a bitmap because you want to modify it, e.g.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SelectObjectAsSource":[
			{
				"return_type":"void",
				"brief_description":"Selects the given bitmap into the device context, to use as the memory bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxMemoryDC":[
			{
				"return_type":"",
				"brief_description":"Constructs a new memory device context.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a new memory device context having the same characteristics as the given existing device context.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a new memory device context and calls SelectObject() with the given bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxMirrorDC":{
		"wxMirrorDC":[
			{
				"return_type":"",
				"brief_description":"Creates a (maybe) mirrored DC associated with the real dc.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dc",
					"mirror"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxDC"
		]
	},
	"wxDCClipper":{
		"wxDCClipper":[
			{
				"return_type":"",
				"brief_description":"Sets the clipping region to the specified region\/coordinates.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRegion&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dc",
					"region"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Sets the clipping region to the specified region\/coordinates.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"dc",
					"rect"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Sets the clipping region to the specified region\/coordinates.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxCoord",
					"wxCoord",
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"x",
					"y",
					"w",
					"h"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxFontList":{
		"wxFontList":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FindOrCreateFont":[
			{
				"return_type":"wxFont*",
				"brief_description":"Finds a font of the given specification, or creates one and adds it to the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"wxFontFamily",
					"wxFontStyle",
					"wxFontWeight",
					"bool",
					"const wxString&",
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"point_size",
					"family",
					"style",
					"weight",
					"underline",
					"facename",
					"encoding"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"false",
					"wxEmptyString",
					"wxFONTENCODING_DEFAULT"
				]
			}
		]
	},
	"wxPenList":{
		"FindOrCreatePen":[
			{
				"return_type":"wxPen*",
				"brief_description":"Finds a pen with the specified attributes and returns it, else creates a new pen, adds it to the pen list, and returns it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"int",
					"wxPenStyle"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"colour",
					"width",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"1",
					"wxPENSTYLE_SOLID"
				]
			}
		],
		"wxPenList":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxPaletteChangedEvent":{
		"GetChangedWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetChangedWindow":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPaletteChangedEvent":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"winid"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxRendererNative":{
		"DrawCheckBox":[
			{
				"return_type":"void",
				"brief_description":"Draw a check box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawChoice":[
			{
				"return_type":"void",
				"brief_description":"Draw a native wxChoice.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawComboBox":[
			{
				"return_type":"void",
				"brief_description":"Draw a native wxComboBox.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawComboBoxDropButton":[
			{
				"return_type":"void",
				"brief_description":"Draw a button like the one used by wxComboBox to show a drop down window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawDropArrow":[
			{
				"return_type":"void",
				"brief_description":"Draw a drop down arrow that is suitable for use outside a combo box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawFocusRect":[
			{
				"return_type":"void",
				"brief_description":"Draw a focus rectangle using the specified rectangle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawHeaderButton":[
			{
				"return_type":"int",
				"brief_description":"Draw the header control button (used, for example, by wxListCtrl).",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int",
					"wxHeaderSortIconType",
					"wxHeaderButtonParams*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags",
					"sortArrow",
					"params"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0",
					"wxHDR_SORT_ICON_NONE",
					"NULL"
				]
			}
		],
		"DrawHeaderButtonContents":[
			{
				"return_type":"int",
				"brief_description":"Draw the contents of a header control button (label, sort arrows, etc.).",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int",
					"wxHeaderSortIconType",
					"wxHeaderButtonParams*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags",
					"sortArrow",
					"params"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0",
					"wxHDR_SORT_ICON_NONE",
					"NULL"
				]
			}
		],
		"DrawPushButton":[
			{
				"return_type":"void",
				"brief_description":"Draw a blank push button that looks very similar to wxButton.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawItemSelectionRect":[
			{
				"return_type":"void",
				"brief_description":"Draw a selection rectangle underneath the text as used e.g.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawRadioBitmap":[
			{
				"return_type":"void",
				"brief_description":"Draw a native wxRadioButton bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawSplitterBorder":[
			{
				"return_type":"void",
				"brief_description":"Draw the border for sash window: this border must be such that the sash drawn by DrawSplitterSash() blends into it well.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawSplitterSash":[
			{
				"return_type":"void",
				"brief_description":"Draw a sash.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxSize&",
					"wxCoord",
					"wxOrientation",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"size",
					"position",
					"orient",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawTextCtrl":[
			{
				"return_type":"void",
				"brief_description":"Draw a native wxTextCtrl frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"DrawTreeItemButton":[
			{
				"return_type":"void",
				"brief_description":"Draw the expanded\/collapsed icon for a tree control item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxDC&",
					"const wxRect&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"win",
					"dc",
					"rect",
					"flags"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"0"
				]
			}
		],
		"Get":[
			{
				"return_type":"wxRendererNative&",
				"brief_description":"Return the currently used renderer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCheckBoxSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size of a check box.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetDefault":[
			{
				"return_type":"wxRendererNative&",
				"brief_description":"Return the default (native) implementation for this platform  this is also the one used by default but this may be changed by calling Set() in which case the return value of this method may be different from the return value of Get().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetGeneric":[
			{
				"return_type":"wxRendererNative&",
				"brief_description":"Return the generic implementation of the renderer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHeaderButtonHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the height of a header button, either a fixed platform height if available, or a generic height based on the win window's font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetHeaderButtonMargin":[
			{
				"return_type":"int",
				"brief_description":"Returns the horizontal margin on the left and right sides of header button's label.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSplitterParams":[
			{
				"return_type":"wxSplitterRenderParams",
				"brief_description":"Get the splitter parameters, see wxSplitterRenderParams.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetVersion":[
			{
				"return_type":"wxRendererVersion",
				"brief_description":"This function is used for version checking: Load() refuses to load any shared libraries implementing an older or incompatible version.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Load":[
			{
				"return_type":"wxRendererNative*",
				"brief_description":"Load the renderer from the specified DLL, the returned pointer must be deleted by caller if not NULL when it is not used any more.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Set":[
			{
				"return_type":"wxRendererNative*",
				"brief_description":"Set the renderer to use, passing NULL reverts to using the default renderer (the global renderer must always exist).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxRendererNative*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"renderer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxImageHandler":{
		"CanRead":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this handler supports the image format contained in the given stream.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stream"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Returns true if this handler supports the image format contained in the file with the given name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetAltExtensions":[
			{
				"return_type":"const wxArrayString&",
				"brief_description":"Returns the other file extensions associated with this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtension":[
			{
				"return_type":"const wxString&",
				"brief_description":"Gets the preferred file extension associated with this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetImageCount":[
			{
				"return_type":"int",
				"brief_description":"If the image file contains more than one image and the image handler is capable of retrieving these individually, this function will return the number of available images.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"stream"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMimeType":[
			{
				"return_type":"const wxString&",
				"brief_description":"Gets the MIME type associated with this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Gets the name of this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetType":[
			{
				"return_type":"wxBitmapType",
				"brief_description":"Gets the image type associated with this handler.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadFile":[
			{
				"return_type":"bool",
				"brief_description":"Loads a image from a stream, putting the resulting data into image.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImage*",
					"wxInputStream&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"image",
					"stream",
					"verbose",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true",
					"-1"
				]
			}
		],
		"SaveFile":[
			{
				"return_type":"bool",
				"brief_description":"Saves a image in the output stream.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxImage*",
					"wxOutputStream&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"image",
					"stream",
					"verbose"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true"
				]
			}
		],
		"SetAltExtensions":[
			{
				"return_type":"void",
				"brief_description":"Sets the alternative file extensions associated with this handler.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extensions"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetExtension":[
			{
				"return_type":"void",
				"brief_description":"Sets the preferred file extension associated with this handler.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extension"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMimeType":[
			{
				"return_type":"void",
				"brief_description":"Sets the handler MIME type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mimetype"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Sets the handler name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxInitDialogEvent":{
		"wxInitDialogEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxMaximizeEvent":{
		"wxMaximizeEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxNavigationKeyEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetCurrentFocus":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the child that has the focus, or NULL.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDirection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the navigation was in the forward direction.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsFromTab":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the navigation event was from a tab key.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsWindowChange":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the navigation event represents a window change (for example, from Ctrl-Page Down in a notebook).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetCurrentFocus":[
			{
				"return_type":"void",
				"brief_description":"Sets the current focus window member.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"currentFocus"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDirection":[
			{
				"return_type":"void",
				"brief_description":"Sets the direction to forward if direction is true, or backward if false.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Sets the flags for this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFromTab":[
			{
				"return_type":"void",
				"brief_description":"Marks the navigation event as from a tab key.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fromTab"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetWindowChange":[
			{
				"return_type":"void",
				"brief_description":"Marks the event as a window change event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"windowChange"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxNavigationKeyEvent":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxPathList":{
		"_implements":[
			"wxArrayString"
		],
		"Add":[
			{
				"return_type":"bool",
				"brief_description":"Adds the given directory to the path list, if the path is not already in the list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Adds all elements of the given array as paths.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"arr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddEnvList":[
			{
				"return_type":"void",
				"brief_description":"Finds the value of the given environment variable, and adds all paths to the path list.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"env_variable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnsureFileAccessible":[
			{
				"return_type":"bool",
				"brief_description":"Given a full filename (with path), calls Add() with the path of the file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindAbsoluteValidPath":[
			{
				"return_type":"wxString",
				"brief_description":"Like FindValidPath() but this function always returns an absolute path (eventually prepending the current working directory to the value returned wxPathList::FindValidPath()) or an empty string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"FindValidPath":[
			{
				"return_type":"wxString",
				"brief_description":"Searches the given file in all paths stored in this class.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxPathList":[
			{
				"return_type":"",
				"brief_description":"Standard constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs the object calling the Add() function.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"arr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxCriticalSection":{
		"Enter":[
			{
				"return_type":"void",
				"brief_description":"Enter the critical section (same as locking a mutex): if another thread has already entered it, this call will block until the other thread calls Leave().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Leave":[
			{
				"return_type":"void",
				"brief_description":"Leave the critical section allowing other threads use the global data protected by it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TryEnter":[
			{
				"return_type":"bool",
				"brief_description":"Try to enter the critical section (same as trying to lock a mutex).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxCriticalSection":[
			{
				"return_type":"",
				"brief_description":"Default constructor initializes critical section object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCriticalSectionType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"critSecType"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxCRITSEC_DEFAULT"
				]
			}
		]
	},
	"wxCriticalSectionLocker":{
		"wxCriticalSectionLocker":[
			{
				"return_type":"",
				"brief_description":"Constructs a wxCriticalSectionLocker object associated with given criticalsection and enters it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCriticalSection&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"criticalsection"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxCondition":{
		"Broadcast":[
			{
				"return_type":"wxCondError",
				"brief_description":"Broadcasts to all waiting threads, waking all of them up.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the object had been initialized successfully, false if an error occurred.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Signal":[
			{
				"return_type":"wxCondError",
				"brief_description":"Signals the object waking up at most one thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Wait":[
			{
				"return_type":"wxCondError",
				"brief_description":"Waits until the condition is signalled.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WaitTimeout":[
			{
				"return_type":"wxCondError",
				"brief_description":"Waits until the condition is signalled or the timeout has elapsed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"milliseconds"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxCondition":[
			{
				"return_type":"",
				"brief_description":"Default and only constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMutex&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mutex"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxBusyCursor":{
		"wxBusyCursor":[
			{
				"return_type":"",
				"brief_description":"Constructs a busy cursor object, calling wxBeginBusyCursor().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxCursor*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"cursor"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxHOURGLASS_CURSOR"
				]
			}
		]
	},
	"wxBusyInfo":{
		"wxBusyInfo":[
			{
				"return_type":"",
				"brief_description":"Constructs a busy info window as child of parent and displays msg in it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"msg",
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		]
	},
	"wxXmlResourceHandler":{
		"AddStyle":[
			{
				"return_type":"void",
				"brief_description":"Add a style flag (e.g.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"AddWindowStyles":[
			{
				"return_type":"void",
				"brief_description":"Add styles common to all wxWindow-derived classes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanHandle":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if it understands this node and can create a resource from it, false otherwise.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CreateChildren":[
			{
				"return_type":"void",
				"brief_description":"Creates children.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxObject*",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"this_hnd_only"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"CreateChildrenPrivately":[
			{
				"return_type":"void",
				"brief_description":"Helper function.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxObject*",
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"rootnode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"CreateResFromNode":[
			{
				"return_type":"wxObject*",
				"brief_description":"Creates a resource from a node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxXmlNode*",
					"wxObject*",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"node",
					"parent",
					"instance"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		],
		"CreateResource":[
			{
				"return_type":"wxObject*",
				"brief_description":"Creates an object (menu, dialog, control, ...) from an XML node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*",
					"wxObject*",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"node",
					"parent",
					"instance"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DoCreateResource":[
			{
				"return_type":"wxObject*",
				"brief_description":"Called from CreateResource after variables were filled.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAnimation":[
			{
				"return_type":"wxAnimation*",
				"brief_description":"Creates an animation (see wxAnimation) from the filename specified in param.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"param"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"animation\""
				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Gets a bitmap.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"const wxArtClient&",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaultArtClient",
					"size"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"bitmap\"",
					"wxART_OTHER",
					"wxDefaultSize"
				]
			},
			{
				"return_type":"wxBitmap",
				"brief_description":"Gets a bitmap from an XmlNode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxXmlNode*",
					"const wxArtClient&",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"node",
					"defaultArtClient",
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxART_OTHER",
					"wxDefaultSize"
				]
			}
		],
		"GetBool":[
			{
				"return_type":"bool",
				"brief_description":"Gets a bool flag (1, t, yes, on, true are true, everything else is false).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaultv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Gets colour in HTML syntax (#RRGGBB).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaultColour"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxNullColour"
				]
			}
		],
		"GetCurFileSystem":[
			{
				"return_type":"wxFileSystem&",
				"brief_description":"Returns the current file system.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDimension":[
			{
				"return_type":"wxCoord",
				"brief_description":"Gets a dimension (may be in dialog units).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"wxCoord",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaultv",
					"windowToUse"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0",
					"0"
				]
			}
		],
		"GetDirection":[
			{
				"return_type":"wxDirection",
				"brief_description":"Gets a direction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"wxDirection"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"dirDefault"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxLEFT"
				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Gets a font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"param"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"font\""
				]
			}
		],
		"GetID":[
			{
				"return_type":"int",
				"brief_description":"Returns the XRCID.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIcon":[
			{
				"return_type":"wxIcon",
				"brief_description":"Returns an icon.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"const wxArtClient&",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaultArtClient",
					"size"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"icon\"",
					"wxART_OTHER",
					"wxDefaultSize"
				]
			},
			{
				"return_type":"wxIcon",
				"brief_description":"Gets an icon from an XmlNode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxXmlNode*",
					"const wxArtClient&",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"node",
					"defaultArtClient",
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxART_OTHER",
					"wxDefaultSize"
				]
			}
		],
		"GetIconBundle":[
			{
				"return_type":"wxIconBundle",
				"brief_description":"Returns an icon bundle.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"const wxArtClient&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaultArtClient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxART_OTHER"
				]
			}
		],
		"GetImageList":[
			{
				"return_type":"wxImageList*",
				"brief_description":"Creates an image list from the param markup data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"param"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"imagelist\""
				]
			}
		],
		"GetLong":[
			{
				"return_type":"long",
				"brief_description":"Gets the integer value from the parameter.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"long"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaultv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the resource name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNodeContent":[
			{
				"return_type":"wxString",
				"brief_description":"Gets node content from wxXML_ENTITY_NODE.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetParamNode":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Finds the node or returns NULL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"param"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetParamValue":[
			{
				"return_type":"wxString",
				"brief_description":"Finds the parameter value or returns the empty string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"param"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the node parameter value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Gets the position (may be in dialog units).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"param"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"pos\""
				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Gets the size (may be in dialog units).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"windowToUse"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"size\"",
					"0"
				]
			}
		],
		"GetStyle":[
			{
				"return_type":"int",
				"brief_description":"Gets style flags from text in form \"flag | flag2| flag3 |...\" Only understands flags added with AddStyle().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"defaults"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"\"style\"",
					"0"
				]
			}
		],
		"GetText":[
			{
				"return_type":"wxString",
				"brief_description":"Gets text from param and does some conversions:",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"translate"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"HasParam":[
			{
				"return_type":"bool",
				"brief_description":"Check to see if a parameter exists.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"param"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsOfClass":[
			{
				"return_type":"bool",
				"brief_description":"Convenience function.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxXmlNode*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"node",
					"classname"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ReportError":[
			{
				"return_type":"void",
				"brief_description":"Reports error in XRC resources to the user.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxXmlNode*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"context",
					"message"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Like ReportError(wxXmlNode*, const wxString&), but uses the node of currently processed object (m_node) as the context.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"message"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ReportParamError":[
			{
				"return_type":"void",
				"brief_description":"Like ReportError(wxXmlNode*, const wxString&), but uses the node of parameter param of the currently processed object as the context.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"param",
					"message"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetParentResource":[
			{
				"return_type":"void",
				"brief_description":"Sets the parent resource.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlResource*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"res"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetupWindow":[
			{
				"return_type":"void",
				"brief_description":"Sets common window options.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"wnd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxXmlResourceHandler":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxXmlNode":{
		"AddAttribute":[
			{
				"return_type":"void",
				"brief_description":"Appends a attribute with given name and value to the list of attributes for this node.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Appends given attribute to the list of attributes for this node.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlAttribute*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"attr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddChild":[
			{
				"return_type":"void",
				"brief_description":"Adds node child as the last child of this node.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"child"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DeleteAttribute":[
			{
				"return_type":"bool",
				"brief_description":"Removes the first attributes which has the given name from the list of attributes for this node.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetAttribute":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a attribute named attrName could be found.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxString*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"attrName",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxString",
				"brief_description":"Returns the value of the attribute named attrName if it does exist.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"attrName",
					"defaultVal"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"GetAttributes":[
			{
				"return_type":"wxXmlAttribute*",
				"brief_description":"Return a pointer to the first attribute of this node.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetChildren":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Returns the first child of this node.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetContent":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the content of this node.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDepth":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of nodes which separate this node from grandparent.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"grandparent"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL"
				]
			}
		],
		"GetLineNumber":[
			{
				"return_type":"int",
				"brief_description":"Returns line number of the node in the input XML file or -1 if it is unknown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the name of this node.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNext":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Returns a pointer to the sibling of this node or NULL if there are no siblings.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNoConversion":[
			{
				"return_type":"bool",
				"brief_description":"Returns a flag indicating whether encoding conversion is necessary when saving.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNodeContent":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the content of the first child node of type wxXML_TEXT_NODE or wxXML_CDATA_SECTION_NODE.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetParent":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Returns a pointer to the parent of this node or NULL if this node has no parent.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetType":[
			{
				"return_type":"wxXmlNodeType",
				"brief_description":"Returns the type of this node.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasAttribute":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this node has a attribute named attrName.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"attrName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"InsertChild":[
			{
				"return_type":"bool",
				"brief_description":"Inserts the child node immediately before followingNode in the children list.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*",
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"child",
					"followingNode"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"InsertChildAfter":[
			{
				"return_type":"bool",
				"brief_description":"Inserts the child node immediately after precedingNode in the children list.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*",
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"child",
					"precedingNode"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsWhitespaceOnly":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the content of this node is a string containing only whitespaces (spaces, tabs, new lines, etc).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RemoveChild":[
			{
				"return_type":"bool",
				"brief_description":"Removes the given node from the children list.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"child"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetAttributes":[
			{
				"return_type":"void",
				"brief_description":"Sets as first attribute the given wxXmlAttribute object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlAttribute*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"attr"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetChildren":[
			{
				"return_type":"void",
				"brief_description":"Sets as first child the given node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"child"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetContent":[
			{
				"return_type":"void",
				"brief_description":"Sets the content of this node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"con"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Sets the name of this node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNext":[
			{
				"return_type":"void",
				"brief_description":"Sets as sibling the given node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"next"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNoConversion":[
			{
				"return_type":"void",
				"brief_description":"Sets a flag to indicate whether encoding conversion is necessary when saving.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"noconversion"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParent":[
			{
				"return_type":"void",
				"brief_description":"Sets as parent the given node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetType":[
			{
				"return_type":"void",
				"brief_description":"Sets the type of this node.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNodeType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator=":[
			{
				"return_type":"wxXmlNode&",
				"brief_description":"See the copy constructor for more info.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxXmlNode&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxXmlNode":[
			{
				"return_type":"",
				"brief_description":"Creates this XML node and eventually insert it into an existing XML tree.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*",
					"wxXmlNodeType",
					"const wxString&",
					"const wxString&",
					"wxXmlAttribute*",
					"wxXmlNode*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"type",
					"name",
					"content",
					"attrs",
					"next",
					"lineNo"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString",
					"NULL",
					"NULL",
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"A simplified version of the first constructor form, assuming a NULL parent.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNodeType",
					"const wxString&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"name",
					"content",
					"lineNo"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"-1"
				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxXmlNode&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxXmlDocument":{
		"AppendToProlog":[
			{
				"return_type":"void",
				"brief_description":"Appends a Process Instruction or Comment node to the document prologue.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DetachDocumentNode":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Detaches the document node and returns it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DetachRoot":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Detaches the root entity node and returns it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDocumentNode":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Returns the document node of the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFileEncoding":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns encoding of document (may be empty).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLibraryVersionInfo":[
			{
				"return_type":"wxVersionInfo",
				"brief_description":"Get expat library version information.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRoot":[
			{
				"return_type":"wxXmlNode*",
				"brief_description":"Returns the root element node of the document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVersion":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the version of document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the document has been loaded successfully.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Load":[
			{
				"return_type":"bool",
				"brief_description":"Parses filename as an xml document and loads its data.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"filename",
					"encoding",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"UTF-8\"",
					"wxXMLDOC_NONE"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Like Load(const wxString&, const wxString&, int) but takes the data from given input stream.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"stream",
					"encoding",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"UTF-8\"",
					"wxXMLDOC_NONE"
				]
			}
		],
		"Save":[
			{
				"return_type":"bool",
				"brief_description":"Saves XML tree creating a file named with given string.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"indentstep"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"2"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Saves XML tree in the given output stream.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOutputStream&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"indentstep"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"2"
				]
			}
		],
		"SetDocumentNode":[
			{
				"return_type":"void",
				"brief_description":"Sets the document node of this document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFileEncoding":[
			{
				"return_type":"void",
				"brief_description":"Sets the enconding of the file which will be used to save the document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRoot":[
			{
				"return_type":"void",
				"brief_description":"Sets the root element node of this document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlNode*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"node"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVersion":[
			{
				"return_type":"void",
				"brief_description":"Sets the version of the XML file which will be used to save the document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"version"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"operator=":[
			{
				"return_type":"wxXmlDocument&",
				"brief_description":"Deep copies the given document.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxXmlDocument&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"doc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxXmlDocument":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Copy constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxXmlDocument&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"doc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Loads the given filename using the given encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"UTF-8\""
				]
			},
			{
				"return_type":"",
				"brief_description":"Loads the XML document from given stream using the given encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"stream",
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"UTF-8\""
				]
			}
		],
		"_implements":[
			"wxObject"
		]
	},
	"wxXmlAttribute":{
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the name of this attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNext":[
			{
				"return_type":"wxXmlAttribute*",
				"brief_description":"Returns the sibling of this attribute or NULL if there are no siblings.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the value of this attribute.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetName":[
			{
				"return_type":"void",
				"brief_description":"Sets the name of this attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNext":[
			{
				"return_type":"void",
				"brief_description":"Sets the sibling of this attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxXmlAttribute*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"next"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetValue":[
			{
				"return_type":"void",
				"brief_description":"Sets the value of this attribute.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"value"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxXmlAttribute":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Creates the attribute with given name and value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"wxXmlAttribute*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"name",
					"value",
					"next"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"NULL"
				]
			}
		]
	},
	"wxLayoutAlgorithm":{
		"_implements":[
			"wxObject"
		],
		"LayoutFrame":[
			{
				"return_type":"bool",
				"brief_description":"Lays out the children of a normal frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFrame*",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"frame",
					"mainWindow"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"LayoutMDIFrame":[
			{
				"return_type":"bool",
				"brief_description":"Lays out the children of an MDI parent frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMDIParentFrame*",
					"wxRect*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"frame",
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"LayoutWindow":[
			{
				"return_type":"bool",
				"brief_description":"Lays out the children of a normal frame or other window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"parent",
					"mainWindow"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"wxLayoutAlgorithm":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxFocusEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"Returns the window associated with this event, that is the window which had the focus before for the wxEVT_SET_FOCUS event and the window which is going to receive focus for the wxEVT_KILL_FOCUS one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetWindow":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFocusEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"eventType",
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		]
	},
	"wxFontMapper":{
		"CharsetToEncoding":[
			{
				"return_type":"wxFontEncoding",
				"brief_description":"Returns the encoding for the given charset (in the form of RFC 2046) or wxFONTENCODING_SYSTEM if couldn't decode it.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"charset",
					"interactive"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"Get":[
			{
				"return_type":"wxFontMapper*",
				"brief_description":"Get the current font mapper object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAllEncodingNames":[
			{
				"return_type":"const wxChar**",
				"brief_description":"Returns the array of all possible names for the given encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetAltForEncoding":[
			{
				"return_type":"bool",
				"brief_description":"Find an alternative for the given encoding (which is supposed to not be available on this system).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding",
					"wxNativeEncodingInfo*",
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"encoding",
					"info",
					"facename",
					"interactive"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"true"
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Find an alternative for the given encoding (which is supposed to not be available on this system).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding",
					"wxFontEncoding*",
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"encoding",
					"alt_encoding",
					"facename",
					"interactive"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"true"
				]
			}
		],
		"GetEncoding":[
			{
				"return_type":"wxFontEncoding",
				"brief_description":"Returns the n-th supported encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetEncodingDescription":[
			{
				"return_type":"wxString",
				"brief_description":"Return user-readable string describing the given encoding.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetEncodingFromName":[
			{
				"return_type":"wxFontEncoding",
				"brief_description":"Return the encoding corresponding to the given internal name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetEncodingName":[
			{
				"return_type":"wxString",
				"brief_description":"Return internal string identifier for the encoding (see also wxFontMapper::GetEncodingDescription).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"encoding"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSupportedEncodingsCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of the font encodings supported by this class.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEncodingAvailable":[
			{
				"return_type":"bool",
				"brief_description":"Check whether given encoding is available in given face or not.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"encoding",
					"facename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"Set":[
			{
				"return_type":"wxFontMapper*",
				"brief_description":"Set the current font mapper object and return previous one (may be NULL).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxFontMapper*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mapper"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetConfigPath":[
			{
				"return_type":"void",
				"brief_description":"Set the root config path to use (should be an absolute path).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prefix"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDialogParent":[
			{
				"return_type":"void",
				"brief_description":"The parent window for modal dialogs.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDialogTitle":[
			{
				"return_type":"void",
				"brief_description":"The title for the dialogs (note that default is quite reasonable).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFontMapper":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxFontEnumerator":{
		"OnFontEncoding":[
			{
				"return_type":"bool",
				"brief_description":"Called by EnumerateEncodings() for each match.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"font",
					"encoding"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"OnFacename":[
			{
				"return_type":"bool",
				"brief_description":"Called by EnumerateFacenames() for each match.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsValidFacename":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given string is valid face name, i.e.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"facename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFacenames":[
			{
				"return_type":"wxArrayString",
				"brief_description":"Return array of strings containing all facenames found by EnumerateFacenames().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"encoding",
					"fixedWidthOnly"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxFONTENCODING_SYSTEM",
					"false"
				]
			}
		],
		"GetEncodings":[
			{
				"return_type":"wxArrayString",
				"brief_description":"Return array of strings containing all encodings found by EnumerateEncodings().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"facename"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		],
		"EnumerateFacenames":[
			{
				"return_type":"bool",
				"brief_description":"Call OnFacename() for each font which supports given encoding (only if it is not wxFONTENCODING_SYSTEM) and is of fixed width (if fixedWidthOnly is true).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFontEncoding",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"encoding",
					"fixedWidthOnly"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxFONTENCODING_SYSTEM",
					"false"
				]
			}
		],
		"EnumerateEncodings":[
			{
				"return_type":"bool",
				"brief_description":"Call OnFontEncoding() for each encoding supported by the given font - or for each encoding supported by at least some font if font is not specified.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"font"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		]
	},
	"wxFFileInputStream":{
		"_implements":[
			"wxInputStream"
		],
		"wxFFileInputStream":[
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in read-only mode using the file I\/O object file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFFile&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Opens the specified file using its filename name using the specified mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"rb\""
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in read-only mode using the specified file pointer fp.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"FILE*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the stream is initialized and ready.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxFFileOutputStream":{
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the stream is initialized and ready.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxOutputStream"
		],
		"wxFFileOutputStream":[
			{
				"return_type":"",
				"brief_description":"Open the given file filename with mode mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"wb\""
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in write-only mode using the file I\/O object file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFFile&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in write-only mode using the file descriptor fp.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"FILE*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxFFileStream":{
		"_implements":[
			"wxFFileInputStream",
			"wxFFileOutputStream"
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the stream is initialized and ready.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFFileStream":[
			{
				"return_type":"",
				"brief_description":"Initializes a new file stream in the given mode using the specified iofileName name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"iofileName",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"\"w+b\""
				]
			}
		]
	},
	"wxFile":{
		"Read":[
			{
				"return_type":"ssize_t",
				"brief_description":"Reads from the file into a memory buffer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"count"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Seek":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Seeks to the specified position.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileOffset",
					"wxSeekMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"ofs",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFromStart"
				]
			}
		],
		"SeekEnd":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Moves the file pointer to the specified number of bytes relative to the end of the file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileOffset"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ofs"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"Tell":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Returns the current position or wxInvalidOffset if file is not opened or if another error occurred.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Write":[
			{
				"return_type":"size_t",
				"brief_description":"Write data to the file (descriptor).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const void*",
					"size_t"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"buffer",
					"count"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Writes the contents of the string to the file, returns true on success.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"s",
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxConvUTF8"
				]
			}
		],
		"fd":[
			{
				"return_type":"int",
				"brief_description":"Returns the file descriptor associated with the file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFile":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Opens a file with a filename.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxFile::OpenMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"filename",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFile::read"
				]
			},
			{
				"return_type":"",
				"brief_description":"Associates the file with the given file descriptor, which has already been opened.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Open":[
			{
				"return_type":"bool",
				"brief_description":"Opens the file, returning true if successful.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxFile::OpenMode",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"filename",
					"mode",
					"access"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFile::read",
					"wxS_DEFAULT"
				]
			}
		],
		"Length":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Returns the length of the file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOpened":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the file has been opened.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLastError":[
			{
				"return_type":"int",
				"brief_description":"Returns the error code for the last unsuccessful operation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKind":[
			{
				"return_type":"wxFileKind",
				"brief_description":"Returns the type of the file.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Flush":[
			{
				"return_type":"bool",
				"brief_description":"Flushes the file descriptor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Exists":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given name specifies an existing regular file (not a directory or a link).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Eof":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the end of the file has been reached.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates a file for writing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"filename",
					"overwrite",
					"access"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false",
					"wxS_DEFAULT"
				]
			}
		],
		"Close":[
			{
				"return_type":"bool",
				"brief_description":"Closes the file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearLastError":[
			{
				"return_type":"void",
				"brief_description":"Resets the error code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Attach":[
			{
				"return_type":"void",
				"brief_description":"Attaches an existing file descriptor to the wxFile object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Detach":[
			{
				"return_type":"int",
				"brief_description":"Get back a file descriptor from wxFile object - the caller is responsible for closing the file if this descriptor is opened.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Access":[
			{
				"return_type":"bool",
				"brief_description":"This function verifies if we may access the given file in specified mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxFile::OpenMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"mode"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxFileConfig":{
		"_implements":[
			"wxConfigBase"
		],
		"DeleteAll":[
			{
				"return_type":"bool",
				"brief_description":"Delete the whole underlying object (disk file, registry key, ...).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteEntry":[
			{
				"return_type":"bool",
				"brief_description":"Deletes the specified entry and the group it belongs to if it was the last key in it and the second parameter is true.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"key",
					"bDeleteGroupIfEmpty"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"DeleteGroup":[
			{
				"return_type":"bool",
				"brief_description":"Delete the group (with all subgroups).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"key"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Flush":[
			{
				"return_type":"bool",
				"brief_description":"Permanently writes all changes (otherwise, they're only written from object's destructor).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bCurrentOnly"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"GetFirstEntry":[
			{
				"return_type":"bool",
				"brief_description":"Gets the first entry.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetFirstGroup":[
			{
				"return_type":"bool",
				"brief_description":"Gets the first group.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetGlobalFile":[
			{
				"return_type":"wxFileName",
				"brief_description":"Return the full path to the file which would be used by wxFileConfig as global, system-wide, file if it were constructed with basename as \"global filename\" parameter in the constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"basename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetGlobalFileName":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"szFile"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetLocalFile":[
			{
				"return_type":"wxFileName",
				"brief_description":"Return the full path to the file which would be used by wxFileConfig as local, user-specific, file if it were constructed with basename as \"local filename\" parameter in the constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"basename",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"GetLocalFileName":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"szFile",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"0"
				]
			}
		],
		"GetNextEntry":[
			{
				"return_type":"bool",
				"brief_description":"Gets the next entry.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetNextGroup":[
			{
				"return_type":"bool",
				"brief_description":"Gets the next group.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString&",
					"long&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"str",
					"index"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetNumberOfEntries":[
			{
				"return_type":"size_t",
				"brief_description":"Get number of entries in the current group.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bRecursive"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"GetNumberOfGroups":[
			{
				"return_type":"size_t",
				"brief_description":"Get number of entries\/subgroups in the current group, with or without its subgroups.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bRecursive"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"false"
				]
			}
		],
		"GetPath":[
			{
				"return_type":"const wxString&",
				"brief_description":"Retrieve the current path (always as absolute path).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasEntry":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasGroup":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RenameEntry":[
			{
				"return_type":"bool",
				"brief_description":"Renames an entry in the current group.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"oldName",
					"newName"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"RenameGroup":[
			{
				"return_type":"bool",
				"brief_description":"Renames a subgroup of the current group.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"oldName",
					"newName"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Save":[
			{
				"return_type":"bool",
				"brief_description":"Saves all config data to the given stream, returns true if data was saved successfully or false on error.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOutputStream&",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"os",
					"conv"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxConvAuto()"
				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Set current path: if the first character is '\/', it is the absolute path, otherwise it is a relative path.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strPath"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetUmask":[
			{
				"return_type":"void",
				"brief_description":"Allows to set the mode to be used for the config file creation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFileConfig":[
			{
				"return_type":"",
				"brief_description":"Constructor allowing to choose the file names to use.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"long",
					"const wxMBConv&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"appName",
					"vendorName",
					"localFilename",
					"globalFilename",
					"style",
					"conv"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"wxEmptyString",
					"wxEmptyString",
					"wxEmptyString",
					"wxCONFIG_USE_LOCAL_FILE|wxCONFIG_USE_GLOBAL_FILE",
					"wxConvAuto()"
				]
			}
		]
	},
	"wxFileDirPickerEvent":{
		"GetPath":[
			{
				"return_type":"wxString",
				"brief_description":"Retrieve the absolute path of the file\/directory the user has just selected.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetPath":[
			{
				"return_type":"void",
				"brief_description":"Set the absolute path of the file\/directory associated with the event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFileDirPickerEvent":[
			{
				"return_type":"",
				"brief_description":"The constructor is not normally used by the user code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"wxObject*",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"generator",
					"id",
					"path"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		]
	},
	"wxFileHistory":{
		"_implements":[
			"wxObject"
		],
		"AddFileToHistory":[
			{
				"return_type":"void",
				"brief_description":"Adds a file to the file history list, if the object has a pointer to an appropriate file menu.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"AddFilesToMenu":[
			{
				"return_type":"void",
				"brief_description":"Appends the files in the history list, to all menus managed by the file history object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"void",
				"brief_description":"Appends the files in the history list, to the given menu only.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBaseId":[
			{
				"return_type":"wxWindowID",
				"brief_description":"Returns the base identifier for the range used for appending items.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the number of files currently stored in the file history.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHistoryFile":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the file at this index (zero-based).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMaxFiles":[
			{
				"return_type":"int",
				"brief_description":"Returns the maximum number of files that can be stored.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMenus":[
			{
				"return_type":"const wxList&",
				"brief_description":"Returns the list of menus that are managed by this file history object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Load":[
			{
				"return_type":"void",
				"brief_description":"Loads the file history from the given config object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxConfigBase&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"config"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveFileFromHistory":[
			{
				"return_type":"void",
				"brief_description":"Removes the specified file from the history.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"i"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveMenu":[
			{
				"return_type":"void",
				"brief_description":"Removes this menu from the list of those managed by this object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Save":[
			{
				"return_type":"void",
				"brief_description":"Saves the file history into the given config object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxConfigBase&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"config"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBaseId":[
			{
				"return_type":"void",
				"brief_description":"Sets the base identifier for the range used for appending items.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"baseId"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"UseMenu":[
			{
				"return_type":"void",
				"brief_description":"Adds this menu to the list of those menus that are managed by this file history object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFileHistory":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"wxWindowID"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"maxFiles",
					"idBase"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"9",
					"wxID_FILE1"
				]
			}
		]
	},
	"wxFileInputStream":{
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the stream is initialized and ready.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFileInputStream":[
			{
				"return_type":"",
				"brief_description":"Opens the specified file using its ifileName name in read-only mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ifileName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in read-only mode using the file I\/O object file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFile&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in read-only mode using the specified file descriptor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxInputStream"
		]
	},
	"wxFileDropTarget":{
		"wxFileDropTarget":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnDropFiles":[
			{
				"return_type":"bool",
				"brief_description":"Override this function to receive dropped files.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"const wxArrayString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"filenames"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnDrop":[
			{
				"return_type":"bool",
				"brief_description":"See wxDropTarget::OnDrop().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxDropTarget"
		]
	},
	"wxFileOutputStream":{
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the stream is initialized and ready.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFileOutputStream":[
			{
				"return_type":"",
				"brief_description":"Creates a new file with ofileName name and initializes the stream in write-only mode.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ofileName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in write-only mode using the file I\/O object file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFile&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Initializes a file stream in write-only mode using the file descriptor fd.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fd"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxOutputStream"
		]
	},
	"wxFileStream":{
		"_implements":[
			"wxFileOutputStream",
			"wxFileInputStream"
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the stream is initialized and ready.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFileStream":[
			{
				"return_type":"",
				"brief_description":"Initializes a new file stream in read-write mode using the specified iofileName name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"iofileName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxFileSystemWatcher":{
		"_implements":[
			"wxEvtHandler"
		],
		"Add":[
			{
				"return_type":"bool",
				"brief_description":"Adds path to currently watched files.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"path",
					"events"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFSW_EVENT_ALL"
				]
			}
		],
		"AddTree":[
			{
				"return_type":"bool",
				"brief_description":"This is the same as Add(), but also recursively adds every file\/directory in the tree rooted at path.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&",
					"int",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"path",
					"events",
					"filter"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFSW_EVENT_ALL",
					"wxEmptyString"
				]
			}
		],
		"GetWatchedPathsCount":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of currently watched paths.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Remove":[
			{
				"return_type":"bool",
				"brief_description":"Removes path from the list of watched paths.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveAll":[
			{
				"return_type":"bool",
				"brief_description":"Clears the list of currently watched paths.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RemoveTree":[
			{
				"return_type":"bool",
				"brief_description":"This is the same as Remove(), but also removes every file\/directory belonging to the tree rooted at path.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileName&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOwner":[
			{
				"return_type":"void",
				"brief_description":"Associates the file system watcher with the given handler object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEvtHandler*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFileSystemWatcher":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxFileSystemWatcherEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetChangeType":[
			{
				"return_type":"int",
				"brief_description":"Returns the type of file system change that occurred.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetErrorDescription":[
			{
				"return_type":"wxString",
				"brief_description":"Return a description of the warning or error if this is an error event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNewPath":[
			{
				"return_type":"const wxFileName&",
				"brief_description":"Returns the new path of the renamed file\/directory if this is a rename event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPath":[
			{
				"return_type":"const wxFileName&",
				"brief_description":"Returns the path at which the event occurred.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsError":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this error is an error event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToString":[
			{
				"return_type":"wxString",
				"brief_description":"Returns a wxString describing an event, useful for logging, debugging or testing.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxFileType":{
		"ExpandCommand":[
			{
				"return_type":"wxString",
				"brief_description":"This function is primarily intended for GetOpenCommand and GetPrintCommand usage but may be also used by the application directly if, for example, you want to use some non-default command to open the file.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const MessageParameters&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"command",
					"params"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetDescription":[
			{
				"return_type":"bool",
				"brief_description":"If the function returns true, the string pointed to by desc is filled with a brief description for this file type: for example, \"text document\" for the \"text\/plain\" MIME type.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"desc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetExtensions":[
			{
				"return_type":"bool",
				"brief_description":"If the function returns true, the array extensions is filled with all extensions associated with this file type: for example, it may contain the following two elements for the MIME type \"text\/html\" (notice the absence of the leading dot): \"html\" and \"htm\".",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"extensions"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetIcon":[
			{
				"return_type":"bool",
				"brief_description":"If the function returns true, the iconLoc is filled with the location of the icon for this MIME type.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxIconLocation*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"iconLoc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMimeType":[
			{
				"return_type":"bool",
				"brief_description":"If the function returns true, the string pointed to by mimeType is filled with full MIME type specification for this file type: for example, \"text\/plain\".",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mimeType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMimeTypes":[
			{
				"return_type":"bool",
				"brief_description":"Same as GetMimeType() but returns array of MIME types.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxArrayString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mimeTypes"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetOpenCommand":[
			{
				"return_type":"bool",
				"brief_description":"With the first version of this method, if the true is returned, the string pointed to by command is filled with the command which must be executed (see wxExecute()) in order to open the file of the given type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*",
					"const MessageParameters&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"command",
					"params"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxString",
				"brief_description":"With the first version of this method, if the true is returned, the string pointed to by command is filled with the command which must be executed (see wxExecute()) in order to open the file of the given type.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"filename"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetPrintCommand":[
			{
				"return_type":"bool",
				"brief_description":"If the function returns true, the string pointed to by command is filled with the command which must be executed (see wxExecute()) in order to print the file of the given type.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxString*",
					"const MessageParameters&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"command",
					"params"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxFileType":[
			{
				"return_type":"",
				"brief_description":"Copy ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxFileTypeInfo&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ftInfo"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxFileTypeInfo":{
		"AddExtension":[
			{
				"return_type":"void",
				"brief_description":"Add another extension associated with this file type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"ext"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetDescription":[
			{
				"return_type":"void",
				"brief_description":"Set the file type description.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"description"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOpenCommand":[
			{
				"return_type":"void",
				"brief_description":"Set the command to be used for opening files of this type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"command"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPrintCommand":[
			{
				"return_type":"void",
				"brief_description":"Set the command to be used for printing files of this type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"command"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetShortDesc":[
			{
				"return_type":"void",
				"brief_description":"Set the short description for the files of this type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"shortDesc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxFileTypeInfo":[
			{
				"return_type":"",
				"brief_description":"Default constructor creates an invalid file type info object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor specifying just the MIME type name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mimeType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor allowing to specify all the fields at once.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"const wxString&",
					"..."
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"mimeType",
					"openCmd",
					"printCmd",
					"description",
					"extension",
					null
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxStopWatch":{
		"wxStopWatch":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"TimeInMicro":[
			{
				"return_type":"wxLongLong",
				"brief_description":"Returns elapsed time in microseconds.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Time":[
			{
				"return_type":"long",
				"brief_description":"Returns the time in milliseconds since the start (or restart) or the last call of Pause().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Start":[
			{
				"return_type":"void",
				"brief_description":"(Re)starts the stop watch with a given initial value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"milliseconds"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		],
		"Resume":[
			{
				"return_type":"void",
				"brief_description":"Resumes the stop watch which had been paused with Pause().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Pause":[
			{
				"return_type":"void",
				"brief_description":"Pauses the stop watch.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxSingleInstanceChecker":{
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Initialize the object if it had been created using the default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"CreateDefault":[
			{
				"return_type":"bool",
				"brief_description":"Calls Create() with default name.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAnotherRunning":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if another copy of this program is already running and false otherwise.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxSingleInstanceChecker":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor calling Create().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"path"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		]
	},
	"wxStandardPaths":{
		"Get":[
			{
				"return_type":"wxStandardPaths&",
				"brief_description":"Returns reference to the unique global standard paths object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetAppDocumentsDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory for the document files used by this application.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetConfigDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory containing the system config files.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDataDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the location of the applications global, i.e. not user-specific, data files.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDocumentsDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory containing the current user's documents.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExecutablePath":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory and the filename for the current executable.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetInstallPrefix":[
			{
				"return_type":"wxString",
				"brief_description":"Return the program installation prefix, e.g. \/usr, \/opt or \/home\/zeitlin.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				],
				"platforms":[
					"wxos2",
					"wxgtk"
				]
			}
		],
		"GetLocalDataDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the location for application data files which are host-specific and can't, or shouldn't, be shared with the other machines.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPluginsDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory where the loadable modules (plugins) live.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetResourcesDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory where the application resource files are located.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTempDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory for storing temporary files.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUserConfigDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory for the user config files:",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUserDataDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory for the user-dependent application data files:",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUserLocalDataDir":[
			{
				"return_type":"wxString",
				"brief_description":"Return the directory for user data files which shouldn't be shared with the other machines.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetInstallPrefix":[
			{
				"return_type":"void",
				"brief_description":"Lets wxStandardPaths know about the real program installation prefix on a Unix system.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"prefix"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				],
				"platforms":[
					"wxos2",
					"wxgtk"
				]
			}
		],
		"UseAppInfo":[
			{
				"return_type":"void",
				"brief_description":"Controls what application information is used when constructing paths that should be unique to this program, such as the application data directory, the plugins directory on Unix, etc.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"info"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxLog":{
		"AddTraceMask":[
			{
				"return_type":"void",
				"brief_description":"Add the mask to the list of allowed masks for wxLogTrace().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ClearTraceMasks":[
			{
				"return_type":"void",
				"brief_description":"Removes all trace masks previously set with AddTraceMask().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DisableTimestamp":[
			{
				"return_type":"void",
				"brief_description":"Disables time stamping of the log messages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DoLogRecord":[
			{
				"return_type":"void",
				"brief_description":"Called to log a new record.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxLogLevel",
					"const wxString&",
					"const wxLogRecordInfo&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"level",
					"msg",
					"info"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DoLogText":[
			{
				"return_type":"void",
				"brief_description":"Called to log the specified string.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"msg"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DoLogTextAtLevel":[
			{
				"return_type":"void",
				"brief_description":"Called to log the specified string at given level.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxLogLevel",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"level",
					"msg"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DontCreateOnDemand":[
			{
				"return_type":"void",
				"brief_description":"Instructs wxLog to not create new log targets on the fly if there is none currently (see GetActiveTarget()).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnableLogging":[
			{
				"return_type":"bool",
				"brief_description":"Globally enable or disable logging.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Flush":[
			{
				"return_type":"void",
				"brief_description":"Some of wxLog implementations, most notably the standard wxLogGui class, buffer the messages (for example, to avoid showing the user a zillion of modal message boxes one after another  which would be really annoying).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"FlushActive":[
			{
				"return_type":"void",
				"brief_description":"Flushes the current log target if any, does nothing if there is none.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetActiveTarget":[
			{
				"return_type":"wxLog*",
				"brief_description":"Returns the pointer to the active log target (may be NULL).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLogLevel":[
			{
				"return_type":"wxLogLevel",
				"brief_description":"Returns the current log level limit.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRepetitionCounting":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the repetition counting mode is enabled.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTimestamp":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the current timestamp format string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTraceMasks":[
			{
				"return_type":"const wxArrayString&",
				"brief_description":"Returns the currently allowed list of string trace masks.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVerbose":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the verbose mode is currently active.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAllowedTraceMask":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the mask is one of allowed masks for wxLogTrace().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if logging is enabled at all now.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsLevelEnabled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if logging at this level is enabled for the current thread.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxLogLevel",
					"wxString"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"level",
					"component"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"LogRecord":[
			{
				"return_type":"void",
				"brief_description":"Log the given record.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLogLevel",
					"const wxString&",
					"const wxLogRecordInfo&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"level",
					"msg",
					"info"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"RemoveTraceMask":[
			{
				"return_type":"void",
				"brief_description":"Remove the mask from the list of allowed masks for wxLogTrace().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mask"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Resume":[
			{
				"return_type":"void",
				"brief_description":"Resumes logging previously suspended by a call to Suspend().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetActiveTarget":[
			{
				"return_type":"wxLog*",
				"brief_description":"Sets the specified log target as the active one.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxLog*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"logtarget"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetComponentLevel":[
			{
				"return_type":"void",
				"brief_description":"Sets the log level for the given component.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxLogLevel"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"component",
					"level"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetLogLevel":[
			{
				"return_type":"void",
				"brief_description":"Specifies that log messages with level greater (numerically) than logLevel should be ignored and not sent to the active log target.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxLogLevel"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"logLevel"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRepetitionCounting":[
			{
				"return_type":"void",
				"brief_description":"Enables logging mode in which a log message is logged once, and in case exactly the same message successively repeats one or more times, only the number of repetitions is logged.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"repetCounting"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SetThreadActiveTarget":[
			{
				"return_type":"wxLog*",
				"brief_description":"Sets a thread-specific log target.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxLog*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"logger"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTimestamp":[
			{
				"return_type":"void",
				"brief_description":"Sets the timestamp format prepended by the default log targets to all messages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVerbose":[
			{
				"return_type":"void",
				"brief_description":"Activates or deactivates verbose mode in which the verbose messages are logged as the normal ones instead of being silently dropped.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"verbose"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"Suspend":[
			{
				"return_type":"void",
				"brief_description":"Suspends the logging until Resume() is called.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxLogBuffer":{
		"_implements":[
			"wxLog"
		],
		"Flush":[
			{
				"return_type":"void",
				"brief_description":"Shows all the messages collected so far to the user (using a message box in the GUI applications or by printing them out to the console in text mode) and clears the internal buffer.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetBuffer":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the current buffer contains.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxLogBuffer":[
			{
				"return_type":"",
				"brief_description":"The default ctor does nothing.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxLogChain":{
		"_implements":[
			"wxLog"
		],
		"DetachOldLog":[
			{
				"return_type":"void",
				"brief_description":"Detaches the old log target so it won't be destroyed when the wxLogChain object is destroyed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOldLog":[
			{
				"return_type":"wxLog*",
				"brief_description":"Returns the pointer to the previously active log target (which may be NULL).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPassingMessages":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the messages are passed to the previously active log target (default) or false if PassMessages() had been called.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PassMessages":[
			{
				"return_type":"void",
				"brief_description":"By default, the log messages are passed to the previously active log target.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"passMessages"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLog":[
			{
				"return_type":"void",
				"brief_description":"Sets another log target to use (may be NULL).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLog*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"logger"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxLogChain":[
			{
				"return_type":"",
				"brief_description":"Sets the specified logger (which may be NULL) as the default log target but the log messages are also passed to the previous log target if any.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLog*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"logger"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxLogGui":{
		"_implements":[
			"wxLog"
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Forgets all the currently stored messages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Flush":[
			{
				"return_type":"void",
				"brief_description":"Presents the accumulated log messages, if any, to the user.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSeverityIcon":[
			{
				"return_type":"int",
				"brief_description":"Returns wxICON_ERROR, wxICON_WARNING or wxICON_INFORMATION depending on the current maximal severity.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTitle":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the appropriate title for the dialog.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxLogGui":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxLogInterposer":{
		"_implements":[
			"wxLogChain"
		],
		"wxLogInterposer":[
			{
				"return_type":"",
				"brief_description":"The default constructor installs this object as the current active log target.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxLogWindow":{
		"_implements":[
			"wxLogInterposer"
		],
		"GetFrame":[
			{
				"return_type":"wxFrame*",
				"brief_description":"Returns the associated log frame window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnFrameClose":[
			{
				"return_type":"bool",
				"brief_description":"Called if the user closes the window interactively, will not be called if it is destroyed for another reason (such as when program exits).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFrame*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"frame"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnFrameDelete":[
			{
				"return_type":"void",
				"brief_description":"Called right before the log frame is going to be deleted: will always be called unlike OnFrameClose().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFrame*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"frame"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Show":[
			{
				"return_type":"void",
				"brief_description":"Shows or hides the frame.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"wxLogWindow":[
			{
				"return_type":"",
				"brief_description":"Creates the log frame window and starts collecting the messages in it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"const wxString&",
					"bool",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pParent",
					"szTitle",
					"show",
					"passToOld"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"true",
					"true"
				]
			}
		]
	},
	"wxLogTextCtrl":{
		"wxLogTextCtrl":[
			{
				"return_type":"",
				"brief_description":"Constructs a log target which sends all the log messages to the given text control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTextCtrl*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pTextCtrl"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"_implements":[
			"wxLog"
		]
	},
	"wxTextDataObject":{
		"GetFormat":[
			{
				"return_type":"const wxDataFormat&",
				"brief_description":"Returns the preferred format supported by this object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the text associated with the data object.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTextLength":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the data size.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFormatCount":[
			{
				"return_type":"size_t",
				"brief_description":"Returns 2 under wxMac and wxGTK, where text data coming from the clipboard may be provided as ANSI (wxDF_TEXT) or as Unicode text (wxDF_UNICODETEXT, but only when wxUSE_UNICODE==1).",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataObject::Direction"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dir"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxDataObject::Get"
				]
			}
		],
		"GetAllFormats":[
			{
				"return_type":"void",
				"brief_description":"Returns all the formats supported by wxTextDataObject.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDataFormat*",
					"wxDataObject::Direction"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"formats",
					"dir"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxDataObject::Get"
				]
			}
		],
		"SetText":[
			{
				"return_type":"void",
				"brief_description":"Sets the text associated with the data object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"strText"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxTextDataObject":[
			{
				"return_type":"",
				"brief_description":"Constructor, may be used to initialise the text (otherwise SetText() should be used later).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"text"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		],
		"_implements":[
			"wxDataObjectSimple"
		]
	},
	"wxFileDataObject":{
		"_implements":[
			"wxDataObjectSimple"
		],
		"AddFile":[
			{
				"return_type":"void",
				"brief_description":"Adds a file to the file list represented by this data object (Windows only).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"file"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFilenames":[
			{
				"return_type":"const wxArrayString&",
				"brief_description":"Returns the array of file names.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxFileDataObject":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxBitmapDataObject":{
		"GetBitmap":[
			{
				"return_type":"wxBitmap",
				"brief_description":"Returns the bitmap associated with the data object.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetBitmap":[
			{
				"return_type":"void",
				"brief_description":"Sets the bitmap associated with the data object.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxBitmapDataObject":[
			{
				"return_type":"",
				"brief_description":"Constructor, optionally passing a bitmap (otherwise use SetBitmap() later).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bitmap"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxNullBitmap"
				]
			}
		],
		"_implements":[
			"wxDataObjectSimple"
		]
	},
	"wxURLDataObject":{
		"_implements":[
			"wxTextDataObject"
		],
		"GetURL":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the URL stored by this object, as a string.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetURL":[
			{
				"return_type":"void",
				"brief_description":"Sets the URL stored by this object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"url"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxURLDataObject":[
			{
				"return_type":"",
				"brief_description":"Constructor, may be used to initialize the URL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"url"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString"
				]
			}
		]
	},
	"wxCustomDataObject":{
		"_implements":[
			"wxDataObjectSimple"
		],
		"Alloc":[
			{
				"return_type":"void*",
				"brief_description":"This function is called to allocate size bytes of memory from SetData().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Free":[
			{
				"return_type":"void",
				"brief_description":"This function is called when the data is freed, you may override it to anything you want (or may be nothing at all).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetData":[
			{
				"return_type":"void*",
				"brief_description":"Returns a pointer to the data.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"size_t",
				"brief_description":"Returns the data size in bytes.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetData":[
			{
				"return_type":"bool",
				"brief_description":"Set the data.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"const void*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"size",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"TakeData":[
			{
				"return_type":"void",
				"brief_description":"Like SetData(), but doesn't copy the data - instead the object takes ownership of the pointer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t",
					"void*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"size",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxCustomDataObject":[
			{
				"return_type":"",
				"brief_description":"The constructor accepts a format argument which specifies the (single) format supported by this object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxDataFormat&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"format"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxFormatInvalid"
				]
			}
		]
	},
	"wxTextDropTarget":{
		"wxTextDropTarget":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"OnDropText":[
			{
				"return_type":"bool",
				"brief_description":"Override this function to receive dropped text.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"data"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"OnDrop":[
			{
				"return_type":"bool",
				"brief_description":"See wxDropTarget::OnDrop().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxCoord",
					"wxCoord"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxDropTarget"
		]
	},
	"wxDisplay":{
		"ChangeMode":[
			{
				"return_type":"bool",
				"brief_description":"Changes the video mode of this display to the mode specified in the mode parameter.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVideoMode&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"mode"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxDefaultVideoMode"
				]
			}
		],
		"GetClientArea":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the client area of the display.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Returns the number of connected displays.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentMode":[
			{
				"return_type":"wxVideoMode",
				"brief_description":"Returns the current video mode that this display is in.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFromPoint":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the display on which the given point lies, or wxNOT_FOUND if the point is not on any connected display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFromWindow":[
			{
				"return_type":"int",
				"brief_description":"Returns the index of the display on which the given window lies.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetGeometry":[
			{
				"return_type":"wxRect",
				"brief_description":"Returns the bounding rectangle of the display whose index was passed to the constructor.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the display's name.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsPrimary":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the display is the primary display.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDisplay":[
			{
				"return_type":"",
				"brief_description":"Constructor, setting up a wxDisplay instance with the specified display.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		]
	},
	"wxDisplayChangedEvent":{
		"wxDisplayChangedEvent":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxCalculateLayoutEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetFlags":[
			{
				"return_type":"int",
				"brief_description":"Returns the flags associated with this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRect":[
			{
				"return_type":"wxRect",
				"brief_description":"Before the event handler is entered, returns the remaining parent client area that the window could occupy.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Sets the flags associated with this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRect":[
			{
				"return_type":"void",
				"brief_description":"Call this to specify the new remaining parent client area, after the space occupied by the window has been subtracted.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxCalculateLayoutEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		]
	},
	"wxContextMenuEvent":{
		"_implements":[
			"wxCommandEvent"
		],
		"GetPosition":[
			{
				"return_type":"const wxPoint&",
				"brief_description":"Returns the position in screen coordinates at which the menu should be shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetPosition":[
			{
				"return_type":"void",
				"brief_description":"Sets the position at which the menu should be shown.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"point"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxContextMenuEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"const wxPoint&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"id",
					"pos"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"wxDefaultPosition"
				]
			}
		]
	},
	"wxDropFilesEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetNumberOfFiles":[
			{
				"return_type":"int",
				"brief_description":"Returns the number of files dropped.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"Returns the position at which the files were dropped.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxDropFilesEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"wxString*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"id",
					"noFiles",
					"files"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0",
					"NULL"
				]
			}
		],
		"_platforms":[
			"wxmsw"
		]
	},
	"wxQueryLayoutInfoEvent":{
		"_implements":[
			"wxEvent"
		],
		"GetAlignment":[
			{
				"return_type":"wxLayoutAlignment",
				"brief_description":"Specifies the alignment of the window (which side of the remaining parent client area the window sticks to).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFlags":[
			{
				"return_type":"int",
				"brief_description":"Returns the flags associated with this event.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetOrientation":[
			{
				"return_type":"wxLayoutOrientation",
				"brief_description":"Returns the orientation that the event handler specified to the event object.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRequestedLength":[
			{
				"return_type":"int",
				"brief_description":"Returns the requested length of the window in the direction of the window orientation.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Returns the size that the event handler specified to the event object as being the requested size of the window.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetAlignment":[
			{
				"return_type":"void",
				"brief_description":"Call this to specify the alignment of the window (which side of the remaining parent client area the window sticks to).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLayoutAlignment"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"alignment"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Sets the flags associated with this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOrientation":[
			{
				"return_type":"void",
				"brief_description":"Call this to specify the orientation of the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxLayoutOrientation"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orientation"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetRequestedLength":[
			{
				"return_type":"void",
				"brief_description":"Sets the requested length of the window in the direction of the window orientation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"length"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSize":[
			{
				"return_type":"void",
				"brief_description":"Call this to let the calling code know what the size of the window is.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxQueryLayoutInfoEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindowID"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0"
				]
			}
		]
	},
	"wxToolbook":{
		"_implements":[
			"wxBookCtrlBase"
		],
		"wxToolbook":[
			{
				"return_type":"",
				"brief_description":"Constructs a choicebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a choicebook control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxEmptyString"
				]
			}
		],
		"GetToolBar":[
			{
				"return_type":"wxToolBar*",
				"brief_description":"Returns the wxToolBarBase associated with the control.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxVideoMode":{
		"_struct":true,
		"wxVideoMode":[
			{
				"return_type":"",
				"brief_description":"Constructs this class using the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"width",
					"height",
					"depth",
					"freq"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"0",
					"0",
					"0",
					"0"
				]
			}
		],
		"Matches":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if this mode matches the other one in the sense that all non zero fields of the other mode have the same value in this one (except for refresh which is allowed to have a greater value).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxVideoMode&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"other"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the object has been initialized.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetWidth":[
			{
				"return_type":"int",
				"brief_description":"Returns the screen width in pixels (e.g. 640), 0 means unspecified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHeight":[
			{
				"return_type":"int",
				"brief_description":"Returns the screen height in pixels (e.g. 480), 0 means unspecified.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDepth":[
			{
				"return_type":"int",
				"brief_description":"Returns bits per pixel (e.g. 32), 1 is monochrome and 0 means unspecified\/known.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxRibbonControl":{
		"_implements":[
			"wxControl"
		],
		"DoGetNextLargerSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Implementation of GetNextLargerSize().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxOrientation",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"direction",
					"relative_to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DoGetNextSmallerSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Implementation of GetNextSmallerSize().",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"wxOrientation",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"direction",
					"relative_to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetArtProvider":[
			{
				"return_type":"wxRibbonArtProvider*",
				"brief_description":"Get the art provider to be used.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNextLargerSize":[
			{
				"return_type":"wxSize",
				"brief_description":"If sizing is not continuous, then return a suitable size for the control which is larger than the current size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOrientation"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"If sizing is not continuous, then return a suitable size for the control which is larger than the given size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOrientation",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"direction",
					"relative_to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetNextSmallerSize":[
			{
				"return_type":"wxSize",
				"brief_description":"If sizing is not continuous, then return a suitable size for the control which is smaller than the current size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOrientation"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"direction"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"wxSize",
				"brief_description":"If sizing is not continuous, then return a suitable size for the control which is smaller than the given size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxOrientation",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"direction",
					"relative_to"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"IsSizingContinuous":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Realise":[
			{
				"return_type":"bool",
				"brief_description":"Alias for Realize().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Realize":[
			{
				"return_type":"bool",
				"brief_description":"Perform initial size and layout calculations after children have been added, and\/or realize children.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetArtProvider":[
			{
				"return_type":"void",
				"brief_description":"Set the art provider to be used.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"art"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxRibbonControl":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxDefaultValidator",
					"wxControlNameStr"
				]
			}
		]
	},
	"wxRibbonBar":{
		"_implements":[
			"wxRibbonControl"
		],
		"ArePanelsShown":[
			{
				"return_type":"bool",
				"brief_description":"Indicates whether the panel area of the ribbon bar is shown.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create a ribbon bar in two-step ribbon bar construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxRIBBON_BAR_DEFAULT_STYLE"
				]
			}
		],
		"DismissExpandedPanel":[
			{
				"return_type":"bool",
				"brief_description":"Dismiss the expanded panel of the currently active page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetActivePage":[
			{
				"return_type":"int",
				"brief_description":"Get the index of the active page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPage":[
			{
				"return_type":"wxRibbonPage*",
				"brief_description":"Get a page by index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HidePanels":[
			{
				"return_type":"void",
				"brief_description":"Hides the panel area of the ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Realize":[
			{
				"return_type":"bool",
				"brief_description":"Perform initial layout and size calculations of the bar and its children.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetActivePage":[
			{
				"return_type":"bool",
				"brief_description":"Set the active page by index, without triggering any events.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"size_t"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Set the active page, without triggering any events.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetArtProvider":[
			{
				"return_type":"void",
				"brief_description":"Set the art provider to be used be the ribbon bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"art"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTabCtrlMargins":[
			{
				"return_type":"void",
				"brief_description":"Set the margin widths (in pixels) on the left and right sides of the tab bar region of the ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"left",
					"right"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"ShowPanels":[
			{
				"return_type":"void",
				"brief_description":"Shows or hides the panel area of the ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"show"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"wxRibbonBar":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a ribbon bar with the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxRIBBON_BAR_DEFAULT_STYLE"
				]
			}
		]
	},
	"wxRibbonBarEvent":{
		"_implements":[
			"wxNotifyEvent"
		],
		"GetPage":[
			{
				"return_type":"wxRibbonPage*",
				"brief_description":"Returns the page being changed to, or being clicked on.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetPage":[
			{
				"return_type":"void",
				"brief_description":"Sets the page relating to this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonPage*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"page"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxRibbonBarEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"wxRibbonPage*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"command_type",
					"win_id",
					"page"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"NULL"
				]
			}
		]
	},
	"wxRibbonButtonBar":{
		"_implements":[
			"wxRibbonControl"
		],
		"AddDropdownButton":[
			{
				"return_type":"wxRibbonButtonBarButtonBase*",
				"brief_description":"Add a dropdown button to the button bar (simple version).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"button_id",
					"label",
					"bitmap",
					"help_string"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"AddHybridButton":[
			{
				"return_type":"wxRibbonButtonBarButtonBase*",
				"brief_description":"Add a hybrid button to the button bar (simple version).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"button_id",
					"label",
					"bitmap",
					"help_string"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"AddToggleButton":[
			{
				"return_type":"wxRibbonButtonBarButtonBase*",
				"brief_description":"Add a toggle button to the button bar (simple version).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"button_id",
					"label",
					"bitmap",
					"help_string"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"ClearButtons":[
			{
				"return_type":"void",
				"brief_description":"Delete all buttons from the button bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create a button bar in two-step button bar construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0"
				]
			}
		],
		"DeleteButton":[
			{
				"return_type":"bool",
				"brief_description":"Delete a single button from the button bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"button_id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"EnableButton":[
			{
				"return_type":"void",
				"brief_description":"Enable or disable a single button on the bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"button_id",
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"true"
				]
			}
		],
		"Realize":[
			{
				"return_type":"bool",
				"brief_description":"Calculate button layouts and positions.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ToggleButton":[
			{
				"return_type":"void",
				"brief_description":"Set a toggle button to the checked or unchecked state.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"button_id",
					"checked"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"wxRibbonButtonBar":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a ribbon button bar with the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0"
				]
			}
		],
		"AddButton":[
			{
				"return_type":"wxRibbonButtonBarButtonBase*",
				"brief_description":"Add a button to the button bar (simple version).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxString&",
					"wxRibbonButtonKind"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"button_id",
					"label",
					"bitmap",
					"help_string",
					"kind"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"wxRIBBON_BUTTON_NORMAL"
				]
			},
			{
				"return_type":"wxRibbonButtonBarButtonBase*",
				"brief_description":"Add a button to the button bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&",
					"const wxBitmap&",
					"const wxBitmap&",
					"wxRibbonButtonKind",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"button_id",
					"label",
					"bitmap",
					"bitmap_small",
					"bitmap_disabled",
					"bitmap_small_disabled",
					"kind",
					"help_string"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxNullBitmap",
					"wxNullBitmap",
					"wxNullBitmap",
					"wxRIBBON_BUTTON_NORMAL",
					"wxEmptyString"
				]
			}
		]
	},
	"wxRibbonButtonBarEvent":{
		"_implements":[
			"wxCommandEvent"
		],
		"wxRibbonButtonBarEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"wxRibbonButtonBar*",
					"wxRibbonButtonBarButtonBase*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"command_type",
					"win_id",
					"bar",
					"button"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"NULL",
					"NULL"
				]
			}
		],
		"GetBar":[
			{
				"return_type":"wxRibbonButtonBar*",
				"brief_description":"Returns the bar which contains the button which the event relates to.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PopupMenu":[
			{
				"return_type":"bool",
				"brief_description":"Display a popup menu as a result of this (dropdown clicked) event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetBar":[
			{
				"return_type":"void",
				"brief_description":"Sets the button bar relating to this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonButtonBar*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxRibbonArtProvider":{
		"Clone":[
			{
				"return_type":"wxRibbonArtProvider*",
				"brief_description":"Create a new art provider which is a clone of this one.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DrawButtonBarBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background for a wxRibbonButtonBar control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawGalleryBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background and chrome for a wxRibbonGallery control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxRibbonGallery*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawGalleryItemBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background of a single item in a wxRibbonGallery control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxRibbonGallery*",
					"const wxRect&",
					"wxRibbonGalleryItem*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"item"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawMinimisedPanel":[
			{
				"return_type":"void",
				"brief_description":"Draw a minimised ribbon panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxRibbonPanel*",
					"const wxRect&",
					"wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"bitmap"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawPageBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background of a ribbon page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawPanelBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background and chrome for a ribbon panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxRibbonPanel*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawScrollButton":[
			{
				"return_type":"void",
				"brief_description":"Draw a ribbon-style scroll button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawTab":[
			{
				"return_type":"void",
				"brief_description":"Draw a single tab in the tab region of a ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRibbonPageTabInfo&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"tab"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawTabCtrlBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background of the tab region of a ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawTabSeparator":[
			{
				"return_type":"void",
				"brief_description":"Draw a separator between two tabs in a ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"double"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"visibility"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawTool":[
			{
				"return_type":"void",
				"brief_description":"Draw a single tool (for a wxRibbonToolBar control).",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"const wxBitmap&",
					"wxRibbonButtonKind",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"bitmap",
					"kind",
					"state"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"DrawToolBarBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background for a wxRibbonToolBar control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"DrawToolGroupBackground":[
			{
				"return_type":"void",
				"brief_description":"Draw the background for a group of tools on a wxRibbonToolBar control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetBarTabWidth":[
			{
				"return_type":"void",
				"brief_description":"Calculate the ideal and minimum width (in pixels) of a tab in a ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxString&",
					"const wxBitmap&",
					"int*",
					"int*",
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"label",
					"bitmap",
					"ideal",
					"small_begin_need_separator",
					"small_must_have_separator",
					"minimum"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"GetColor":[
			{
				"return_type":"wxColour",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Get the value of a certain colour setting.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetColourScheme":[
			{
				"return_type":"void",
				"brief_description":"Get the current colour scheme.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxColour*",
					"wxColour*",
					"wxColour*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"primary",
					"secondary",
					"tertiary"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetFlags":[
			{
				"return_type":"long",
				"brief_description":"Get the previously set style flags.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Get the value of a certain font setting.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetGalleryClientSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculate the client size of a wxRibbonGallery control for a given size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRibbonGallery*",
					"wxSize",
					"wxPoint*",
					"wxRect*",
					"wxRect*",
					"wxRect*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"size",
					"client_offset",
					"scroll_up_button",
					"scroll_down_button",
					"extension_button"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"GetGallerySize":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculate the size of a wxRibbonGallery control for a given client size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRibbonGallery*",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"client_size"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetMetric":[
			{
				"return_type":"int",
				"brief_description":"Get the value of a certain integer setting.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"id"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMinimisedPanelMinimumSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculate the size of a minimised ribbon panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRibbonPanel*",
					"wxSize*",
					"wxDirection*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"desired_bitmap_size",
					"expanded_panel_direction"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetPageBackgroundRedrawArea":[
			{
				"return_type":"wxRect",
				"brief_description":"Calculate the portion of a page background which needs to be redrawn when a page is resized.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRibbonPage*",
					"wxSize",
					"wxSize"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"page_old_size",
					"page_new_size"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetPanelClientSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculate the client size of a panel for a given overall size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRibbonPanel*",
					"wxSize",
					"wxPoint*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"size",
					"client_offset"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetPanelSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculate the size of a panel for a given client size.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"const wxRibbonPanel*",
					"wxSize",
					"wxPoint*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"client_size",
					"client_offset"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"GetScrollButtonMinimumSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculate the minimum size (in pixels) of a scroll button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"style"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetTabCtrlHeight":[
			{
				"return_type":"int",
				"brief_description":"Calculate the height (in pixels) of the tab region of a ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRibbonPageTabInfoArray&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"pages"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"GetToolSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Calculate the size of a tool within a wxRibbonToolBar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"wxSize",
					"wxRibbonButtonKind",
					"bool",
					"bool",
					"wxRect*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"bitmap_size",
					"kind",
					"is_first",
					"is_last",
					"dropdown_region"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"SetColor":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"color"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColour":[
			{
				"return_type":"void",
				"brief_description":"Set the value of a certain colour setting to the value colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxColor&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"colour"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetColourScheme":[
			{
				"return_type":"void",
				"brief_description":"Set all applicable colour settings from a few base colours.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxColour&",
					"const wxColour&",
					"const wxColour&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"primary",
					"secondary",
					"tertiary"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"Set the style flags.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"long"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetFont":[
			{
				"return_type":"void",
				"brief_description":"Set the value of a certain font setting to the value font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxFont&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"font"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetMetric":[
			{
				"return_type":"void",
				"brief_description":"Set the value of a certain integer setting to the value new_val.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"id",
					"new_val"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DrawButtonBarButton":[
			{
				"return_type":"void",
				"brief_description":"Draw a single button for a wxRibbonButtonBar control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"const wxRect&",
					"wxRibbonButtonKind",
					"long",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"rect",
					"kind",
					"state",
					"label",
					"bitmap_large",
					"bitmap_small"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		],
		"GetButtonBarButtonSize":[
			{
				"return_type":"bool",
				"brief_description":"Calculate the size of a button within a wxRibbonButtonBar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&",
					"wxWindow*",
					"wxRibbonButtonKind",
					"wxRibbonButtonBarButtonState",
					"const wxString&",
					"wxSize",
					"wxSize",
					"wxSize*",
					"wxRect*",
					"wxRect*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"dc",
					"wnd",
					"kind",
					"size",
					"label",
					"bitmap_size_large",
					"bitmap_size_small",
					"button_size",
					"normal_region",
					"dropdown_region"
				],
				"parameters_required":[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxRibbonGallery":{
		"_implements":[
			"wxRibbonControl"
		],
		"Append":[
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Add an item to the gallery (with no client data).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"id"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Add an item to the gallery (with simple client data).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"int",
					"void*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"id",
					"clientData"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			},
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Add an item to the gallery (with complex client data)",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&",
					"int",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"bitmap",
					"id",
					"clientData"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		],
		"Clear":[
			{
				"return_type":"void",
				"brief_description":"Remove all items from the gallery.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create a gallery in two-step gallery construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0"
				]
			}
		],
		"EnsureVisible":[
			{
				"return_type":"void",
				"brief_description":"Scroll the gallery to ensure that the given item is visible.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRibbonGalleryItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetActiveItem":[
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Get the currently active item, or NULL if there is none.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCount":[
			{
				"return_type":"unsigned int",
				"brief_description":"Get the number of items in the gallery.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDownButtonState":[
			{
				"return_type":"wxRibbonGalleryButtonState",
				"brief_description":"Get the state of the scroll down button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExtensionButtonState":[
			{
				"return_type":"wxRibbonGalleryButtonState",
				"brief_description":"Get the state of the \"extension\" button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHoveredItem":[
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Get the currently hovered item, or NULL if there is none.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetItem":[
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Get an item by index.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"unsigned int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"n"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemClientData":[
			{
				"return_type":"void*",
				"brief_description":"Get the client data associated with a gallery item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRibbonGalleryItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetItemClientObject":[
			{
				"return_type":"wxClientData*",
				"brief_description":"Get the client object associated with a gallery item.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRibbonGalleryItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetSelection":[
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Get the currently selected item, or NULL if there is none.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUpButtonState":[
			{
				"return_type":"wxRibbonGalleryButtonState",
				"brief_description":"Get the state of the scroll up button.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEmpty":[
			{
				"return_type":"bool",
				"brief_description":"Query if the gallery has no items in it.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsHovered":[
			{
				"return_type":"bool",
				"brief_description":"Query is the mouse is currently hovered over the gallery.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ScrollLines":[
			{
				"return_type":"bool",
				"brief_description":"Scroll the gallery contents by some amount.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lines"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ScrollPixels":[
			{
				"return_type":"bool",
				"brief_description":"Scroll the gallery contents by some fine-grained amount.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixels"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetItemClientData":[
			{
				"return_type":"void",
				"brief_description":"Set the client data associated with a gallery item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonGalleryItem*",
					"void*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetItemClientObject":[
			{
				"return_type":"void",
				"brief_description":"Set the client object associated with a gallery item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonGalleryItem*",
					"wxClientData*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"item",
					"data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetSelection":[
			{
				"return_type":"void",
				"brief_description":"Set the selection to the given item, or removes the selection if item == NULL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonGalleryItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxRibbonGallery":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a ribbon gallery with the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0"
				]
			}
		]
	},
	"wxRibbonGalleryEvent":{
		"GetGallery":[
			{
				"return_type":"wxRibbonGallery*",
				"brief_description":"Returns the gallery which the event relates to.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"_implements":[
			"wxCommandEvent"
		],
		"GetGalleryItem":[
			{
				"return_type":"wxRibbonGalleryItem*",
				"brief_description":"Returns the gallery item which the event relates to, or NULL if it does not relate to an item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetGallery":[
			{
				"return_type":"void",
				"brief_description":"Sets the gallery relating to this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonGallery*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"gallery"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetGalleryItem":[
			{
				"return_type":"void",
				"brief_description":"Sets the gallery item relating to this event.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonGalleryItem*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxRibbonGalleryEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"wxRibbonGallery*",
					"wxRibbonGalleryItem*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"command_type",
					"win_id",
					"gallery",
					"item"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0",
					"NULL",
					"NULL"
				]
			}
		]
	},
	"wxRibbonPage":{
		"AdjustRectToIncludeScrollButtons":[
			{
				"return_type":"void",
				"brief_description":"Expand a rectangle of the page to include external scroll buttons (if any).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRect*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create a ribbon page in two-step ribbon page construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonBar*",
					"wxWindowID",
					"const wxString&",
					"const wxBitmap&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"icon",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxNullBitmap",
					"0"
				]
			}
		],
		"DismissExpandedPanel":[
			{
				"return_type":"bool",
				"brief_description":"Dismiss the current externally expanded panel, if there is one.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetIcon":[
			{
				"return_type":"wxBitmap&",
				"brief_description":"Get the icon used for the page in the ribbon bar tab area (only displayed if the ribbon bar is actually showing icons).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMajorAxis":[
			{
				"return_type":"wxOrientation",
				"brief_description":"Get the direction in which ribbon panels are stacked within the page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Realize":[
			{
				"return_type":"bool",
				"brief_description":"Perform a full re-layout of all panels on the page.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ScrollLines":[
			{
				"return_type":"bool",
				"brief_description":"Scroll the page by some amount up \/ down \/ left \/ right.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"lines"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ScrollPixels":[
			{
				"return_type":"bool",
				"brief_description":"Scroll the page by a set number of pixels up \/ down \/ left \/ right.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pixels"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetArtProvider":[
			{
				"return_type":"void",
				"brief_description":"Set the art provider to be used.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"art"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetSizeWithScrollButtonAdjustment":[
			{
				"return_type":"void",
				"brief_description":"Set the size of the page and the external scroll buttons (if any).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"width",
					"height"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"wxRibbonPage":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a ribbon page, which must be a child of a ribbon bar.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonBar*",
					"wxWindowID",
					"const wxString&",
					"const wxBitmap&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"icon",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxNullBitmap",
					"0"
				]
			}
		],
		"_implements":[
			"wxRibbonControl"
		]
	},
	"wxRibbonPanel":{
		"_implements":[
			"wxRibbonControl"
		],
		"CanAutoMinimise":[
			{
				"return_type":"bool",
				"brief_description":"Query if the panel can automatically minimise itself at small sizes.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create a ribbon panel in two-step ribbon panel construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"icon",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxNullBitmap",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxRIBBON_PANEL_DEFAULT_STYLE"
				]
			}
		],
		"GetExpandedDummy":[
			{
				"return_type":"wxRibbonPanel*",
				"brief_description":"Get the dummy panel of an expanded panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetExpandedPanel":[
			{
				"return_type":"wxRibbonPanel*",
				"brief_description":"Get the expanded panel of a dummy panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetMinimisedIcon":[
			{
				"return_type":"wxBitmap&",
				"brief_description":"Get the bitmap to be used in place of the panel children when it is minimised.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"const wxBitmap&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HideExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Hide the panel's external expansion.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsHovered":[
			{
				"return_type":"bool",
				"brief_description":"Query is the mouse is currently hovered over the panel.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsMinimised":[
			{
				"return_type":"bool",
				"brief_description":"Query if the panel is currently minimised.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"bool",
				"brief_description":"Query if the panel would be minimised at a given size.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSize"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"at_size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Realize":[
			{
				"return_type":"bool",
				"brief_description":"Realize all children of the panel.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetArtProvider":[
			{
				"return_type":"void",
				"brief_description":"Set the art provider to be used.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxRibbonArtProvider*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"art"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowExpanded":[
			{
				"return_type":"bool",
				"brief_description":"Show the panel externally expanded.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxRibbonPanel":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructs a ribbon panel.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxBitmap&",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"label",
					"minimised_icon",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxEmptyString",
					"wxNullBitmap",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxRIBBON_PANEL_DEFAULT_STYLE"
				]
			}
		]
	},
	"wxRibbonToolBar":{
		"_implements":[
			"wxRibbonControl"
		],
		"AddDropdownTool":[
			{
				"return_type":"wxRibbonToolBarToolBase*",
				"brief_description":"Add a dropdown tool to the tool bar (simple version).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"bitmap",
					"help_string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"AddHybridTool":[
			{
				"return_type":"wxRibbonToolBarToolBase*",
				"brief_description":"Add a hybrid tool to the tool bar (simple version).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"bitmap",
					"help_string"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString"
				]
			}
		],
		"AddSeparator":[
			{
				"return_type":"wxRibbonToolBarToolBase*",
				"brief_description":"Add a separator to the tool bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"AddTool":[
			{
				"return_type":"wxRibbonToolBarToolBase*",
				"brief_description":"Add a tool to the tool bar (simple version).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&",
					"const wxString&",
					"wxRibbonButtonKind"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"bitmap",
					"help_string",
					"kind"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					"wxRIBBON_BUTTON_NORMAL"
				]
			},
			{
				"return_type":"wxRibbonToolBarToolBase*",
				"brief_description":"Add a tool to the tool bar.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxBitmap&",
					"const wxBitmap&",
					"const wxString&",
					"wxRibbonButtonKind",
					"wxObject*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"tool_id",
					"bitmap",
					"bitmap_disabled",
					"help_string",
					"kind",
					"client_data"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxNullBitmap",
					"wxEmptyString",
					"wxRIBBON_BUTTON_NORMAL",
					"NULL"
				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Create a tool bar in two-step tool bar construction.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0"
				]
			}
		],
		"SetRows":[
			{
				"return_type":"void",
				"brief_description":"Set the number of rows to distribute tool groups over.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"nMin",
					"nMax"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1"
				]
			}
		],
		"wxRibbonToolBar":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Construct a ribbon tool bar with the given parameters.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxID_ANY",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0"
				]
			}
		]
	},
	"wxTaskBarIcon":{
		"_implements":[
			"wxEvtHandler"
		],
		"CreatePopupMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"This method is called by the library when the user requests popup menu (on Windows and Unix platforms, this is when the user right-clicks the icon).",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Destroy":[
			{
				"return_type":"void",
				"brief_description":"This method is similar to wxWindow::Destroy and can be used to schedule the task bar icon object for the delayed destruction: it will be deleted during the next event loop iteration, which allows the task bar icon to process any pending events for it before being destroyed.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAvailable":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if system tray is available in the desktop environment the app runs under.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsIconInstalled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if SetIcon() was called with no subsequent RemoveIcon().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsOk":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the object initialized successfully.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"PopupMenu":[
			{
				"return_type":"bool",
				"brief_description":"Pops up a menu at the current mouse position.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RemoveIcon":[
			{
				"return_type":"bool",
				"brief_description":"Removes the icon previously set with SetIcon().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetIcon":[
			{
				"return_type":"bool",
				"brief_description":"Sets the icon, and optional tooltip text.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxIcon&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"icon",
					"tooltip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString"
				]
			}
		],
		"wxTaskBarIcon":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTaskBarIconType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"iconType"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxTBI_DEFAULT_TYPE"
				]
			}
		]
	},
	"wxTaskBarIconEvent":{
		"wxTaskBarIconEvent":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"wxTaskBarIcon*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"evtType",
					"tbIcon"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxEvent"
		]
	},
	"wxTimerRunner":{
		"Start":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"milli",
					"oneShot"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"false"
				]
			}
		],
		"wxTimerRunner":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTimer&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"timer"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxTimer&",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"timer",
					"milli",
					"oneShot"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"false"
				]
			}
		]
	},
	"wxNotificationMessage":{
		"_implements":[
			"wxEvtHandler"
		],
		"Close":[
			{
				"return_type":"bool",
				"brief_description":"Hides the notification.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetFlags":[
			{
				"return_type":"void",
				"brief_description":"This parameter can be currently used to specify the icon to show in the notification.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetMessage":[
			{
				"return_type":"void",
				"brief_description":"Set the main text of the notification.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"message"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetParent":[
			{
				"return_type":"void",
				"brief_description":"Set the parent for this notification: the notification will be associated with the top level parent of this window or, if this method is not called, with the main application window by default.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"parent"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTitle":[
			{
				"return_type":"void",
				"brief_description":"Set the title, it must be a concise string (not more than 64 characters), use SetMessage() to give the user more details.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"title"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Show":[
			{
				"return_type":"bool",
				"brief_description":"Show the notification to the user and hides it after timeout seconds are elapsed.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"timeout"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"Timeout_Auto"
				]
			}
		],
		"wxNotificationMessage":[
			{
				"return_type":"",
				"brief_description":"Default constructor, use SetParent(), SetTitle() and SetMessage() to initialize the object before showing it.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Create a notification object with the given attributes.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"title",
					"message",
					"parent",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString",
					"NULL",
					"wxICON_INFORMATION"
				]
			}
		]
	},
	"wxSystemOptions":{
		"GetOption":[
			{
				"return_type":"wxString",
				"brief_description":"Gets an option.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetOptionInt":[
			{
				"return_type":"int",
				"brief_description":"Gets an option as an integer.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"HasOption":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the given option is present.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsFalse":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the option with the given name had been set to 0 value.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetOption":[
			{
				"return_type":"void",
				"brief_description":"Sets an option.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Sets an option.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"name",
					"value"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		]
	},
	"wxSystemSettings":{
		"GetColour":[
			{
				"return_type":"wxColour",
				"brief_description":"Returns a system colour.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxSystemColour"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFont":[
			{
				"return_type":"wxFont",
				"brief_description":"Returns a system font.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxSystemFont"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetMetric":[
			{
				"return_type":"int",
				"brief_description":"Returns the value of a system metric, or -1 if the metric is not supported on the current system.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxSystemMetric",
					"wxWindow*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"index",
					"win"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"NULL"
				]
			}
		],
		"GetScreenType":[
			{
				"return_type":"wxSystemScreenType",
				"brief_description":"Returns the screen type.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFeature":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the port has certain feature.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxSystemFeature"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"index"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxWindowDisabler":{
		"wxWindowDisabler":[
			{
				"return_type":"",
				"brief_description":"Disables all top level windows of the applications.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"disable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			},
			{
				"return_type":"",
				"brief_description":"Disables all top level windows of the applications with the exception of winToSkip if it is not NULL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"winToSkip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxGenericProgressDialog":{
		"_implements":[
			"wxDialog"
		],
		"GetMessage":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the last message passed to the Update() function; if you always passed wxEmptyString to Update() then the message set through the constructor is returned.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetRange":[
			{
				"return_type":"int",
				"brief_description":"Returns the maximum value of the progress meter, as passed to the constructor or wxNOT_FOUND if the dialog has no progress bar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetValue":[
			{
				"return_type":"int",
				"brief_description":"Returns the last value passed to the Update() function or wxNOT_FOUND if the dialog has no progress bar.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Resume":[
			{
				"return_type":"void",
				"brief_description":"Can be used to continue with the dialog, after the user had clicked the \"Abort\" button.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Pulse":[
			{
				"return_type":"bool",
				"brief_description":"Like Update() but makes the gauge control run in indeterminate mode.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"bool*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"newmsg",
					"skip"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEmptyString",
					"NULL"
				]
			}
		],
		"SetRange":[
			{
				"return_type":"void",
				"brief_description":"Changes the maximum value of the progress meter given in the constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"maximum"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Update":[
			{
				"return_type":"bool",
				"brief_description":"Updates the dialog, setting the progress bar to the new value and updating the message if new one is specified.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"const wxString&",
					"bool*"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"value",
					"newmsg",
					"skip"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxEmptyString",
					"NULL"
				]
			}
		],
		"WasCancelled":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the \"Cancel\" button was pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"WasSkipped":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the \"Skip\" button was pressed.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxGenericProgressDialog":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&",
					"int",
					"wxWindow*",
					"int"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"title",
					"message",
					"maximum",
					"parent",
					"style"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"100",
					"NULL",
					"wxPD_AUTO_HIDE|wxPD_APP_MODAL"
				]
			}
		]
	},
	"wxToolBarToolBase":{
		"_implements":[
			"wxObject"
		],
		"Attach":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolBarBase*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"tbar"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Detach":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanBeToggled":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Enable":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetClientData":[
			{
				"return_type":"wxObject*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetControl":[
			{
				"return_type":"wxControl*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDisabledBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetDropdownMenu":[
			{
				"return_type":"wxMenu*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetId":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetKind":[
			{
				"return_type":"wxItemKind",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLabel":[
			{
				"return_type":"const wxString&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetLongHelp":[
			{
				"return_type":"const wxString&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetNormalBitmap":[
			{
				"return_type":"const wxBitmap&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetShortHelp":[
			{
				"return_type":"const wxString&",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetStyle":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetToolBar":[
			{
				"return_type":"wxToolBarBase*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsButton":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsControl":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsEnabled":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsSeparator":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsStretchable":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsStretchableSpace":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsToggled":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"MakeStretchable":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDropdownMenu":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMenu*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"menu"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLabel":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"label"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetLongHelp":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"help"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetNormalBitmap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetShortHelp":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"help"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetToggle":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toggle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Toggle":[
			{
				"return_type":"bool",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"toggle"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetDisabledBitmap":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxBitmap&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"bmp"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetClientData":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxObject*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"clientData"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"wxToolBarToolBase":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolBarBase*",
					"int",
					"const wxString&",
					"const wxBitmap&",
					"const wxBitmap&",
					"wxItemKind",
					"wxObject*",
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"tbar",
					"toolid",
					"label",
					"bmpNormal",
					"bmpDisabled",
					"kind",
					"clientData",
					"shortHelpString",
					"longHelpString"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"NULL",
					"wxID_SEPARATOR",
					"wxEmptyString",
					"wxNullBitmap",
					"wxNullBitmap",
					"wxITEM_NORMAL",
					"NULL",
					"wxEmptyString",
					"wxEmptyString"
				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxToolBarBase*",
					"wxControl*",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false
				],
				"parameters_name":[
					"tbar",
					"control",
					"label"
				],
				"parameters_required":[
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null
				]
			}
		]
	},
	"wxWebViewHistoryItem":{
		"wxWebViewHistoryItem":[
			{
				"return_type":"",
				"brief_description":"Construtor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"url",
					"title"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetUrl":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTitle":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxWebViewHandler":{
		"wxWebViewHandler":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"scheme"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetName":[
			{
				"return_type":"wxString",
				"brief_description":"",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetFile":[
			{
				"return_type":"wxFSFile*",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"uri"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxWebViewEvent":{
		"_implements":[
			"wxNotifyEvent"
		],
		"GetTarget":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the name of the target frame which the url of this event has been or will be loaded into.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetURL":[
			{
				"return_type":"const wxString&",
				"brief_description":"Get the URL being visited.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxWebViewEvent":[
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int",
					"const wxString",
					"const wxString"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"type",
					"id",
					"href",
					"target"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		]
	},
	"wxWebViewArchiveHandler":{
		"_implements":[
			"wxWebViewHandler"
		],
		"wxWebViewArchiveHandler":[
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"scheme"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFile":[
			{
				"return_type":"wxFSFile*",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"uri"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		]
	},
	"wxWebView":{
		"_implements":[
			"wxControl"
		],
		"New":[
			{
				"return_type":"wxWebView*",
				"brief_description":"Factory function to create a new wxWebView with two-step creation, wxWebView::Create should be called on the returned object.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"backend"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxWebViewBackendDefault"
				]
			},
			{
				"return_type":"wxWebView*",
				"brief_description":"Factory function to create a new wxWebView using a wxWebViewFactory.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"const wxString&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"url",
					"pos",
					"size",
					"backend",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxWebViewDefaultURLStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxWebViewBackendDefault",
					"0",
					"wxWebViewNameStr"
				]
			}
		],
		"CanCopy":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the current selection can be copied.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanCut":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the current selection can be cut.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanGoBack":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if it is possible to navigate backward in the history of visited pages.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanGoForward":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if it is possible to navigate forward in the history of visited pages.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanPaste":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if data can be pasted.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanRedo":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is an action to redo.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CanSetZoomType":[
			{
				"return_type":"bool",
				"brief_description":"Retrieve whether the current HTML engine supports a zoom type.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWebViewZoomType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"type"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"CanUndo":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is an action to undo.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearHistory":[
			{
				"return_type":"void",
				"brief_description":"Clear the history, this will also remove the visible page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"ClearSelection":[
			{
				"return_type":"void",
				"brief_description":"Clears the current selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Copy":[
			{
				"return_type":"void",
				"brief_description":"Copies the current selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creation function for two-step creation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"url",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxWebViewDefaultURLStr",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxWebViewNameStr"
				]
			}
		],
		"Cut":[
			{
				"return_type":"void",
				"brief_description":"Cuts the current selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"DeleteSelection":[
			{
				"return_type":"void",
				"brief_description":"Deletes the current selection.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnableHistory":[
			{
				"return_type":"void",
				"brief_description":"Enable or disable the history.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"GetBackwardHistory":[
			{
				"return_type":"wxVector< wxSharedPtr< wxWebViewHistoryItem > >",
				"brief_description":"Returns a list of items in the back history.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Undo":[
			{
				"return_type":"void",
				"brief_description":"Undos the last action.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Stop":[
			{
				"return_type":"void",
				"brief_description":"Stop the current page loading process, if any.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetZoomType":[
			{
				"return_type":"void",
				"brief_description":"Set how to interpret the zoom factor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWebViewZoomType"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"zoomType"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetZoom":[
			{
				"return_type":"void",
				"brief_description":"Set the zoom factor of the page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWebViewZoom"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"zoom"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetPage":[
			{
				"return_type":"void",
				"brief_description":"Set the displayed page source to the contents of the given stream.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxInputStream&",
					"wxString"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"html",
					"baseUrl"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Set the displayed page source to the contents of the given string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"html",
					"baseUrl"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetEditable":[
			{
				"return_type":"void",
				"brief_description":"Set the editable property of the web control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"enable"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"true"
				]
			}
		],
		"SelectAll":[
			{
				"return_type":"void",
				"brief_description":"Selects the entire page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"RunScript":[
			{
				"return_type":"void",
				"brief_description":"Runs the given javascript code.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"javascript"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"RegisterHandler":[
			{
				"return_type":"void",
				"brief_description":"Registers a custom scheme handler.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSharedPtr< wxWebViewHandler >"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"handler"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Redo":[
			{
				"return_type":"void",
				"brief_description":"Redos the last action.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Reload":[
			{
				"return_type":"void",
				"brief_description":"Reload the currently displayed URL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWebViewReloadFlags"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxWEBVIEW_RELOAD_DEFAULT"
				]
			}
		],
		"Print":[
			{
				"return_type":"void",
				"brief_description":"Opens a print dialog so that the user may print the currently displayed page.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Paste":[
			{
				"return_type":"void",
				"brief_description":"Pastes the current data.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadURL":[
			{
				"return_type":"void",
				"brief_description":"Load a web page from a URL.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"url"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadHistoryItem":[
			{
				"return_type":"void",
				"brief_description":"Loads a history item.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxSharedPtr< wxWebViewHistoryItem >"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"item"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsEditable":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the web control is currently editable.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsBusy":[
			{
				"return_type":"bool",
				"brief_description":"Returns whether the web control is currently busy (e.g. loading a page).",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasSelection":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if there is a current selection.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GoForward":[
			{
				"return_type":"void",
				"brief_description":"Navigate forward in the history of visited pages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GoBack":[
			{
				"return_type":"void",
				"brief_description":"Navigate back in the history of visited pages.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentTitle":[
			{
				"return_type":"wxString",
				"brief_description":"Get the title of the current web page, or its URL\/path if title is not available.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetCurrentURL":[
			{
				"return_type":"wxString",
				"brief_description":"Get the URL of the currently displayed document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetForwardHistory":[
			{
				"return_type":"wxVector< wxSharedPtr< wxWebViewHistoryItem > >",
				"brief_description":"Returns a list of items in the forward history.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageSource":[
			{
				"return_type":"wxString",
				"brief_description":"Get the HTML source code of the currently displayed document.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPageText":[
			{
				"return_type":"wxString",
				"brief_description":"Get the text of the current page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedSource":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the currently selected source, if any.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSelectedText":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the currently selected text, if any.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetZoom":[
			{
				"return_type":"wxWebViewZoom",
				"brief_description":"Get the zoom factor of the page.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetZoomType":[
			{
				"return_type":"wxWebViewZoomType",
				"brief_description":"Get how the zoom factor is currently interpreted.",
				"constant":true,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxTextCompleterSimple":{
		"GetCompletions":[
			{
				"return_type":"void",
				"brief_description":"Pure virtual method returning all possible completions for the given prefix.",
				"constant":false,
				"virtual":false,
				"pure_virtual":true,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"wxArrayString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"prefix",
					"res"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxTextCompleter"
		]
	},
	"wxMediaCtrl":{
		"Load":[
			{
				"return_type":"bool",
				"brief_description":"Loads the file that fileName refers to.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fileName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Loads the location that uri refers to.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxURI&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"uri"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"bool",
				"brief_description":"Loads the location that uri refers to with the proxy proxy.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxURI&",
					"const wxURI&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"uri",
					"proxy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"_implements":[
			"wxControl"
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates this control.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"fileName",
					"pos",
					"size",
					"style",
					"szBackend",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxEmptyString",
					"wxDefaultValidator",
					"\"mediaCtrl\""
				]
			}
		],
		"GetBestSize":[
			{
				"return_type":"wxSize",
				"brief_description":"Obtains the best size relative to the original\/natural size of the video, if there is any.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPlaybackRate":[
			{
				"return_type":"double",
				"brief_description":"Obtains the playback rate, or speed of the media.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetVolume":[
			{
				"return_type":"double",
				"brief_description":"Gets the volume of the media from a 0.0 to 1.0 range.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Length":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Obtains the length - the total amount of time the movie has in milliseconds.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"LoadURI":[
			{
				"return_type":"bool",
				"brief_description":"Same as Load(const wxURI& uri).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"fileName"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"LoadURIWithProxy":[
			{
				"return_type":"bool",
				"brief_description":"Same as Load(const wxURI& uri, const wxURI& proxy).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"fileName",
					"proxy"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Pause":[
			{
				"return_type":"bool",
				"brief_description":"Pauses playback of the movie.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Play":[
			{
				"return_type":"bool",
				"brief_description":"Resumes playback of the movie.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Seek":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Seeks to a position within the movie.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxFileOffset",
					"wxSeekMode"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"where",
					"mode"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxFromStart"
				]
			}
		],
		"SetPlaybackRate":[
			{
				"return_type":"bool",
				"brief_description":"Sets the playback rate, or speed of the media, to that referred by dRate.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dRate"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetVolume":[
			{
				"return_type":"bool",
				"brief_description":"Sets the volume of the media from a 0.0 to 1.0 range to that referred by dVolume.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dVolume"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowPlayerControls":[
			{
				"return_type":"bool",
				"brief_description":"A special feature to wxMediaCtrl.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxMediaCtrlPlayerControls"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"flags"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxMEDIACTRLPLAYERCONTROLS_DEFAULT"
				]
			}
		],
		"Stop":[
			{
				"return_type":"bool",
				"brief_description":"Stops the media.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxMediaCtrl":[
			{
				"return_type":"",
				"brief_description":"Default constructor - you MUST call Create() before calling any other methods of wxMediaCtrl.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor that calls Create().",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxString&",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&",
					"const wxValidator&",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"fileName",
					"pos",
					"size",
					"style",
					"szBackend",
					"validator",
					"name"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					"wxEmptyString",
					"wxDefaultPosition",
					"wxDefaultSize",
					"0",
					"wxEmptyString",
					"wxDefaultValidator",
					"\"mediaCtrl\""
				]
			}
		],
		"GetState":[
			{
				"return_type":"wxMediaState",
				"brief_description":"Obtains the state the playback of the media is in -.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Tell":[
			{
				"return_type":"wxFileOffset",
				"brief_description":"Obtains the current position in time within the movie in milliseconds.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxURI":{
		"BuildURI":[
			{
				"return_type":"wxString",
				"brief_description":"Builds the URI from its individual components and adds proper separators.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"BuildUnescapedURI":[
			{
				"return_type":"wxString",
				"brief_description":"Builds the URI from its individual components, adds proper separators, and returns escape sequences to normal characters.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"Create":[
			{
				"return_type":"bool",
				"brief_description":"Creates this URI from the uri string.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"uri"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetFragment":[
			{
				"return_type":"const wxString&",
				"brief_description":"Obtains the fragment of this URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetHostType":[
			{
				"return_type":"wxURIHostType",
				"brief_description":"Obtains the host type of this URI, which is one of wxURIHostType.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPassword":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the password part of the userinfo component of this URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPath":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the (normalized) path of the URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetPort":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns a string representation of the URI's port.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxURI":[
			{
				"return_type":"",
				"brief_description":"Creates an empty URI.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor for quick creation.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"uri"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"",
				"brief_description":"Copies this URI from another URI.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxURI&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"uri"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Unescape":[
			{
				"return_type":"wxString",
				"brief_description":"Translates all escape sequences (normal characters and returns the result.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":true,
				"protected":false,
				"parameters_type":[
					"const wxString&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"uri"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"Resolve":[
			{
				"return_type":"void",
				"brief_description":"Inherits this URI from a base URI - components that do not exist in this URI are copied from the base, and if this URI's path is not an absolute path (prefixed by a '\/'), then this URI's path is merged with the base's path.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxURI&",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"base",
					"flags"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"wxURI_STRICT"
				]
			}
		],
		"IsReference":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if a valid [absolute] URI, otherwise this URI is a URI reference and not a full URI, and this function returns false.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasUserInfo":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the User component of the URI exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasServer":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Server component of the URI exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasScheme":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Scheme component of the URI exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasQuery":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Query component of the URI exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasPort":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Port component of the URI exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasPath":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Path component of the URI exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"HasFragment":[
			{
				"return_type":"bool",
				"brief_description":"Returns true if the Fragment component of the URI exists.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUserInfo":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the UserInfo component of the URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetUser":[
			{
				"return_type":"wxString",
				"brief_description":"Returns the username part of the userinfo component of this URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetServer":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the Server component of the URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScheme":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the Scheme component of the URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetQuery":[
			{
				"return_type":"const wxString&",
				"brief_description":"Returns the Query component of the URI.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		]
	},
	"wxMediaEvent":{
		"_implements":[
			"wxNotifyEvent"
		],
		"wxMediaEvent":[
			{
				"return_type":"",
				"brief_description":"Default ctor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxEventType",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"commandType",
					"winid"
				],
				"parameters_required":[

				],
				"parameters_default_value":[
					"wxEVT_NULL",
					"0"
				]
			}
		]
	},
	"wxScrolled":{
		"SetScrollRate":[
			{
				"return_type":"void",
				"brief_description":"Set the horizontal and vertical scrolling increment only.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xstep",
					"ystep"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetScrollbars":[
			{
				"return_type":"void",
				"brief_description":"Sets up vertical and\/or horizontal scrollbars.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int",
					"int",
					"int",
					"int",
					"bool"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"pixelsPerUnitX",
					"pixelsPerUnitY",
					"noUnitsX",
					"noUnitsY",
					"xPos",
					"yPos",
					"noRefresh"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null,
					"0",
					"0",
					"false"
				]
			}
		],
		"SetTargetRect":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxRect&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"rect"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"SetTargetWindow":[
			{
				"return_type":"void",
				"brief_description":"Call this function to tell wxScrolled to perform the actual scrolling on a different window (and not on itself).",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"window"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"ShowScrollbars":[
			{
				"return_type":"void",
				"brief_description":"Set the scrollbar visibility.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxScrollbarVisibility",
					"wxScrollbarVisibility"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"horz",
					"vert"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"StopAutoScrolling":[
			{
				"return_type":"void",
				"brief_description":"Stop generating the scroll events when mouse is held outside the window.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"SetScrollPageSize":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"orient",
					"pageSize"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SetScale":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"double",
					"double"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xs",
					"ys"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"Scroll":[
			{
				"return_type":"void",
				"brief_description":"This is an overload of Scroll(int,int); see that function for more info.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Scrolls a window so the view start is at the given point.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"SendAutoScrollEvents":[
			{
				"return_type":"bool",
				"brief_description":"This method can be overridden in a derived class to forbid sending the auto scroll events - note that unlike StopAutoScrolling() it doesn't stop the timer, so it will be called repeatedly and will typically return different values depending on the current mouse position.",
				"constant":true,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxScrollWinEvent&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"event"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"PrepareDC":[
			{
				"return_type":"void",
				"brief_description":"This function is for backwards compatibility only and simply calls DoPrepareDC() now.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"OnDraw":[
			{
				"return_type":"void",
				"brief_description":"Called by the default paint event handler to allow the application to define painting behaviour without having to worry about calling DoPrepareDC().",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"IsRetained":[
			{
				"return_type":"bool",
				"brief_description":"Motif only: true if the window has a backing bitmap.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"IsAutoScrolling":[
			{
				"return_type":"bool",
				"brief_description":"Are we generating the autoscroll events?",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetViewStart":[
			{
				"return_type":"wxPoint",
				"brief_description":"This is a simple overload of GetViewStart(int*,int*); see that function for more info.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"void",
				"brief_description":"Get the position at which the visible portion of the window starts.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetVirtualSize":[
			{
				"return_type":"void",
				"brief_description":"Gets the size in device units of the scrollable window area (as opposed to the client size, which is the area of the window currently visible).",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"x",
					"y"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetTargetWindow":[
			{
				"return_type":"wxWindow*",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetTargetRect":[
			{
				"return_type":"wxRect",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetSizeAvailableForScrollTarget":[
			{
				"return_type":"wxSize",
				"brief_description":"Function which must be overridden to implement the size available for the scroll target for the given size of the main window.",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":true,
				"parameters_type":[
					"const wxSize&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"size"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetScrollPixelsPerUnit":[
			{
				"return_type":"void",
				"brief_description":"Get the number of pixels per scroll unit (line), in each direction, as set by SetScrollbars().",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xUnit",
					"yUnit"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"GetScrollPageSize":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetScrollLines":[
			{
				"return_type":"int",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"orient"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"GetScaleY":[
			{
				"return_type":"double",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"GetScaleX":[
			{
				"return_type":"double",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"EnableScrolling":[
			{
				"return_type":"void",
				"brief_description":"Enable or disable use of wxWindow::ScrollWindow() for scrolling.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"bool",
					"bool"
				],
				"parameters_is_array":[
					false,
					false
				],
				"parameters_extra":[
					false,
					false
				],
				"parameters_name":[
					"xScrolling",
					"yScrolling"
				],
				"parameters_required":[
					true,
					true
				],
				"parameters_default_value":[
					null,
					null
				]
			}
		],
		"DoPrepareDC":[
			{
				"return_type":"void",
				"brief_description":"Call this function to prepare the device context for drawing a scrolled image.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxDC&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"dc"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			}
		],
		"DisableKeyboardScrolling":[
			{
				"return_type":"void",
				"brief_description":"Disable use of keyboard keys for scrolling.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"CalcUnscrolledPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Translates the device coordinates to the logical ones.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"xx",
					"yy"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"CalcScrolledPosition":[
			{
				"return_type":"wxPoint",
				"brief_description":"",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"const wxPoint&"
				],
				"parameters_is_array":[
					false
				],
				"parameters_extra":[
					false
				],
				"parameters_name":[
					"pt"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null
				]
			},
			{
				"return_type":"void",
				"brief_description":"Translates the logical coordinates to the device ones.",
				"constant":true,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"int",
					"int",
					"int*",
					"int*"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"x",
					"y",
					"xx",
					"yy"
				],
				"parameters_required":[
					true,
					true,
					true,
					true
				],
				"parameters_default_value":[
					null,
					null,
					null,
					null
				]
			}
		],
		"AdjustScrollbars":[
			{
				"return_type":"void",
				"brief_description":"",
				"constant":false,
				"virtual":true,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			}
		],
		"wxScrolled":[
			{
				"return_type":"",
				"brief_description":"Default constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[

				],
				"parameters_is_array":[

				],
				"parameters_extra":[

				],
				"parameters_name":[

				],
				"parameters_required":[

				],
				"parameters_default_value":[

				]
			},
			{
				"return_type":"",
				"brief_description":"Constructor.",
				"constant":false,
				"virtual":false,
				"pure_virtual":false,
				"static":false,
				"protected":false,
				"parameters_type":[
					"wxWindow*",
					"wxWindowID",
					"const wxPoint&",
					"const wxSize&",
					"long",
					"const wxString&"
				],
				"parameters_is_array":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_extra":[
					false,
					false,
					false,
					false,
					false,
					false
				],
				"parameters_name":[
					"parent",
					"id",
					"pos",
					"size",
					"style",
					"name"
				],
				"parameters_required":[
					true
				],
				"parameters_default_value":[
					null,
					"-1",
					"wxDefaultPosition",
					"wxDefaultSize",
					"wxHSCROLL|wxVSCROLL",
					"\"scrolledWindow\""
				]
			}
		]
	}
}
