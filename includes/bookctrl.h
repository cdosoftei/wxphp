/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_BOOKCTRL_H_GUARD
#define WXPHP_BOOKCTRL_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_bookctrl_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxAuiNotebookEvent_entry;
extern zend_object_handlers wxphp_wxAuiNotebookEvent_object_handlers;
void php_wxAuiNotebookEvent_destruction_handler(zend_resource*);

class wxAuiNotebookEvent_php: public wxAuiNotebookEvent{
    public:

    wxAuiNotebookEvent_php(wxEventType command_type=wxEVT_NULL, int win_id=0):wxAuiNotebookEvent(command_type, win_id){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxAuiNotebookEvent{
    wxAuiNotebookEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxAuiNotebookEvent;

void php_wxAuiNotebookEvent_free(zend_object *object);
zend_object* php_wxAuiNotebookEvent_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxAuiNotebookEvent_functions[] = {
    PHP_ME(php_wxAuiNotebookEvent, CloneMethod, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAuiNotebookEvent, __construct, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxAuiNotebookEvent * php_wxAuiNotebookEvent_fetch_object(zend_object *obj) {
    return (zo_wxAuiNotebookEvent *)(
        (char *)(obj) - XtOffsetOf(zo_wxAuiNotebookEvent, zo)
    );
}

#define Z_wxAuiNotebookEvent_P(zv) \
    php_wxAuiNotebookEvent_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBookCtrlBase_entry;
extern zend_object_handlers wxphp_wxBookCtrlBase_object_handlers;
void php_wxBookCtrlBase_destruction_handler(zend_resource*);

class wxBookCtrlBase_php: public wxBookCtrlBase{
    public:

    
    bool InsertPage(size_t index, wxWindow* page, const wxString& text, bool select=false, int imageId=NO_IMAGE);
    bool SetPageImage(size_t page, int image);
    bool SetPageText(size_t page, const wxString& text);
    int SetSelection(size_t page);
    int GetSelection() const;
    wxString GetPageText(size_t nPage) const;
    int GetPageImage(size_t nPage) const;
    int ChangeSelection(size_t page);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBookCtrlBase{
    wxBookCtrlBase_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBookCtrlBase;

void php_wxBookCtrlBase_free(zend_object *object);
zend_object* php_wxBookCtrlBase_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBookCtrlBase_functions[] = {
    PHP_ME(php_wxObject, UnShare, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, UnRef, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, IsSameAs, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, Ref, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, GetClassInfo, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, IsKindOf, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, Connect, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, AddFilter, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, AddPendingEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, DeletePendingEvents, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetEvtHandlerEnabled, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetNextHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetPreviousHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, IsUnlinked, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessEventLocally, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessPendingEvents, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, QueueEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, RemoveFilter, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, SafelyProcessEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, SetEvtHandlerEnabled, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, Unlink, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Show, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowById, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindow, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Enable, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Disable, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Close, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizer, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizerAndFit, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetToolTip, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowStyleFlag, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Update, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UpdateWindowUI, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Validate, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, WarpPointer, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, WindowToClientSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UnsetToolTip, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UnreserveControlId, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, TransferDataToWindow, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, TransferDataFromWindow, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ToggleWindowStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Thaw, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ShouldInheritColours, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetVirtualSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetValidator, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetTransparent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizeHints, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetScrollbar, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetScrollPos, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocus, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocusFromKeyboard, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocusRecursively, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AddChild, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AlwaysShowScrollbars, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CacheBestSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CanScroll, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CanSetTransparent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CaptureMouse, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Center, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CenterOnParent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Centre, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CentreOnParent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClearBackground, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClientToScreen, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClientToWindowSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ConvertDialogToPixels, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ConvertPixelsToDialog, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DragAcceptFiles, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DoUpdateWindowUI, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindFocus, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowByLabel, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowByName, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Fit, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FitInside, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Freeze, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetAutoLayout, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBackgroundColour, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBackgroundStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBestSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBestVirtualSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBorder, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCapture, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCaret, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCharHeight, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCharWidth, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Destroy, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DestroyChildren, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientAreaOrigin, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientRect, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetContainingSizer, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCursor, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetEffectiveMinSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetEventHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetExtraStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetFont, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetForegroundColour, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetGrandParent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHandle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHelpText, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHelpTextAtPoint, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetId, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxClientSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxHeight, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxWidth, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinClientSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinHeight, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinWidth, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetName, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetNextSibling, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetParent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPopupMenuSelectionFromUser, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPosition, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPrevSibling, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetRect, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScreenPosition, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScreenRect, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollPos, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollRange, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollThumb, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetSizer, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetTextExtent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetToolTip, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetToolTipText, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetUpdateClientRect, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetUpdateRegion, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetValidator, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetVirtualSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowBorderSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowStyleFlag, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowVariant, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HandleAsNavigationKey, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HandleWindowEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasCapture, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasExtraStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasFlag, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasFocus, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasMultiplePages, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasScrollbar, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasTransparentBackground, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Hide, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetLayoutDirection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InitDialog, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InheritAttributes, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InformFirstDirection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InvalidateBestSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsBeingDeleted, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsDoubleBuffered, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsEnabled, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsExposed, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsFrozen, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsRetained, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsScrollbarAlwaysShown, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsShown, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsShownOnScreen, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsThisEnabled, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsTopLevel, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Layout, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, LineDown, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, LineUp, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Lower, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Move, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, MoveAfterInTabOrder, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, MoveBeforeInTabOrder, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Navigate, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, NavigateIn, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, NewControlId, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PageDown, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PageUp, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PopupMenu, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PostSizeEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PostSizeEventToParent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ProcessWindowEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ProcessWindowEventLocally, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PushEventHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Raise, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Refresh, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RefreshRect, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ReleaseMouse, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RemoveChild, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RemoveEventHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Reparent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScreenToClient, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScrollLines, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScrollPages, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SendSizeEvent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SendSizeEventToParent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetAutoLayout, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetBackgroundColour, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetBackgroundStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCanFocus, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCaret, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetClientSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetConstraints, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetContainingSizer, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCursor, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetDropTarget, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetEventHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetExtraStyle, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFocus, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFocusFromKbd, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFont, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetForegroundColour, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetHelpText, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetId, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetInitialSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetLayoutDirection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMaxClientSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMaxSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMinClientSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMinSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetName, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetNextHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnBackgroundColour, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnFont, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnForegroundColour, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetPosition, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetPreviousHandler, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetThemeEnabled, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowVariant, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, GetLabelText, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, SetLabelMarkup, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, SetLabelText, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, RemoveMnemonics, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, SetLabel, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, GetLabel, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, EscapeMnemonics, arginfo_tmp_placeholder, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxControl, Command, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWithImages, SetImageList, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWithImages, GetImageList, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWithImages, AssignImageList, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, Create, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, AddPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, AdvanceSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, DeleteAllPages, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, DeletePage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, GetCurrentPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, GetPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, GetPageCount, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, HitTest, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, RemovePage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlBase, SetPageSize, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxBookCtrlBase * php_wxBookCtrlBase_fetch_object(zend_object *obj) {
    return (zo_wxBookCtrlBase *)(
        (char *)(obj) - XtOffsetOf(zo_wxBookCtrlBase, zo)
    );
}

#define Z_wxBookCtrlBase_P(zv) \
    php_wxBookCtrlBase_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxBookCtrlEvent_entry;
extern zend_object_handlers wxphp_wxBookCtrlEvent_object_handlers;
void php_wxBookCtrlEvent_destruction_handler(zend_resource*);

class wxBookCtrlEvent_php: public wxBookCtrlEvent{
    public:

    wxBookCtrlEvent_php(wxEventType eventType=wxEVT_NULL, int id=0, int sel=wxNOT_FOUND, int oldSel=wxNOT_FOUND):wxBookCtrlEvent(eventType, id, sel, oldSel){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxBookCtrlEvent{
    wxBookCtrlEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxBookCtrlEvent;

void php_wxBookCtrlEvent_free(zend_object *object);
zend_object* php_wxBookCtrlEvent_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxBookCtrlEvent_functions[] = {
    PHP_ME(php_wxBookCtrlEvent, GetOldSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlEvent, GetSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlEvent, SetOldSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlEvent, SetSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxBookCtrlEvent, __construct, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxBookCtrlEvent * php_wxBookCtrlEvent_fetch_object(zend_object *obj) {
    return (zo_wxBookCtrlEvent *)(
        (char *)(obj) - XtOffsetOf(zo_wxBookCtrlEvent, zo)
    );
}

#define Z_wxBookCtrlEvent_P(zv) \
    php_wxBookCtrlEvent_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxChoicebook_entry;
extern zend_object_handlers wxphp_wxChoicebook_object_handlers;
void php_wxChoicebook_destruction_handler(zend_resource*);

class wxChoicebook_php: public wxChoicebook{
    public:

    wxChoicebook_php():wxChoicebook(){}
    wxChoicebook_php(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0, const wxString& name=wxEmptyString):wxChoicebook(parent, id, pos, size, style, name){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxChoicebook{
    wxChoicebook_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxChoicebook;

void php_wxChoicebook_free(zend_object *object);
zend_object* php_wxChoicebook_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxChoicebook_functions[] = {
    PHP_ME(php_wxChoicebook, GetChoiceCtrl, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxChoicebook, __construct, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxChoicebook * php_wxChoicebook_fetch_object(zend_object *obj) {
    return (zo_wxChoicebook *)(
        (char *)(obj) - XtOffsetOf(zo_wxChoicebook, zo)
    );
}

#define Z_wxChoicebook_P(zv) \
    php_wxChoicebook_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxListbook_entry;
extern zend_object_handlers wxphp_wxListbook_object_handlers;
void php_wxListbook_destruction_handler(zend_resource*);

class wxListbook_php: public wxListbook{
    public:

    wxListbook_php():wxListbook(){}
    wxListbook_php(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0, const wxString& name=wxEmptyString):wxListbook(parent, id, pos, size, style, name){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxListbook{
    wxListbook_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxListbook;

void php_wxListbook_free(zend_object *object);
zend_object* php_wxListbook_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxListbook_functions[] = {
    PHP_ME(php_wxListbook, __construct, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxListbook, GetListView, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxListbook * php_wxListbook_fetch_object(zend_object *obj) {
    return (zo_wxListbook *)(
        (char *)(obj) - XtOffsetOf(zo_wxListbook, zo)
    );
}

#define Z_wxListbook_P(zv) \
    php_wxListbook_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxNotebook_entry;
extern zend_object_handlers wxphp_wxNotebook_object_handlers;
void php_wxNotebook_destruction_handler(zend_resource*);

class wxNotebook_php: public wxNotebook{
    public:

    wxNotebook_php():wxNotebook(){}
    wxNotebook_php(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0, const wxString& name=wxNotebookNameStr):wxNotebook(parent, id, pos, size, style, name){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxNotebook{
    wxNotebook_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxNotebook;

void php_wxNotebook_free(zend_object *object);
zend_object* php_wxNotebook_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxNotebook_functions[] = {
    PHP_ME(php_wxNotebook, ChangeSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, Create, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, GetPageImage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, GetPageText, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, GetRowCount, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, GetSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, GetThemeBackgroundColour, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, InsertPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, SetPadding, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, SetPageImage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, SetPageText, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, SetSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNotebook, __construct, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxNotebook * php_wxNotebook_fetch_object(zend_object *obj) {
    return (zo_wxNotebook *)(
        (char *)(obj) - XtOffsetOf(zo_wxNotebook, zo)
    );
}

#define Z_wxNotebook_P(zv) \
    php_wxNotebook_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxToolbook_entry;
extern zend_object_handlers wxphp_wxToolbook_object_handlers;
void php_wxToolbook_destruction_handler(zend_resource*);

class wxToolbook_php: public wxToolbook{
    public:

    wxToolbook_php():wxToolbook(){}
    wxToolbook_php(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=0, const wxString& name=wxEmptyString):wxToolbook(parent, id, pos, size, style, name){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxToolbook{
    wxToolbook_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxToolbook;

void php_wxToolbook_free(zend_object *object);
zend_object* php_wxToolbook_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxToolbook_functions[] = {
    PHP_ME(php_wxToolbook, __construct, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxToolbook * php_wxToolbook_fetch_object(zend_object *obj) {
    return (zo_wxToolbook *)(
        (char *)(obj) - XtOffsetOf(zo_wxToolbook, zo)
    );
}

#define Z_wxToolbook_P(zv) \
    php_wxToolbook_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTreebook_entry;
extern zend_object_handlers wxphp_wxTreebook_object_handlers;
void php_wxTreebook_destruction_handler(zend_resource*);

class wxTreebook_php: public wxTreebook{
    public:

    wxTreebook_php():wxTreebook(){}
    wxTreebook_php(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxBK_DEFAULT, const wxString& name=wxEmptyString):wxTreebook(parent, id, pos, size, style, name){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTreebook{
    wxTreebook_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTreebook;

void php_wxTreebook_free(zend_object *object);
zend_object* php_wxTreebook_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTreebook_functions[] = {
    PHP_ME(php_wxTreebook, AddPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, AddSubPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, CollapseNode, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, Create, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, DeletePage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, ExpandNode, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, GetPageParent, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, GetSelection, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, InsertPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, InsertSubPage, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, IsNodeExpanded, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTreebook, __construct, arginfo_tmp_placeholder, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTreebook * php_wxTreebook_fetch_object(zend_object *obj) {
    return (zo_wxTreebook *)(
        (char *)(obj) - XtOffsetOf(zo_wxTreebook, zo)
    );
}

#define Z_wxTreebook_P(zv) \
    php_wxTreebook_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_BOOKCTRL_H_GUARD
