/*
 * @author Mário Soares
 * @contributors Jefferson González
 * @contributors René Vögeli / Rangee GmbH
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_GRID_H_GUARD
#define WXPHP_GRID_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_grid_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxGridCellRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellRenderer_object_handlers;
void php_wxGridCellRenderer_destruction_handler(zend_resource*);

class wxGridCellRenderer_php: public wxGridCellRenderer{
    public:

    
    wxSize GetBestSize(wxGrid& grid, wxGridCellAttr& attr, wxDC& dc, int row, int col);
    void Draw(wxGrid& grid, wxGridCellAttr& attr, wxDC& dc, const wxRect& rect, int row, int col, bool isSelected);
    wxGridCellRenderer* Clone() const;
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellRenderer{
    wxGridCellRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellRenderer;

void php_wxGridCellRenderer_free(void *object);
zend_object* php_wxGridCellRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellRenderer_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxGridCellRenderer * php_wxGridCellRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellRenderer, zo)
    );
}

#define Z_wxGridCellRenderer_P(zv) \
    php_wxGridCellRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellAutoWrapStringRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellAutoWrapStringRenderer_object_handlers;
void php_wxGridCellAutoWrapStringRenderer_destruction_handler(zend_resource*);

class wxGridCellAutoWrapStringRenderer_php: public wxGridCellAutoWrapStringRenderer{
    public:

    wxGridCellAutoWrapStringRenderer_php():wxGridCellAutoWrapStringRenderer(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellAutoWrapStringRenderer{
    wxGridCellAutoWrapStringRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellAutoWrapStringRenderer;

void php_wxGridCellAutoWrapStringRenderer_free(void *object);
zend_object* php_wxGridCellAutoWrapStringRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellAutoWrapStringRenderer_functions[] = {
    PHP_ME(php_wxGridCellAutoWrapStringRenderer, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellAutoWrapStringRenderer * php_wxGridCellAutoWrapStringRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellAutoWrapStringRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellAutoWrapStringRenderer, zo)
    );
}

#define Z_wxGridCellAutoWrapStringRenderer_P(zv) \
    php_wxGridCellAutoWrapStringRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellBoolRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellBoolRenderer_object_handlers;
void php_wxGridCellBoolRenderer_destruction_handler(zend_resource*);

class wxGridCellBoolRenderer_php: public wxGridCellBoolRenderer{
    public:

    wxGridCellBoolRenderer_php():wxGridCellBoolRenderer(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellBoolRenderer{
    wxGridCellBoolRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellBoolRenderer;

void php_wxGridCellBoolRenderer_free(void *object);
zend_object* php_wxGridCellBoolRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellBoolRenderer_functions[] = {
    PHP_ME(php_wxGridCellBoolRenderer, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellBoolRenderer * php_wxGridCellBoolRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellBoolRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellBoolRenderer, zo)
    );
}

#define Z_wxGridCellBoolRenderer_P(zv) \
    php_wxGridCellBoolRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellDateTimeRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellDateTimeRenderer_object_handlers;
void php_wxGridCellDateTimeRenderer_destruction_handler(zend_resource*);

class wxGridCellDateTimeRenderer_php: public wxGridCellDateTimeRenderer{
    public:

    wxGridCellDateTimeRenderer_php(const wxString& outformat=wxDefaultDateTimeFormat, const wxString& informat=wxDefaultDateTimeFormat):wxGridCellDateTimeRenderer(outformat, informat){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellDateTimeRenderer{
    wxGridCellDateTimeRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellDateTimeRenderer;

void php_wxGridCellDateTimeRenderer_free(void *object);
zend_object* php_wxGridCellDateTimeRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellDateTimeRenderer_functions[] = {
    PHP_ME(php_wxGridCellDateTimeRenderer, SetParameters, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellDateTimeRenderer, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellDateTimeRenderer * php_wxGridCellDateTimeRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellDateTimeRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellDateTimeRenderer, zo)
    );
}

#define Z_wxGridCellDateTimeRenderer_P(zv) \
    php_wxGridCellDateTimeRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellEnumRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellEnumRenderer_object_handlers;
void php_wxGridCellEnumRenderer_destruction_handler(zend_resource*);

class wxGridCellEnumRenderer_php: public wxGridCellEnumRenderer{
    public:

    wxGridCellEnumRenderer_php(const wxString& choices=wxEmptyString):wxGridCellEnumRenderer(choices){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellEnumRenderer{
    wxGridCellEnumRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellEnumRenderer;

void php_wxGridCellEnumRenderer_free(void *object);
zend_object* php_wxGridCellEnumRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellEnumRenderer_functions[] = {
    PHP_ME(php_wxGridCellEnumRenderer, SetParameters, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEnumRenderer, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellEnumRenderer * php_wxGridCellEnumRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellEnumRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellEnumRenderer, zo)
    );
}

#define Z_wxGridCellEnumRenderer_P(zv) \
    php_wxGridCellEnumRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellFloatRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellFloatRenderer_object_handlers;
void php_wxGridCellFloatRenderer_destruction_handler(zend_resource*);

class wxGridCellFloatRenderer_php: public wxGridCellFloatRenderer{
    public:

    wxGridCellFloatRenderer_php(int width=-1, int precision=-1, int format=wxGRID_FLOAT_FORMAT_DEFAULT):wxGridCellFloatRenderer(width, precision, format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellFloatRenderer{
    wxGridCellFloatRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellFloatRenderer;

void php_wxGridCellFloatRenderer_free(void *object);
zend_object* php_wxGridCellFloatRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellFloatRenderer_functions[] = {
    PHP_ME(php_wxGridCellFloatRenderer, GetFormat, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellFloatRenderer, GetPrecision, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellFloatRenderer, GetWidth, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellFloatRenderer, SetFormat, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellFloatRenderer, SetParameters, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellFloatRenderer, SetPrecision, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellFloatRenderer, SetWidth, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellFloatRenderer, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellFloatRenderer * php_wxGridCellFloatRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellFloatRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellFloatRenderer, zo)
    );
}

#define Z_wxGridCellFloatRenderer_P(zv) \
    php_wxGridCellFloatRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellNumberRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellNumberRenderer_object_handlers;
void php_wxGridCellNumberRenderer_destruction_handler(zend_resource*);

class wxGridCellNumberRenderer_php: public wxGridCellNumberRenderer{
    public:

    wxGridCellNumberRenderer_php():wxGridCellNumberRenderer(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellNumberRenderer{
    wxGridCellNumberRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellNumberRenderer;

void php_wxGridCellNumberRenderer_free(void *object);
zend_object* php_wxGridCellNumberRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellNumberRenderer_functions[] = {
    PHP_ME(php_wxGridCellNumberRenderer, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellNumberRenderer * php_wxGridCellNumberRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellNumberRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellNumberRenderer, zo)
    );
}

#define Z_wxGridCellNumberRenderer_P(zv) \
    php_wxGridCellNumberRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellStringRenderer_entry;
extern zend_object_handlers wxphp_wxGridCellStringRenderer_object_handlers;
void php_wxGridCellStringRenderer_destruction_handler(zend_resource*);

class wxGridCellStringRenderer_php: public wxGridCellStringRenderer{
    public:

    wxGridCellStringRenderer_php():wxGridCellStringRenderer(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellStringRenderer{
    wxGridCellStringRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellStringRenderer;

void php_wxGridCellStringRenderer_free(void *object);
zend_object* php_wxGridCellStringRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellStringRenderer_functions[] = {
    PHP_ME(php_wxGridCellStringRenderer, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellStringRenderer * php_wxGridCellStringRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCellStringRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellStringRenderer, zo)
    );
}

#define Z_wxGridCellStringRenderer_P(zv) \
    php_wxGridCellStringRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellEditor_entry;
extern zend_object_handlers wxphp_wxGridCellEditor_object_handlers;
void php_wxGridCellEditor_destruction_handler(zend_resource*);

class wxGridCellEditor_php: public wxGridCellEditor{
    public:

    
    void ApplyEdit(int row, int col, wxGrid* grid);
    void BeginEdit(int row, int col, wxGrid* grid);
    wxGridCellEditor* Clone() const;
    void Create(wxWindow* parent, wxWindowID id, wxEvtHandler* evtHandler);
    bool EndEdit(int row, int col, const wxGrid* grid, const wxString& oldval, wxString* newval);
    void Reset();
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellEditor{
    wxGridCellEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellEditor;

void php_wxGridCellEditor_free(void *object);
zend_object* php_wxGridCellEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellEditor_functions[] = {
    PHP_ME(php_wxGridCellEditor, PaintBackground, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEditor, Destroy, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEditor, HandleReturn, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEditor, IsCreated, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEditor, SetSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEditor, Show, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEditor, StartingClick, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellEditor, StartingKey, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellEditor * php_wxGridCellEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellEditor, zo)
    );
}

#define Z_wxGridCellEditor_P(zv) \
    php_wxGridCellEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellAutoWrapStringEditor_entry;
extern zend_object_handlers wxphp_wxGridCellAutoWrapStringEditor_object_handlers;
void php_wxGridCellAutoWrapStringEditor_destruction_handler(zend_resource*);

class wxGridCellAutoWrapStringEditor_php: public wxGridCellAutoWrapStringEditor{
    public:

    wxGridCellAutoWrapStringEditor_php():wxGridCellAutoWrapStringEditor(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellAutoWrapStringEditor{
    wxGridCellAutoWrapStringEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellAutoWrapStringEditor;

void php_wxGridCellAutoWrapStringEditor_free(void *object);
zend_object* php_wxGridCellAutoWrapStringEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellAutoWrapStringEditor_functions[] = {
    PHP_ME(php_wxGridCellAutoWrapStringEditor, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellAutoWrapStringEditor * php_wxGridCellAutoWrapStringEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellAutoWrapStringEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellAutoWrapStringEditor, zo)
    );
}

#define Z_wxGridCellAutoWrapStringEditor_P(zv) \
    php_wxGridCellAutoWrapStringEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellBoolEditor_entry;
extern zend_object_handlers wxphp_wxGridCellBoolEditor_object_handlers;
void php_wxGridCellBoolEditor_destruction_handler(zend_resource*);

class wxGridCellBoolEditor_php: public wxGridCellBoolEditor{
    public:

    wxGridCellBoolEditor_php():wxGridCellBoolEditor(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellBoolEditor{
    wxGridCellBoolEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellBoolEditor;

void php_wxGridCellBoolEditor_free(void *object);
zend_object* php_wxGridCellBoolEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellBoolEditor_functions[] = {
    PHP_ME(php_wxGridCellBoolEditor, IsTrueValue, arginfo_null, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellBoolEditor, UseStringValues, arginfo_null, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellBoolEditor, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellBoolEditor * php_wxGridCellBoolEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellBoolEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellBoolEditor, zo)
    );
}

#define Z_wxGridCellBoolEditor_P(zv) \
    php_wxGridCellBoolEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellChoiceEditor_entry;
extern zend_object_handlers wxphp_wxGridCellChoiceEditor_object_handlers;
void php_wxGridCellChoiceEditor_destruction_handler(zend_resource*);

class wxGridCellChoiceEditor_php: public wxGridCellChoiceEditor{
    public:

    wxGridCellChoiceEditor_php(const wxArrayString& choices, bool allowOthers=false):wxGridCellChoiceEditor(choices, allowOthers){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellChoiceEditor{
    wxGridCellChoiceEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellChoiceEditor;

void php_wxGridCellChoiceEditor_free(void *object);
zend_object* php_wxGridCellChoiceEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellChoiceEditor_functions[] = {
    PHP_ME(php_wxGridCellChoiceEditor, SetParameters, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellChoiceEditor, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellChoiceEditor * php_wxGridCellChoiceEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellChoiceEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellChoiceEditor, zo)
    );
}

#define Z_wxGridCellChoiceEditor_P(zv) \
    php_wxGridCellChoiceEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellEnumEditor_entry;
extern zend_object_handlers wxphp_wxGridCellEnumEditor_object_handlers;
void php_wxGridCellEnumEditor_destruction_handler(zend_resource*);

class wxGridCellEnumEditor_php: public wxGridCellEnumEditor{
    public:

    wxGridCellEnumEditor_php(const wxString& choices=wxEmptyString):wxGridCellEnumEditor(choices){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellEnumEditor{
    wxGridCellEnumEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellEnumEditor;

void php_wxGridCellEnumEditor_free(void *object);
zend_object* php_wxGridCellEnumEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellEnumEditor_functions[] = {
    PHP_ME(php_wxGridCellEnumEditor, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellEnumEditor * php_wxGridCellEnumEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellEnumEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellEnumEditor, zo)
    );
}

#define Z_wxGridCellEnumEditor_P(zv) \
    php_wxGridCellEnumEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellTextEditor_entry;
extern zend_object_handlers wxphp_wxGridCellTextEditor_object_handlers;
void php_wxGridCellTextEditor_destruction_handler(zend_resource*);

class wxGridCellTextEditor_php: public wxGridCellTextEditor{
    public:

    wxGridCellTextEditor_php(size_t maxChars=0):wxGridCellTextEditor(maxChars){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellTextEditor{
    wxGridCellTextEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellTextEditor;

void php_wxGridCellTextEditor_free(void *object);
zend_object* php_wxGridCellTextEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellTextEditor_functions[] = {
    PHP_ME(php_wxGridCellTextEditor, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxGridCellTextEditor, SetParameters, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellTextEditor * php_wxGridCellTextEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellTextEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellTextEditor, zo)
    );
}

#define Z_wxGridCellTextEditor_P(zv) \
    php_wxGridCellTextEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellFloatEditor_entry;
extern zend_object_handlers wxphp_wxGridCellFloatEditor_object_handlers;
void php_wxGridCellFloatEditor_destruction_handler(zend_resource*);

class wxGridCellFloatEditor_php: public wxGridCellFloatEditor{
    public:

    wxGridCellFloatEditor_php(int width=-1, int precision=-1, int format=wxGRID_FLOAT_FORMAT_DEFAULT):wxGridCellFloatEditor(width, precision, format){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellFloatEditor{
    wxGridCellFloatEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellFloatEditor;

void php_wxGridCellFloatEditor_free(void *object);
zend_object* php_wxGridCellFloatEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellFloatEditor_functions[] = {
    PHP_ME(php_wxGridCellFloatEditor, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxGridCellFloatEditor, SetParameters, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellFloatEditor * php_wxGridCellFloatEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellFloatEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellFloatEditor, zo)
    );
}

#define Z_wxGridCellFloatEditor_P(zv) \
    php_wxGridCellFloatEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellNumberEditor_entry;
extern zend_object_handlers wxphp_wxGridCellNumberEditor_object_handlers;
void php_wxGridCellNumberEditor_destruction_handler(zend_resource*);

class wxGridCellNumberEditor_php: public wxGridCellNumberEditor{
    public:

    wxGridCellNumberEditor_php(int min=-1, int max=-1):wxGridCellNumberEditor(min, max){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellNumberEditor{
    wxGridCellNumberEditor_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellNumberEditor;

void php_wxGridCellNumberEditor_free(void *object);
zend_object* php_wxGridCellNumberEditor_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellNumberEditor_functions[] = {
    PHP_ME(php_wxGridCellNumberEditor, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxGridCellNumberEditor, SetParameters, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellNumberEditor * php_wxGridCellNumberEditor_fetch_object(zend_object *obj) {
    return (zo_wxGridCellNumberEditor *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellNumberEditor, zo)
    );
}

#define Z_wxGridCellNumberEditor_P(zv) \
    php_wxGridCellNumberEditor_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellAttr_entry;
extern zend_object_handlers wxphp_wxGridCellAttr_object_handlers;
void php_wxGridCellAttr_destruction_handler(zend_resource*);

class wxGridCellAttr_php: public wxGridCellAttr{
    public:

    wxGridCellAttr_php(wxGridCellAttr* attrDefault=NULL):wxGridCellAttr(attrDefault){}
    wxGridCellAttr_php(const wxColour& colText, const wxColour& colBack, const wxFont& font, int hAlign, int vAlign):wxGridCellAttr(colText, colBack, font, hAlign, vAlign){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellAttr{
    wxGridCellAttr_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellAttr;

void php_wxGridCellAttr_free(void *object);
zend_object* php_wxGridCellAttr_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellAttr_functions[] = {
    PHP_ME(php_wxGridCellAttr, CloneMethod, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, DecRef, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, GetAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, GetBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, GetEditor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, GetFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, GetNonDefaultAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, GetRenderer, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, GetTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, HasAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, HasBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, HasEditor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, HasFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, HasRenderer, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, HasTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, IncRef, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, IsReadOnly, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetDefAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetEditor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetReadOnly, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetRenderer, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, SetTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttr, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellAttr * php_wxGridCellAttr_fetch_object(zend_object *obj) {
    return (zo_wxGridCellAttr *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellAttr, zo)
    );
}

#define Z_wxGridCellAttr_P(zv) \
    php_wxGridCellAttr_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridTableBase_entry;
extern zend_object_handlers wxphp_wxGridTableBase_object_handlers;
void php_wxGridTableBase_destruction_handler(zend_resource*);

class wxGridTableBase_php: public wxGridTableBase{
    public:

    wxGridTableBase_php():wxGridTableBase(){}
    
    int GetNumberCols();
    int GetNumberRows();
    wxString GetValue(int row, int col);
    void SetValue(int row, int col, const wxString& value);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridTableBase{
    wxGridTableBase_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridTableBase;

void php_wxGridTableBase_free(void *object);
zend_object* php_wxGridTableBase_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridTableBase_functions[] = {
    PHP_ME(php_wxGridTableBase, AppendCols, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, AppendRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, CanGetValueAs, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, CanHaveAttributes, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, CanSetValueAs, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, Clear, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, DeleteCols, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, DeleteRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetAttrProvider, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetColLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetColsCount, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetRowLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetRowsCount, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetTypeName, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetValueAsBool, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetValueAsCustom, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetValueAsDouble, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetValueAsLong, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, GetView, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, InsertCols, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, InsertRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, IsEmpty, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, IsEmptyCell, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetAttrProvider, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetColAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetColLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetRowAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetRowLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetValueAsBool, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetValueAsCustom, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetValueAsDouble, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetValueAsLong, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, SetView, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridTableBase, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridTableBase * php_wxGridTableBase_fetch_object(zend_object *obj) {
    return (zo_wxGridTableBase *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridTableBase, zo)
    );
}

#define Z_wxGridTableBase_P(zv) \
    php_wxGridTableBase_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridSizesInfo_entry;
extern zend_object_handlers wxphp_wxGridSizesInfo_object_handlers;
void php_wxGridSizesInfo_destruction_handler(zend_resource*);

class wxGridSizesInfo_php: public wxGridSizesInfo{
    public:

    wxGridSizesInfo_php():wxGridSizesInfo(){}
    
    
    void InitProperties(){
        properties = new void*[2];

        properties[0] = &m_sizeDefault;
        properties[1] = &m_customSizes;
        
    }

    void UninitProperties(){
        delete[] properties;
    }

    void** properties;

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridSizesInfo{
    wxGridSizesInfo_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridSizesInfo;

void php_wxGridSizesInfo_free(void *object);
zend_object* php_wxGridSizesInfo_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridSizesInfo_functions[] = {
    PHP_ME(php_wxGridSizesInfo, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxGridSizesInfo, GetSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridSizesInfo, __get, wxphp_grid_get_args, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridSizesInfo * php_wxGridSizesInfo_fetch_object(zend_object *obj) {
    return (zo_wxGridSizesInfo *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridSizesInfo, zo)
    );
}

#define Z_wxGridSizesInfo_P(zv) \
    php_wxGridSizesInfo_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGrid_entry;
extern zend_object_handlers wxphp_wxGrid_object_handlers;
void php_wxGrid_destruction_handler(zend_resource*);

class wxGrid_php: public wxGrid{
    public:

    wxGrid_php():wxGrid(){}
    wxGrid_php(wxWindow* parent, wxWindowID id, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxWANTS_CHARS, const wxString& name=wxGridNameStr):wxGrid(parent, id, pos, size, style, name){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGrid{
    wxGrid_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGrid;

void php_wxGrid_free(void *object);
zend_object* php_wxGrid_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGrid_functions[] = {
    PHP_ME(php_wxGrid, AppendCols, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AppendRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AreHorzGridLinesClipped, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AreVertGridLinesClipped, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AutoSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AutoSizeColLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AutoSizeColumn, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AutoSizeColumns, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AutoSizeRow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AutoSizeRowLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, AutoSizeRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, BeginBatch, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, BlockToDeviceRect, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CanDragCell, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CanDragColMove, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CanDragColSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CanDragGridSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CanDragRowSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CanEnableCellControl, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CellToRect, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ClearGrid, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ClearSelection, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ClipHorzGridLines, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ClipVertGridLines, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, Create, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, CreateGrid, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DeleteCols, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DeleteRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DisableCellEditControl, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DisableColResize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DisableDragColMove, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DisableDragColSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DisableDragGridSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DisableDragRowSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, DisableRowResize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableCellEditControl, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableDragCell, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableDragColMove, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableDragColSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableDragGridSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableDragRowSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableEditing, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EnableGridLines, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, EndBatch, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, Fit, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ForceRefresh, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetBatchCount, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellEditor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellRenderer, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetCellValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColAt, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColGridLinePen, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColLabelAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColLabelTextOrientation, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColMinimalAcceptableWidth, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColPos, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetColSizes, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultCellAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultCellBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultCellFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultCellTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultColLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultColSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultEditor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultEditorForCell, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultEditorForType, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultGridLinePen, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultRenderer, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultRendererForCell, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultRendererForType, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultRowLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetDefaultRowSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridColHeader, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridColLabelWindow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridCornerLabelWindow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridCursorCol, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridCursorRow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridLineColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridRowLabelWindow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetGridWindow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetLabelBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetLabelFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetLabelTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetNumberCols, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetNumberRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetOrCreateCellAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetRowGridLinePen, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetRowLabelAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetRowLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetRowLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetRowMinimalAcceptableHeight, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetRowSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetRowSizes, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetScrollLineX, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetScrollLineY, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetSelectionBackground, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetSelectionForeground, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetSelectionMode, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetSortingColumn, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GetTable, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GoToCell, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, GridLinesEnabled, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, HideCellEditControl, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, HideCol, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, HideColLabels, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, HideRow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, HideRowLabels, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, InsertCols, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, InsertRows, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsCellEditControlEnabled, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsCurrentCellReadOnly, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsEditable, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsColShown, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsInSelection, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsReadOnly, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsRowShown, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsSelection, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsSortOrderAscending, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsSortingBy, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, IsVisible, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MakeCellVisible, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorDown, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorDownBlock, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorLeft, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorLeftBlock, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorRight, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorRightBlock, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorUp, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MoveCursorUpBlock, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MovePageDown, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, MovePageUp, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, RefreshAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, RegisterDataType, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ResetColPos, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SaveEditControlValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SelectAll, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SelectBlock, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SelectCol, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SelectRow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellEditor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellRenderer, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetCellValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColFormatBool, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColFormatCustom, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColFormatFloat, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColFormatNumber, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColLabelAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColLabelTextOrientation, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColMinimalAcceptableWidth, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColMinimalWidth, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColPos, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetColSizes, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultCellAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultCellBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultCellFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultCellTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultColSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultEditor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultRenderer, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetDefaultRowSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetGridCursor, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetGridLineColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetLabelBackgroundColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetLabelFont, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetLabelTextColour, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetMargins, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetReadOnly, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowAttr, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowLabelAlignment, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowLabelSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowLabelValue, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowMinimalAcceptableHeight, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowMinimalHeight, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowSize, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetRowSizes, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetScrollLineX, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetScrollLineY, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetSelectionBackground, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetSelectionForeground, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetSelectionMode, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetSortingColumn, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetTable, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, SetUseNativeColLabels, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ShowCellEditControl, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ShowCol, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, ShowRow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, UnsetSortingColumn, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, UseNativeColHeader, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, XToCol, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, XToEdgeOfCol, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, XYToCell, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, YToEdgeOfRow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, YToRow, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGrid, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGrid * php_wxGrid_fetch_object(zend_object *obj) {
    return (zo_wxGrid *)(
        (char *)(obj) - XtOffsetOf(zo_wxGrid, zo)
    );
}

#define Z_wxGrid_P(zv) \
    php_wxGrid_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridUpdateLocker_entry;
extern zend_object_handlers wxphp_wxGridUpdateLocker_object_handlers;
void php_wxGridUpdateLocker_destruction_handler(zend_resource*);

class wxGridUpdateLocker_php: public wxGridUpdateLocker{
    public:

    wxGridUpdateLocker_php(wxGrid* grid=NULL):wxGridUpdateLocker(grid){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridUpdateLocker{
    wxGridUpdateLocker_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridUpdateLocker;

void php_wxGridUpdateLocker_free(void *object);
zend_object* php_wxGridUpdateLocker_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridUpdateLocker_functions[] = {
    PHP_ME(php_wxGridUpdateLocker, Create, arginfo_null, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridUpdateLocker, __construct, arginfo_null, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridUpdateLocker * php_wxGridUpdateLocker_fetch_object(zend_object *obj) {
    return (zo_wxGridUpdateLocker *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridUpdateLocker, zo)
    );
}

#define Z_wxGridUpdateLocker_P(zv) \
    php_wxGridUpdateLocker_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_GRID_H_GUARD
